{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":35},"end":{"line":4,"column":72,"index":107}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"swr","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":108},"end":{"line":5,"column":25,"index":133}}],"key":"E9cr4azDYB6m3//Bf/QNSY9us10=","exportNames":["*"],"imports":1}},{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":223,"column":0,"index":7512},"end":{"line":223,"column":51,"index":7563}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use client';\n\n  // react/use-chat.ts\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"experimental_useAssistant\", {\n    enumerable: true,\n    get: function () {\n      return experimental_useAssistant;\n    }\n  });\n  Object.defineProperty(exports, \"useChat\", {\n    enumerable: true,\n    get: function () {\n      return useChat;\n    }\n  });\n  Object.defineProperty(exports, \"useCompletion\", {\n    enumerable: true,\n    get: function () {\n      return useCompletion;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _swr = require(_dependencyMap[1], \"swr\");\n  var useSWR = _interopDefault(_swr);\n  var _nanoidNonSecure = require(_dependencyMap[2], \"nanoid/non-secure\");\n  // shared/stream-parts.ts\n  var textStreamPart = {\n    code: \"0\",\n    name: \"text\",\n    parse: value => {\n      if (typeof value !== \"string\") {\n        throw new Error('\"text\" parts expect a string value.');\n      }\n      return {\n        type: \"text\",\n        value\n      };\n    }\n  };\n  var functionCallStreamPart = {\n    code: \"1\",\n    name: \"function_call\",\n    parse: value => {\n      if (value == null || typeof value !== \"object\" || !(\"function_call\" in value) || typeof value.function_call !== \"object\" || value.function_call == null || !(\"name\" in value.function_call) || !(\"arguments\" in value.function_call) || typeof value.function_call.name !== \"string\" || typeof value.function_call.arguments !== \"string\") {\n        throw new Error('\"function_call\" parts expect an object with a \"function_call\" property.');\n      }\n      return {\n        type: \"function_call\",\n        value\n      };\n    }\n  };\n  var dataStreamPart = {\n    code: \"2\",\n    name: \"data\",\n    parse: value => {\n      if (!Array.isArray(value)) {\n        throw new Error('\"data\" parts expect an array value.');\n      }\n      return {\n        type: \"data\",\n        value\n      };\n    }\n  };\n  var errorStreamPart = {\n    code: \"3\",\n    name: \"error\",\n    parse: value => {\n      if (typeof value !== \"string\") {\n        throw new Error('\"error\" parts expect a string value.');\n      }\n      return {\n        type: \"error\",\n        value\n      };\n    }\n  };\n  var assistantMessageStreamPart = {\n    code: \"4\",\n    name: \"assistant_message\",\n    parse: value => {\n      if (value == null || typeof value !== \"object\" || !(\"id\" in value) || !(\"role\" in value) || !(\"content\" in value) || typeof value.id !== \"string\" || typeof value.role !== \"string\" || value.role !== \"assistant\" || !Array.isArray(value.content) || !value.content.every(item => item != null && typeof item === \"object\" && \"type\" in item && item.type === \"text\" && \"text\" in item && item.text != null && typeof item.text === \"object\" && \"value\" in item.text && typeof item.text.value === \"string\")) {\n        throw new Error('\"assistant_message\" parts expect an object with an \"id\", \"role\", and \"content\" property.');\n      }\n      return {\n        type: \"assistant_message\",\n        value\n      };\n    }\n  };\n  var assistantControlDataStreamPart = {\n    code: \"5\",\n    name: \"assistant_control_data\",\n    parse: value => {\n      if (value == null || typeof value !== \"object\" || !(\"threadId\" in value) || !(\"messageId\" in value) || typeof value.threadId !== \"string\" || typeof value.messageId !== \"string\") {\n        throw new Error('\"assistant_control_data\" parts expect an object with a \"threadId\" and \"messageId\" property.');\n      }\n      return {\n        type: \"assistant_control_data\",\n        value: {\n          threadId: value.threadId,\n          messageId: value.messageId\n        }\n      };\n    }\n  };\n  var dataMessageStreamPart = {\n    code: \"6\",\n    name: \"data_message\",\n    parse: value => {\n      if (value == null || typeof value !== \"object\" || !(\"role\" in value) || !(\"data\" in value) || typeof value.role !== \"string\" || value.role !== \"data\") {\n        throw new Error('\"data_message\" parts expect an object with a \"role\" and \"data\" property.');\n      }\n      return {\n        type: \"data_message\",\n        value\n      };\n    }\n  };\n  var toolCallStreamPart = {\n    code: \"7\",\n    name: \"tool_calls\",\n    parse: value => {\n      if (value == null || typeof value !== \"object\" || !(\"tool_calls\" in value) || typeof value.tool_calls !== \"object\" || value.tool_calls == null || !Array.isArray(value.tool_calls) || value.tool_calls.some(tc => {\n        tc == null || typeof tc !== \"object\" || !(\"id\" in tc) || typeof tc.id !== \"string\" || !(\"type\" in tc) || typeof tc.type !== \"string\" || !(\"function\" in tc) || tc.function == null || typeof tc.function !== \"object\" || !(\"arguments\" in tc.function) || typeof tc.function.name !== \"string\" || typeof tc.function.arguments !== \"string\";\n      })) {\n        throw new Error('\"tool_calls\" parts expect an object with a ToolCallPayload.');\n      }\n      return {\n        type: \"tool_calls\",\n        value\n      };\n    }\n  };\n  var messageAnnotationsStreamPart = {\n    code: \"8\",\n    name: \"message_annotations\",\n    parse: value => {\n      if (!Array.isArray(value)) {\n        throw new Error('\"message_annotations\" parts expect an array value.');\n      }\n      return {\n        type: \"message_annotations\",\n        value\n      };\n    }\n  };\n  var streamParts = [textStreamPart, functionCallStreamPart, dataStreamPart, errorStreamPart, assistantMessageStreamPart, assistantControlDataStreamPart, dataMessageStreamPart, toolCallStreamPart, messageAnnotationsStreamPart];\n  var streamPartsByCode = {\n    [textStreamPart.code]: textStreamPart,\n    [functionCallStreamPart.code]: functionCallStreamPart,\n    [dataStreamPart.code]: dataStreamPart,\n    [errorStreamPart.code]: errorStreamPart,\n    [assistantMessageStreamPart.code]: assistantMessageStreamPart,\n    [assistantControlDataStreamPart.code]: assistantControlDataStreamPart,\n    [dataMessageStreamPart.code]: dataMessageStreamPart,\n    [toolCallStreamPart.code]: toolCallStreamPart,\n    [messageAnnotationsStreamPart.code]: messageAnnotationsStreamPart\n  };\n  var StreamStringPrefixes = {\n    [textStreamPart.name]: textStreamPart.code,\n    [functionCallStreamPart.name]: functionCallStreamPart.code,\n    [dataStreamPart.name]: dataStreamPart.code,\n    [errorStreamPart.name]: errorStreamPart.code,\n    [assistantMessageStreamPart.name]: assistantMessageStreamPart.code,\n    [assistantControlDataStreamPart.name]: assistantControlDataStreamPart.code,\n    [dataMessageStreamPart.name]: dataMessageStreamPart.code,\n    [toolCallStreamPart.name]: toolCallStreamPart.code,\n    [messageAnnotationsStreamPart.name]: messageAnnotationsStreamPart.code\n  };\n  var validCodes = streamParts.map(part => part.code);\n  var parseStreamPart = line => {\n    const firstSeparatorIndex = line.indexOf(\":\");\n    if (firstSeparatorIndex === -1) {\n      throw new Error(\"Failed to parse stream string. No separator found.\");\n    }\n    const prefix = line.slice(0, firstSeparatorIndex);\n    if (!validCodes.includes(prefix)) {\n      throw new Error(`Failed to parse stream string. Invalid code ${prefix}.`);\n    }\n    const code = prefix;\n    const textValue = line.slice(firstSeparatorIndex + 1);\n    const jsonValue = JSON.parse(textValue);\n    return streamPartsByCode[code].parse(jsonValue);\n  };\n\n  // shared/read-data-stream.ts\n  var NEWLINE = \"\\n\".charCodeAt(0);\n  function concatChunks(chunks, totalLength) {\n    const concatenatedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const chunk of chunks) {\n      concatenatedChunks.set(chunk, offset);\n      offset += chunk.length;\n    }\n    chunks.length = 0;\n    return concatenatedChunks;\n  }\n  async function* readDataStream(reader, {\n    isAborted\n  } = {}) {\n    const decoder = new TextDecoder();\n    const chunks = [];\n    let totalLength = 0;\n    while (true) {\n      const {\n        value\n      } = await reader.read();\n      if (value) {\n        chunks.push(value);\n        totalLength += value.length;\n        if (value[value.length - 1] !== NEWLINE) {\n          continue;\n        }\n      }\n      if (chunks.length === 0) {\n        break;\n      }\n      const concatenatedChunks = concatChunks(chunks, totalLength);\n      totalLength = 0;\n      const streamParts2 = decoder.decode(concatenatedChunks, {\n        stream: true\n      }).split(\"\\n\").filter(line => line !== \"\").map(parseStreamPart);\n      for (const streamPart of streamParts2) {\n        yield streamPart;\n      }\n      if (isAborted == null ? void 0 : isAborted()) {\n        reader.cancel();\n        break;\n      }\n    }\n  }\n\n  // shared/utils.ts\n\n  var nanoid = (0, _nanoidNonSecure.customAlphabet)(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\", 7);\n  function createChunkDecoder(complex) {\n    const decoder = new TextDecoder();\n    if (!complex) {\n      return function (chunk) {\n        if (!chunk) return \"\";\n        return decoder.decode(chunk, {\n          stream: true\n        });\n      };\n    }\n    return function (chunk) {\n      const decoded = decoder.decode(chunk, {\n        stream: true\n      }).split(\"\\n\").filter(line => line !== \"\");\n      return decoded.map(parseStreamPart).filter(Boolean);\n    };\n  }\n  var COMPLEX_HEADER = \"X-Experimental-Stream-Data\";\n\n  // shared/parse-complex-response.ts\n  function assignAnnotationsToMessage(message, annotations) {\n    if (!message || !annotations || !annotations.length) return message;\n    return {\n      ...message,\n      annotations: [...annotations]\n    };\n  }\n  async function parseComplexResponse({\n    reader,\n    abortControllerRef,\n    update,\n    onFinish,\n    generateId = nanoid,\n    getCurrentDate = () => /* @__PURE__ */new Date()\n  }) {\n    const createdAt = getCurrentDate();\n    const prefixMap = {\n      data: []\n    };\n    let message_annotations = void 0;\n    for await (const {\n      type,\n      value\n    } of readDataStream(reader, {\n      isAborted: () => (abortControllerRef == null ? void 0 : abortControllerRef.current) === null\n    })) {\n      if (type === \"text\") {\n        if (prefixMap[\"text\"]) {\n          prefixMap[\"text\"] = {\n            ...prefixMap[\"text\"],\n            content: (prefixMap[\"text\"].content || \"\") + value\n          };\n        } else {\n          prefixMap[\"text\"] = {\n            id: generateId(),\n            role: \"assistant\",\n            content: value,\n            createdAt\n          };\n        }\n      }\n      let functionCallMessage = null;\n      if (type === \"function_call\") {\n        prefixMap[\"function_call\"] = {\n          id: generateId(),\n          role: \"assistant\",\n          content: \"\",\n          function_call: value.function_call,\n          name: value.function_call.name,\n          createdAt\n        };\n        functionCallMessage = prefixMap[\"function_call\"];\n      }\n      let toolCallMessage = null;\n      if (type === \"tool_calls\") {\n        prefixMap[\"tool_calls\"] = {\n          id: generateId(),\n          role: \"assistant\",\n          content: \"\",\n          tool_calls: value.tool_calls,\n          createdAt\n        };\n        toolCallMessage = prefixMap[\"tool_calls\"];\n      }\n      if (type === \"data\") {\n        prefixMap[\"data\"].push(...value);\n      }\n      let responseMessage = prefixMap[\"text\"];\n      if (type === \"message_annotations\") {\n        if (!message_annotations) {\n          message_annotations = [...value];\n        } else {\n          message_annotations.push(...value);\n        }\n        functionCallMessage = assignAnnotationsToMessage(prefixMap[\"function_call\"], message_annotations);\n        toolCallMessage = assignAnnotationsToMessage(prefixMap[\"tool_calls\"], message_annotations);\n        responseMessage = assignAnnotationsToMessage(prefixMap[\"text\"], message_annotations);\n      }\n      if (message_annotations == null ? void 0 : message_annotations.length) {\n        const messagePrefixKeys = [\"text\", \"function_call\", \"tool_calls\"];\n        messagePrefixKeys.forEach(key => {\n          if (prefixMap[key]) {\n            prefixMap[key].annotations = [...message_annotations];\n          }\n        });\n      }\n      const merged = [functionCallMessage, toolCallMessage, responseMessage].filter(Boolean).map(message => ({\n        ...assignAnnotationsToMessage(message, message_annotations)\n      }));\n      update(merged, [...prefixMap[\"data\"]]);\n    }\n    onFinish == null ? void 0 : onFinish(prefixMap);\n    return {\n      messages: [prefixMap.text, prefixMap.function_call, prefixMap.tool_calls].filter(Boolean),\n      data: prefixMap.data\n    };\n  }\n\n  // shared/call-chat-api.ts\n  async function callChatApi({\n    api,\n    messages,\n    body,\n    credentials,\n    headers,\n    abortController,\n    appendMessage,\n    restoreMessagesOnFailure,\n    onResponse,\n    onUpdate,\n    onFinish,\n    generateId\n  }) {\n    var _a;\n    const response = await fetch(api, {\n      method: \"POST\",\n      body: JSON.stringify({\n        messages,\n        ...body\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...headers\n      },\n      signal: (_a = abortController == null ? void 0 : abortController()) == null ? void 0 : _a.signal,\n      credentials\n    }).catch(err => {\n      restoreMessagesOnFailure();\n      throw err;\n    });\n    if (onResponse) {\n      try {\n        await onResponse(response);\n      } catch (err) {\n        throw err;\n      }\n    }\n    if (!response.ok) {\n      restoreMessagesOnFailure();\n      throw new Error((await response.text()) || \"Failed to fetch the chat response.\");\n    }\n    if (!response.body) {\n      throw new Error(\"The response body is empty.\");\n    }\n    const reader = response.body.getReader();\n    const isComplexMode = response.headers.get(COMPLEX_HEADER) === \"true\";\n    if (isComplexMode) {\n      return await parseComplexResponse({\n        reader,\n        abortControllerRef: abortController != null ? {\n          current: abortController()\n        } : void 0,\n        update: onUpdate,\n        onFinish(prefixMap) {\n          if (onFinish && prefixMap.text != null) {\n            onFinish(prefixMap.text);\n          }\n        },\n        generateId\n      });\n    } else {\n      const createdAt = /* @__PURE__ */new Date();\n      const decode = createChunkDecoder(false);\n      let streamedResponse = \"\";\n      const replyId = generateId();\n      let responseMessage = {\n        id: replyId,\n        createdAt,\n        content: \"\",\n        role: \"assistant\"\n      };\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) {\n          break;\n        }\n        streamedResponse += decode(value);\n        if (streamedResponse.startsWith('{\"function_call\":')) {\n          responseMessage[\"function_call\"] = streamedResponse;\n        } else if (streamedResponse.startsWith('{\"tool_calls\":')) {\n          responseMessage[\"tool_calls\"] = streamedResponse;\n        } else {\n          responseMessage[\"content\"] = streamedResponse;\n        }\n        appendMessage({\n          ...responseMessage\n        });\n        if ((abortController == null ? void 0 : abortController()) === null) {\n          reader.cancel();\n          break;\n        }\n      }\n      if (streamedResponse.startsWith('{\"function_call\":')) {\n        const parsedFunctionCall = JSON.parse(streamedResponse).function_call;\n        responseMessage[\"function_call\"] = parsedFunctionCall;\n        appendMessage({\n          ...responseMessage\n        });\n      }\n      if (streamedResponse.startsWith('{\"tool_calls\":')) {\n        const parsedToolCalls = JSON.parse(streamedResponse).tool_calls;\n        responseMessage[\"tool_calls\"] = parsedToolCalls;\n        appendMessage({\n          ...responseMessage\n        });\n      }\n      if (onFinish) {\n        onFinish(responseMessage);\n      }\n      return responseMessage;\n    }\n  }\n\n  // shared/process-chat-stream.ts\n  async function processChatStream({\n    getStreamedResponse: getStreamedResponse2,\n    experimental_onFunctionCall,\n    experimental_onToolCall,\n    updateChatRequest,\n    getCurrentMessages\n  }) {\n    while (true) {\n      const messagesAndDataOrJustMessage = await getStreamedResponse2();\n      if (\"messages\" in messagesAndDataOrJustMessage) {\n        let hasFollowingResponse = false;\n        for (const message of messagesAndDataOrJustMessage.messages) {\n          if ((message.function_call === void 0 || typeof message.function_call === \"string\") && (message.tool_calls === void 0 || typeof message.tool_calls === \"string\")) {\n            continue;\n          }\n          hasFollowingResponse = true;\n          if (experimental_onFunctionCall) {\n            const functionCall = message.function_call;\n            if (typeof functionCall !== \"object\") {\n              console.warn(\"experimental_onFunctionCall should not be defined when using tools\");\n              continue;\n            }\n            const functionCallResponse = await experimental_onFunctionCall(getCurrentMessages(), functionCall);\n            if (functionCallResponse === void 0) {\n              hasFollowingResponse = false;\n              break;\n            }\n            updateChatRequest(functionCallResponse);\n          }\n          if (experimental_onToolCall) {\n            const toolCalls = message.tool_calls;\n            if (!Array.isArray(toolCalls) || toolCalls.some(toolCall => typeof toolCall !== \"object\")) {\n              console.warn(\"experimental_onToolCall should not be defined when using tools\");\n              continue;\n            }\n            const toolCallResponse = await experimental_onToolCall(getCurrentMessages(), toolCalls);\n            if (toolCallResponse === void 0) {\n              hasFollowingResponse = false;\n              break;\n            }\n            updateChatRequest(toolCallResponse);\n          }\n        }\n        if (!hasFollowingResponse) {\n          break;\n        }\n      } else {\n        let fixFunctionCallArguments2 = function (response) {\n          for (const message of response.messages) {\n            if (message.tool_calls !== void 0) {\n              for (const toolCall of message.tool_calls) {\n                if (typeof toolCall === \"object\") {\n                  if (toolCall.function.arguments && typeof toolCall.function.arguments !== \"string\") {\n                    toolCall.function.arguments = JSON.stringify(toolCall.function.arguments);\n                  }\n                }\n              }\n            }\n            if (message.function_call !== void 0) {\n              if (typeof message.function_call === \"object\") {\n                if (message.function_call.arguments && typeof message.function_call.arguments !== \"string\") {\n                  message.function_call.arguments = JSON.stringify(message.function_call.arguments);\n                }\n              }\n            }\n          }\n        };\n        var fixFunctionCallArguments = fixFunctionCallArguments2;\n        const streamedResponseMessage = messagesAndDataOrJustMessage;\n        if ((streamedResponseMessage.function_call === void 0 || typeof streamedResponseMessage.function_call === \"string\") && (streamedResponseMessage.tool_calls === void 0 || typeof streamedResponseMessage.tool_calls === \"string\")) {\n          break;\n        }\n        if (experimental_onFunctionCall) {\n          const functionCall = streamedResponseMessage.function_call;\n          if (!(typeof functionCall === \"object\")) {\n            console.warn(\"experimental_onFunctionCall should not be defined when using tools\");\n            continue;\n          }\n          const functionCallResponse = await experimental_onFunctionCall(getCurrentMessages(), functionCall);\n          if (functionCallResponse === void 0) break;\n          fixFunctionCallArguments2(functionCallResponse);\n          updateChatRequest(functionCallResponse);\n        }\n        if (experimental_onToolCall) {\n          const toolCalls = streamedResponseMessage.tool_calls;\n          if (!(typeof toolCalls === \"object\")) {\n            console.warn(\"experimental_onToolCall should not be defined when using functions\");\n            continue;\n          }\n          const toolCallResponse = await experimental_onToolCall(getCurrentMessages(), toolCalls);\n          if (toolCallResponse === void 0) break;\n          fixFunctionCallArguments2(toolCallResponse);\n          updateChatRequest(toolCallResponse);\n        }\n      }\n    }\n  }\n\n  // react/use-chat.ts\n  var getStreamedResponse = async (api, chatRequest, mutate, mutateStreamData, existingData, extraMetadataRef, messagesRef, abortControllerRef, generateId, onFinish, onResponse, sendExtraMessageFields) => {\n    var _a, _b;\n    const previousMessages = messagesRef.current;\n    mutate(chatRequest.messages, false);\n    const constructedMessagesPayload = sendExtraMessageFields ? chatRequest.messages : chatRequest.messages.map(({\n      role,\n      content,\n      name,\n      function_call,\n      tool_calls,\n      tool_call_id\n    }) => ({\n      role,\n      content,\n      tool_call_id,\n      ...(name !== void 0 && {\n        name\n      }),\n      ...(function_call !== void 0 && {\n        function_call\n      }),\n      ...(tool_calls !== void 0 && {\n        tool_calls\n      })\n    }));\n    if (typeof api !== \"string\") {\n      const replyId = generateId();\n      const createdAt = /* @__PURE__ */new Date();\n      let responseMessage = {\n        id: replyId,\n        createdAt,\n        content: \"\",\n        role: \"assistant\"\n      };\n      async function readRow(promise) {\n        const {\n          content,\n          ui,\n          next\n        } = await promise;\n        responseMessage[\"content\"] = content;\n        responseMessage[\"ui\"] = await ui;\n        mutate([...chatRequest.messages, {\n          ...responseMessage\n        }], false);\n        if (next) {\n          await readRow(next);\n        }\n      }\n      try {\n        const promise = api({\n          messages: constructedMessagesPayload,\n          data: chatRequest.data\n        });\n        await readRow(promise);\n      } catch (e) {\n        mutate(previousMessages, false);\n        throw e;\n      }\n      if (onFinish) {\n        onFinish(responseMessage);\n      }\n      return responseMessage;\n    }\n    return await callChatApi({\n      api,\n      messages: constructedMessagesPayload,\n      body: {\n        data: chatRequest.data,\n        ...extraMetadataRef.current.body,\n        ...((_a = chatRequest.options) == null ? void 0 : _a.body),\n        ...(chatRequest.functions !== void 0 && {\n          functions: chatRequest.functions\n        }),\n        ...(chatRequest.function_call !== void 0 && {\n          function_call: chatRequest.function_call\n        }),\n        ...(chatRequest.tools !== void 0 && {\n          tools: chatRequest.tools\n        }),\n        ...(chatRequest.tool_choice !== void 0 && {\n          tool_choice: chatRequest.tool_choice\n        })\n      },\n      credentials: extraMetadataRef.current.credentials,\n      headers: {\n        ...extraMetadataRef.current.headers,\n        ...((_b = chatRequest.options) == null ? void 0 : _b.headers)\n      },\n      abortController: () => abortControllerRef.current,\n      appendMessage(message) {\n        mutate([...chatRequest.messages, message], false);\n      },\n      restoreMessagesOnFailure() {\n        mutate(previousMessages, false);\n      },\n      onResponse,\n      onUpdate(merged, data) {\n        mutate([...chatRequest.messages, ...merged], false);\n        mutateStreamData([...(existingData || []), ...(data || [])], false);\n      },\n      onFinish,\n      generateId\n    });\n  };\n  function useChat({\n    api = \"/api/chat\",\n    id,\n    initialMessages,\n    initialInput = \"\",\n    sendExtraMessageFields,\n    experimental_onFunctionCall,\n    experimental_onToolCall,\n    onResponse,\n    onFinish,\n    onError,\n    credentials,\n    headers,\n    body,\n    generateId = nanoid\n  } = {}) {\n    const hookId = (0, _react.useId)();\n    const idKey = id != null ? id : hookId;\n    const chatKey = typeof api === \"string\" ? [api, idKey] : idKey;\n    const [initialMessagesFallback] = (0, _react.useState)([]);\n    const {\n      data: messages,\n      mutate\n    } = (0, useSWR.default)([chatKey, \"messages\"], null, {\n      fallbackData: initialMessages != null ? initialMessages : initialMessagesFallback\n    });\n    const {\n      data: isLoading = false,\n      mutate: mutateLoading\n    } = (0, useSWR.default)([chatKey, \"loading\"], null);\n    const {\n      data: streamData,\n      mutate: mutateStreamData\n    } = (0, useSWR.default)([chatKey, \"streamData\"], null);\n    const {\n      data: error = void 0,\n      mutate: setError\n    } = (0, useSWR.default)([chatKey, \"error\"], null);\n    const messagesRef = (0, _react.useRef)(messages || []);\n    (0, _react.useEffect)(() => {\n      messagesRef.current = messages || [];\n    }, [messages]);\n    const abortControllerRef = (0, _react.useRef)(null);\n    const extraMetadataRef = (0, _react.useRef)({\n      credentials,\n      headers,\n      body\n    });\n    (0, _react.useEffect)(() => {\n      extraMetadataRef.current = {\n        credentials,\n        headers,\n        body\n      };\n    }, [credentials, headers, body]);\n    const triggerRequest = (0, _react.useCallback)(async chatRequest => {\n      try {\n        mutateLoading(true);\n        setError(void 0);\n        const abortController = new AbortController();\n        abortControllerRef.current = abortController;\n        await processChatStream({\n          getStreamedResponse: () => getStreamedResponse(api, chatRequest, mutate, mutateStreamData, streamData, extraMetadataRef, messagesRef, abortControllerRef, generateId, onFinish, onResponse, sendExtraMessageFields),\n          experimental_onFunctionCall,\n          experimental_onToolCall,\n          updateChatRequest: chatRequestParam => {\n            chatRequest = chatRequestParam;\n          },\n          getCurrentMessages: () => messagesRef.current\n        });\n        abortControllerRef.current = null;\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          abortControllerRef.current = null;\n          return null;\n        }\n        if (onError && err instanceof Error) {\n          onError(err);\n        }\n        setError(err);\n      } finally {\n        mutateLoading(false);\n      }\n    }, [mutate, mutateLoading, api, extraMetadataRef, onResponse, onFinish, onError, setError, mutateStreamData, streamData, sendExtraMessageFields, experimental_onFunctionCall, experimental_onToolCall, messagesRef, abortControllerRef, generateId]);\n    const append = (0, _react.useCallback)(async (message, {\n      options,\n      functions,\n      function_call,\n      tools,\n      tool_choice,\n      data\n    } = {}) => {\n      if (!message.id) {\n        message.id = generateId();\n      }\n      const chatRequest = {\n        messages: messagesRef.current.concat(message),\n        options,\n        data,\n        ...(functions !== void 0 && {\n          functions\n        }),\n        ...(function_call !== void 0 && {\n          function_call\n        }),\n        ...(tools !== void 0 && {\n          tools\n        }),\n        ...(tool_choice !== void 0 && {\n          tool_choice\n        })\n      };\n      return triggerRequest(chatRequest);\n    }, [triggerRequest, generateId]);\n    const reload = (0, _react.useCallback)(async ({\n      options,\n      functions,\n      function_call,\n      tools,\n      tool_choice\n    } = {}) => {\n      if (messagesRef.current.length === 0) return null;\n      const lastMessage = messagesRef.current[messagesRef.current.length - 1];\n      if (lastMessage.role === \"assistant\") {\n        const chatRequest2 = {\n          messages: messagesRef.current.slice(0, -1),\n          options,\n          ...(functions !== void 0 && {\n            functions\n          }),\n          ...(function_call !== void 0 && {\n            function_call\n          }),\n          ...(tools !== void 0 && {\n            tools\n          }),\n          ...(tool_choice !== void 0 && {\n            tool_choice\n          })\n        };\n        return triggerRequest(chatRequest2);\n      }\n      const chatRequest = {\n        messages: messagesRef.current,\n        options,\n        ...(functions !== void 0 && {\n          functions\n        }),\n        ...(function_call !== void 0 && {\n          function_call\n        }),\n        ...(tools !== void 0 && {\n          tools\n        }),\n        ...(tool_choice !== void 0 && {\n          tool_choice\n        })\n      };\n      return triggerRequest(chatRequest);\n    }, [triggerRequest]);\n    const stop = (0, _react.useCallback)(() => {\n      if (abortControllerRef.current) {\n        abortControllerRef.current.abort();\n        abortControllerRef.current = null;\n      }\n    }, []);\n    const setMessages = (0, _react.useCallback)(messages2 => {\n      mutate(messages2, false);\n      messagesRef.current = messages2;\n    }, [mutate]);\n    const [input, setInput] = (0, _react.useState)(initialInput);\n    const handleSubmit = (0, _react.useCallback)((e, options = {}, metadata) => {\n      if (metadata) {\n        extraMetadataRef.current = {\n          ...extraMetadataRef.current,\n          ...metadata\n        };\n      }\n      e.preventDefault();\n      if (!input) return;\n      append({\n        content: input,\n        role: \"user\",\n        createdAt: /* @__PURE__ */new Date()\n      }, options);\n      setInput(\"\");\n    }, [input, append]);\n    const handleInputChange = e => {\n      setInput(e.target.value);\n    };\n    return {\n      messages: messages || [],\n      error,\n      append,\n      reload,\n      stop,\n      setMessages,\n      input,\n      setInput,\n      handleInputChange,\n      handleSubmit,\n      isLoading,\n      data: streamData\n    };\n  }\n\n  // react/use-completion.ts\n\n  // shared/call-completion-api.ts\n  async function callCompletionApi({\n    api,\n    prompt,\n    credentials,\n    headers,\n    body,\n    setCompletion,\n    setLoading,\n    setError,\n    setAbortController,\n    onResponse,\n    onFinish,\n    onError,\n    onData\n  }) {\n    try {\n      setLoading(true);\n      setError(void 0);\n      const abortController = new AbortController();\n      setAbortController(abortController);\n      setCompletion(\"\");\n      const res = await fetch(api, {\n        method: \"POST\",\n        body: JSON.stringify({\n          prompt,\n          ...body\n        }),\n        credentials,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...headers\n        },\n        signal: abortController.signal\n      }).catch(err => {\n        throw err;\n      });\n      if (onResponse) {\n        try {\n          await onResponse(res);\n        } catch (err) {\n          throw err;\n        }\n      }\n      if (!res.ok) {\n        throw new Error((await res.text()) || \"Failed to fetch the chat response.\");\n      }\n      if (!res.body) {\n        throw new Error(\"The response body is empty.\");\n      }\n      let result = \"\";\n      const reader = res.body.getReader();\n      const isComplexMode = res.headers.get(COMPLEX_HEADER) === \"true\";\n      if (isComplexMode) {\n        for await (const {\n          type,\n          value\n        } of readDataStream(reader, {\n          isAborted: () => abortController === null\n        })) {\n          switch (type) {\n            case \"text\":\n              {\n                result += value;\n                setCompletion(result);\n                break;\n              }\n            case \"data\":\n              {\n                onData == null ? void 0 : onData(value);\n                break;\n              }\n          }\n        }\n      } else {\n        const decoder = createChunkDecoder();\n        while (true) {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) {\n            break;\n          }\n          result += decoder(value);\n          setCompletion(result);\n          if (abortController === null) {\n            reader.cancel();\n            break;\n          }\n        }\n      }\n      if (onFinish) {\n        onFinish(prompt, result);\n      }\n      setAbortController(null);\n      return result;\n    } catch (err) {\n      if (err.name === \"AbortError\") {\n        setAbortController(null);\n        return null;\n      }\n      if (err instanceof Error) {\n        if (onError) {\n          onError(err);\n        }\n      }\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // react/use-completion.ts\n  function useCompletion({\n    api = \"/api/completion\",\n    id,\n    initialCompletion = \"\",\n    initialInput = \"\",\n    credentials,\n    headers,\n    body,\n    onResponse,\n    onFinish,\n    onError\n  } = {}) {\n    const hookId = (0, _react.useId)();\n    const completionId = id || hookId;\n    const {\n      data,\n      mutate\n    } = (0, useSWR.default)([api, completionId], null, {\n      fallbackData: initialCompletion\n    });\n    const {\n      data: isLoading = false,\n      mutate: mutateLoading\n    } = (0, useSWR.default)([completionId, \"loading\"], null);\n    const {\n      data: streamData,\n      mutate: mutateStreamData\n    } = (0, useSWR.default)([completionId, \"streamData\"], null);\n    const [error, setError] = (0, _react.useState)(void 0);\n    const completion = data;\n    const [abortController, setAbortController] = (0, _react.useState)(null);\n    const extraMetadataRef = (0, _react.useRef)({\n      credentials,\n      headers,\n      body\n    });\n    (0, _react.useEffect)(() => {\n      extraMetadataRef.current = {\n        credentials,\n        headers,\n        body\n      };\n    }, [credentials, headers, body]);\n    const triggerRequest = (0, _react.useCallback)(async (prompt, options) => callCompletionApi({\n      api,\n      prompt,\n      credentials: extraMetadataRef.current.credentials,\n      headers: {\n        ...extraMetadataRef.current.headers,\n        ...(options == null ? void 0 : options.headers)\n      },\n      body: {\n        ...extraMetadataRef.current.body,\n        ...(options == null ? void 0 : options.body)\n      },\n      setCompletion: completion2 => mutate(completion2, false),\n      setLoading: mutateLoading,\n      setError,\n      setAbortController,\n      onResponse,\n      onFinish,\n      onError,\n      onData: data2 => {\n        mutateStreamData([...(streamData || []), ...(data2 || [])], false);\n      }\n    }), [mutate, mutateLoading, api, extraMetadataRef, setAbortController, onResponse, onFinish, onError, setError, streamData, mutateStreamData]);\n    const stop = (0, _react.useCallback)(() => {\n      if (abortController) {\n        abortController.abort();\n        setAbortController(null);\n      }\n    }, [abortController]);\n    const setCompletion = (0, _react.useCallback)(completion2 => {\n      mutate(completion2, false);\n    }, [mutate]);\n    const complete = (0, _react.useCallback)(async (prompt, options) => {\n      return triggerRequest(prompt, options);\n    }, [triggerRequest]);\n    const [input, setInput] = (0, _react.useState)(initialInput);\n    const handleSubmit = (0, _react.useCallback)(e => {\n      e.preventDefault();\n      if (!input) return;\n      return complete(input);\n    }, [input, complete]);\n    const handleInputChange = e => {\n      setInput(e.target.value);\n    };\n    return {\n      completion,\n      complete,\n      error,\n      setCompletion,\n      stop,\n      input,\n      setInput,\n      handleInputChange,\n      handleSubmit,\n      isLoading,\n      data: streamData\n    };\n  }\n\n  // react/use-assistant.ts\n\n  function experimental_useAssistant({\n    api,\n    threadId: threadIdParam,\n    credentials,\n    headers,\n    body,\n    onError\n  }) {\n    const [messages, setMessages] = (0, _react.useState)([]);\n    const [input, setInput] = (0, _react.useState)(\"\");\n    const [threadId, setThreadId] = (0, _react.useState)(void 0);\n    const [status, setStatus] = (0, _react.useState)(\"awaiting_message\");\n    const [error, setError] = (0, _react.useState)(void 0);\n    const handleInputChange = event => {\n      setInput(event.target.value);\n    };\n    const submitMessage = async (event, requestOptions) => {\n      var _a, _b;\n      (_a = event == null ? void 0 : event.preventDefault) == null ? void 0 : _a.call(event);\n      if (input === \"\") {\n        return;\n      }\n      setStatus(\"in_progress\");\n      setMessages(messages2 => [...messages2, {\n        id: \"\",\n        role: \"user\",\n        content: input\n      }]);\n      setInput(\"\");\n      const result = await fetch(api, {\n        method: \"POST\",\n        credentials,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...headers\n        },\n        body: JSON.stringify({\n          ...body,\n          // always use user-provided threadId when available:\n          threadId: (_b = threadIdParam != null ? threadIdParam : threadId) != null ? _b : null,\n          message: input,\n          // optional request data:\n          data: requestOptions == null ? void 0 : requestOptions.data\n        })\n      });\n      if (result.body == null) {\n        throw new Error(\"The response body is empty.\");\n      }\n      try {\n        for await (const {\n          type,\n          value\n        } of readDataStream(result.body.getReader())) {\n          switch (type) {\n            case \"assistant_message\":\n              {\n                setMessages(messages2 => [...messages2, {\n                  id: value.id,\n                  role: value.role,\n                  content: value.content[0].text.value\n                }]);\n                break;\n              }\n            case \"data_message\":\n              {\n                setMessages(messages2 => {\n                  var _a2;\n                  return [...messages2, {\n                    id: (_a2 = value.id) != null ? _a2 : \"\",\n                    role: \"data\",\n                    content: \"\",\n                    data: value.data\n                  }];\n                });\n                break;\n              }\n            case \"assistant_control_data\":\n              {\n                setThreadId(value.threadId);\n                setMessages(messages2 => {\n                  const lastMessage = messages2[messages2.length - 1];\n                  lastMessage.id = value.messageId;\n                  return [...messages2.slice(0, messages2.length - 1), lastMessage];\n                });\n                break;\n              }\n            case \"error\":\n              {\n                const errorObj = new Error(value);\n                setError(errorObj);\n                break;\n              }\n          }\n        }\n      } catch (error2) {\n        if (onError && error2 instanceof Error) {\n          onError(error2);\n        }\n        setError(error2);\n      }\n      setStatus(\"awaiting_message\");\n    };\n    return {\n      messages,\n      threadId,\n      input,\n      setInput,\n      handleInputChange,\n      submitMessage,\n      status,\n      error\n    };\n  }\n});","lineCount":1229,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0],[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"value"],[8,9,3,0],[9,2,3,0],[10,2,3,0],[10,11,3,0,"_interopDefault"],[10,27,3,0,"e"],[10,28,3,0],[11,4,3,0],[11,11,3,0,"e"],[11,12,3,0],[11,16,3,0,"e"],[11,17,3,0],[11,18,3,0,"__esModule"],[11,28,3,0],[11,31,3,0,"e"],[11,32,3,0],[12,6,3,0,"default"],[12,13,3,0],[12,15,3,0,"e"],[13,4,3,0],[14,2,3,0],[15,2,1240,0,"Object"],[15,8,1240,0],[15,9,1240,0,"defineProperty"],[15,23,1240,0],[15,24,1240,0,"exports"],[15,31,1240,0],[16,4,1240,0,"enumerable"],[16,14,1240,0],[17,4,1240,0,"get"],[17,7,1240,0],[17,18,1240,0,"get"],[17,19,1240,0],[18,6,1240,0],[18,13,1241,2,"experimental_useAssistant"],[18,38,1241,27],[19,4,1241,27],[20,2,1241,27],[21,2,1240,0,"Object"],[21,8,1240,0],[21,9,1240,0,"defineProperty"],[21,23,1240,0],[21,24,1240,0,"exports"],[21,31,1240,0],[22,4,1240,0,"enumerable"],[22,14,1240,0],[23,4,1240,0,"get"],[23,7,1240,0],[23,18,1240,0,"get"],[23,19,1240,0],[24,6,1240,0],[24,13,1242,2,"useChat"],[24,20,1242,9],[25,4,1242,9],[26,2,1242,9],[27,2,1240,0,"Object"],[27,8,1240,0],[27,9,1240,0,"defineProperty"],[27,23,1240,0],[27,24,1240,0,"exports"],[27,31,1240,0],[28,4,1240,0,"enumerable"],[28,14,1240,0],[29,4,1240,0,"get"],[29,7,1240,0],[29,18,1240,0,"get"],[29,19,1240,0],[30,6,1240,0],[30,13,1243,2,"useCompletion"],[30,26,1243,15],[31,4,1243,15],[32,2,1243,15],[33,2,4,0],[33,6,4,0,"_react"],[33,12,4,0],[33,15,4,0,"require"],[33,22,4,0],[33,23,4,0,"_dependencyMap"],[33,37,4,0],[34,2,5,0],[34,6,5,0,"_swr"],[34,10,5,0],[34,13,5,0,"require"],[34,20,5,0],[34,21,5,0,"_dependencyMap"],[34,35,5,0],[35,2,5,0],[35,6,5,0,"useSWR"],[35,12,5,0],[35,15,5,0,"_interopDefault"],[35,30,5,0],[35,31,5,0,"_swr"],[35,35,5,0],[36,2,223,0],[36,6,223,0,"_nanoidNonSecure"],[36,22,223,0],[36,25,223,0,"require"],[36,32,223,0],[36,33,223,0,"_dependencyMap"],[36,47,223,0],[37,2,7,0],[38,2,8,0],[38,6,8,4,"textStreamPart"],[38,20,8,18],[38,23,8,21],[39,4,9,2,"code"],[39,8,9,6],[39,10,9,8],[39,13,9,11],[40,4,10,2,"name"],[40,8,10,6],[40,10,10,8],[40,16,10,14],[41,4,11,2,"parse"],[41,9,11,7],[41,11,11,10,"value"],[41,16,11,15],[41,20,11,20],[42,6,12,4],[42,10,12,8],[42,17,12,15,"value"],[42,22,12,20],[42,27,12,25],[42,35,12,33],[42,37,12,35],[43,8,13,6],[43,14,13,12],[43,18,13,16,"Error"],[43,23,13,21],[43,24,13,22],[43,61,13,59],[43,62,13,60],[44,6,14,4],[45,6,15,4],[45,13,15,11],[46,8,15,13,"type"],[46,12,15,17],[46,14,15,19],[46,20,15,25],[47,8,15,27,"value"],[48,6,15,33],[48,7,15,34],[49,4,16,2],[50,2,17,0],[50,3,17,1],[51,2,18,0],[51,6,18,4,"functionCallStreamPart"],[51,28,18,26],[51,31,18,29],[52,4,19,2,"code"],[52,8,19,6],[52,10,19,8],[52,13,19,11],[53,4,20,2,"name"],[53,8,20,6],[53,10,20,8],[53,25,20,23],[54,4,21,2,"parse"],[54,9,21,7],[54,11,21,10,"value"],[54,16,21,15],[54,20,21,20],[55,6,22,4],[55,10,22,8,"value"],[55,15,22,13],[55,19,22,17],[55,23,22,21],[55,27,22,25],[55,34,22,32,"value"],[55,39,22,37],[55,44,22,42],[55,52,22,50],[55,56,22,54],[55,58,22,56],[55,73,22,71],[55,77,22,75,"value"],[55,82,22,80],[55,83,22,81],[55,87,22,85],[55,94,22,92,"value"],[55,99,22,97],[55,100,22,98,"function_call"],[55,113,22,111],[55,118,22,116],[55,126,22,124],[55,130,22,128,"value"],[55,135,22,133],[55,136,22,134,"function_call"],[55,149,22,147],[55,153,22,151],[55,157,22,155],[55,161,22,159],[55,163,22,161],[55,169,22,167],[55,173,22,171,"value"],[55,178,22,176],[55,179,22,177,"function_call"],[55,192,22,190],[55,193,22,191],[55,197,22,195],[55,199,22,197],[55,210,22,208],[55,214,22,212,"value"],[55,219,22,217],[55,220,22,218,"function_call"],[55,233,22,231],[55,234,22,232],[55,238,22,236],[55,245,22,243,"value"],[55,250,22,248],[55,251,22,249,"function_call"],[55,264,22,262],[55,265,22,263,"name"],[55,269,22,267],[55,274,22,272],[55,282,22,280],[55,286,22,284],[55,293,22,291,"value"],[55,298,22,296],[55,299,22,297,"function_call"],[55,312,22,310],[55,313,22,311,"arguments"],[55,322,22,320],[55,327,22,325],[55,335,22,333],[55,337,22,335],[56,8,23,6],[56,14,23,12],[56,18,23,16,"Error"],[56,23,23,21],[56,24,24,8],[56,97,25,6],[56,98,25,7],[57,6,26,4],[58,6,27,4],[58,13,27,11],[59,8,28,6,"type"],[59,12,28,10],[59,14,28,12],[59,29,28,27],[60,8,29,6,"value"],[61,6,30,4],[61,7,30,5],[62,4,31,2],[63,2,32,0],[63,3,32,1],[64,2,33,0],[64,6,33,4,"dataStreamPart"],[64,20,33,18],[64,23,33,21],[65,4,34,2,"code"],[65,8,34,6],[65,10,34,8],[65,13,34,11],[66,4,35,2,"name"],[66,8,35,6],[66,10,35,8],[66,16,35,14],[67,4,36,2,"parse"],[67,9,36,7],[67,11,36,10,"value"],[67,16,36,15],[67,20,36,20],[68,6,37,4],[68,10,37,8],[68,11,37,9,"Array"],[68,16,37,14],[68,17,37,15,"isArray"],[68,24,37,22],[68,25,37,23,"value"],[68,30,37,28],[68,31,37,29],[68,33,37,31],[69,8,38,6],[69,14,38,12],[69,18,38,16,"Error"],[69,23,38,21],[69,24,38,22],[69,61,38,59],[69,62,38,60],[70,6,39,4],[71,6,40,4],[71,13,40,11],[72,8,40,13,"type"],[72,12,40,17],[72,14,40,19],[72,20,40,25],[73,8,40,27,"value"],[74,6,40,33],[74,7,40,34],[75,4,41,2],[76,2,42,0],[76,3,42,1],[77,2,43,0],[77,6,43,4,"errorStreamPart"],[77,21,43,19],[77,24,43,22],[78,4,44,2,"code"],[78,8,44,6],[78,10,44,8],[78,13,44,11],[79,4,45,2,"name"],[79,8,45,6],[79,10,45,8],[79,17,45,15],[80,4,46,2,"parse"],[80,9,46,7],[80,11,46,10,"value"],[80,16,46,15],[80,20,46,20],[81,6,47,4],[81,10,47,8],[81,17,47,15,"value"],[81,22,47,20],[81,27,47,25],[81,35,47,33],[81,37,47,35],[82,8,48,6],[82,14,48,12],[82,18,48,16,"Error"],[82,23,48,21],[82,24,48,22],[82,62,48,60],[82,63,48,61],[83,6,49,4],[84,6,50,4],[84,13,50,11],[85,8,50,13,"type"],[85,12,50,17],[85,14,50,19],[85,21,50,26],[86,8,50,28,"value"],[87,6,50,34],[87,7,50,35],[88,4,51,2],[89,2,52,0],[89,3,52,1],[90,2,53,0],[90,6,53,4,"assistantMessageStreamPart"],[90,32,53,30],[90,35,53,33],[91,4,54,2,"code"],[91,8,54,6],[91,10,54,8],[91,13,54,11],[92,4,55,2,"name"],[92,8,55,6],[92,10,55,8],[92,29,55,27],[93,4,56,2,"parse"],[93,9,56,7],[93,11,56,10,"value"],[93,16,56,15],[93,20,56,20],[94,6,57,4],[94,10,57,8,"value"],[94,15,57,13],[94,19,57,17],[94,23,57,21],[94,27,57,25],[94,34,57,32,"value"],[94,39,57,37],[94,44,57,42],[94,52,57,50],[94,56,57,54],[94,58,57,56],[94,62,57,60],[94,66,57,64,"value"],[94,71,57,69],[94,72,57,70],[94,76,57,74],[94,78,57,76],[94,84,57,82],[94,88,57,86,"value"],[94,93,57,91],[94,94,57,92],[94,98,57,96],[94,100,57,98],[94,109,57,107],[94,113,57,111,"value"],[94,118,57,116],[94,119,57,117],[94,123,57,121],[94,130,57,128,"value"],[94,135,57,133],[94,136,57,134,"id"],[94,138,57,136],[94,143,57,141],[94,151,57,149],[94,155,57,153],[94,162,57,160,"value"],[94,167,57,165],[94,168,57,166,"role"],[94,172,57,170],[94,177,57,175],[94,185,57,183],[94,189,57,187,"value"],[94,194,57,192],[94,195,57,193,"role"],[94,199,57,197],[94,204,57,202],[94,215,57,213],[94,219,57,217],[94,220,57,218,"Array"],[94,225,57,223],[94,226,57,224,"isArray"],[94,233,57,231],[94,234,57,232,"value"],[94,239,57,237],[94,240,57,238,"content"],[94,247,57,245],[94,248,57,246],[94,252,57,250],[94,253,57,251,"value"],[94,258,57,256],[94,259,57,257,"content"],[94,266,57,264],[94,267,57,265,"every"],[94,272,57,270],[94,273,58,7,"item"],[94,277,58,11],[94,281,58,16,"item"],[94,285,58,20],[94,289,58,24],[94,293,58,28],[94,297,58,32],[94,304,58,39,"item"],[94,308,58,43],[94,313,58,48],[94,321,58,56],[94,325,58,60],[94,331,58,66],[94,335,58,70,"item"],[94,339,58,74],[94,343,58,78,"item"],[94,347,58,82],[94,348,58,83,"type"],[94,352,58,87],[94,357,58,92],[94,363,58,98],[94,367,58,102],[94,373,58,108],[94,377,58,112,"item"],[94,381,58,116],[94,385,58,120,"item"],[94,389,58,124],[94,390,58,125,"text"],[94,394,58,129],[94,398,58,133],[94,402,58,137],[94,406,58,141],[94,413,58,148,"item"],[94,417,58,152],[94,418,58,153,"text"],[94,422,58,157],[94,427,58,162],[94,435,58,170],[94,439,58,174],[94,446,58,181],[94,450,58,185,"item"],[94,454,58,189],[94,455,58,190,"text"],[94,459,58,194],[94,463,58,198],[94,470,58,205,"item"],[94,474,58,209],[94,475,58,210,"text"],[94,479,58,214],[94,480,58,215,"value"],[94,485,58,220],[94,490,58,225],[94,498,59,4],[94,499,59,5],[94,501,59,7],[95,8,60,6],[95,14,60,12],[95,18,60,16,"Error"],[95,23,60,21],[95,24,61,8],[95,114,62,6],[95,115,62,7],[96,6,63,4],[97,6,64,4],[97,13,64,11],[98,8,65,6,"type"],[98,12,65,10],[98,14,65,12],[98,33,65,31],[99,8,66,6,"value"],[100,6,67,4],[100,7,67,5],[101,4,68,2],[102,2,69,0],[102,3,69,1],[103,2,70,0],[103,6,70,4,"assistantControlDataStreamPart"],[103,36,70,34],[103,39,70,37],[104,4,71,2,"code"],[104,8,71,6],[104,10,71,8],[104,13,71,11],[105,4,72,2,"name"],[105,8,72,6],[105,10,72,8],[105,34,72,32],[106,4,73,2,"parse"],[106,9,73,7],[106,11,73,10,"value"],[106,16,73,15],[106,20,73,20],[107,6,74,4],[107,10,74,8,"value"],[107,15,74,13],[107,19,74,17],[107,23,74,21],[107,27,74,25],[107,34,74,32,"value"],[107,39,74,37],[107,44,74,42],[107,52,74,50],[107,56,74,54],[107,58,74,56],[107,68,74,66],[107,72,74,70,"value"],[107,77,74,75],[107,78,74,76],[107,82,74,80],[107,84,74,82],[107,95,74,93],[107,99,74,97,"value"],[107,104,74,102],[107,105,74,103],[107,109,74,107],[107,116,74,114,"value"],[107,121,74,119],[107,122,74,120,"threadId"],[107,130,74,128],[107,135,74,133],[107,143,74,141],[107,147,74,145],[107,154,74,152,"value"],[107,159,74,157],[107,160,74,158,"messageId"],[107,169,74,167],[107,174,74,172],[107,182,74,180],[107,184,74,182],[108,8,75,6],[108,14,75,12],[108,18,75,16,"Error"],[108,23,75,21],[108,24,76,8],[108,117,77,6],[108,118,77,7],[109,6,78,4],[110,6,79,4],[110,13,79,11],[111,8,80,6,"type"],[111,12,80,10],[111,14,80,12],[111,38,80,36],[112,8,81,6,"value"],[112,13,81,11],[112,15,81,13],[113,10,82,8,"threadId"],[113,18,82,16],[113,20,82,18,"value"],[113,25,82,23],[113,26,82,24,"threadId"],[113,34,82,32],[114,10,83,8,"messageId"],[114,19,83,17],[114,21,83,19,"value"],[114,26,83,24],[114,27,83,25,"messageId"],[115,8,84,6],[116,6,85,4],[116,7,85,5],[117,4,86,2],[118,2,87,0],[118,3,87,1],[119,2,88,0],[119,6,88,4,"dataMessageStreamPart"],[119,27,88,25],[119,30,88,28],[120,4,89,2,"code"],[120,8,89,6],[120,10,89,8],[120,13,89,11],[121,4,90,2,"name"],[121,8,90,6],[121,10,90,8],[121,24,90,22],[122,4,91,2,"parse"],[122,9,91,7],[122,11,91,10,"value"],[122,16,91,15],[122,20,91,20],[123,6,92,4],[123,10,92,8,"value"],[123,15,92,13],[123,19,92,17],[123,23,92,21],[123,27,92,25],[123,34,92,32,"value"],[123,39,92,37],[123,44,92,42],[123,52,92,50],[123,56,92,54],[123,58,92,56],[123,64,92,62],[123,68,92,66,"value"],[123,73,92,71],[123,74,92,72],[123,78,92,76],[123,80,92,78],[123,86,92,84],[123,90,92,88,"value"],[123,95,92,93],[123,96,92,94],[123,100,92,98],[123,107,92,105,"value"],[123,112,92,110],[123,113,92,111,"role"],[123,117,92,115],[123,122,92,120],[123,130,92,128],[123,134,92,132,"value"],[123,139,92,137],[123,140,92,138,"role"],[123,144,92,142],[123,149,92,147],[123,155,92,153],[123,157,92,155],[124,8,93,6],[124,14,93,12],[124,18,93,16,"Error"],[124,23,93,21],[124,24,94,8],[124,98,95,6],[124,99,95,7],[125,6,96,4],[126,6,97,4],[126,13,97,11],[127,8,98,6,"type"],[127,12,98,10],[127,14,98,12],[127,28,98,26],[128,8,99,6,"value"],[129,6,100,4],[129,7,100,5],[130,4,101,2],[131,2,102,0],[131,3,102,1],[132,2,103,0],[132,6,103,4,"toolCallStreamPart"],[132,24,103,22],[132,27,103,25],[133,4,104,2,"code"],[133,8,104,6],[133,10,104,8],[133,13,104,11],[134,4,105,2,"name"],[134,8,105,6],[134,10,105,8],[134,22,105,20],[135,4,106,2,"parse"],[135,9,106,7],[135,11,106,10,"value"],[135,16,106,15],[135,20,106,20],[136,6,107,4],[136,10,107,8,"value"],[136,15,107,13],[136,19,107,17],[136,23,107,21],[136,27,107,25],[136,34,107,32,"value"],[136,39,107,37],[136,44,107,42],[136,52,107,50],[136,56,107,54],[136,58,107,56],[136,70,107,68],[136,74,107,72,"value"],[136,79,107,77],[136,80,107,78],[136,84,107,82],[136,91,107,89,"value"],[136,96,107,94],[136,97,107,95,"tool_calls"],[136,107,107,105],[136,112,107,110],[136,120,107,118],[136,124,107,122,"value"],[136,129,107,127],[136,130,107,128,"tool_calls"],[136,140,107,138],[136,144,107,142],[136,148,107,146],[136,152,107,150],[136,153,107,151,"Array"],[136,158,107,156],[136,159,107,157,"isArray"],[136,166,107,164],[136,167,107,165,"value"],[136,172,107,170],[136,173,107,171,"tool_calls"],[136,183,107,181],[136,184,107,182],[136,188,107,186,"value"],[136,193,107,191],[136,194,107,192,"tool_calls"],[136,204,107,202],[136,205,107,203,"some"],[136,209,107,207],[136,210,107,209,"tc"],[136,212,107,211],[136,216,107,216],[137,8,108,6,"tc"],[137,10,108,8],[137,14,108,12],[137,18,108,16],[137,22,108,20],[137,29,108,27,"tc"],[137,31,108,29],[137,36,108,34],[137,44,108,42],[137,48,108,46],[137,50,108,48],[137,54,108,52],[137,58,108,56,"tc"],[137,60,108,58],[137,61,108,59],[137,65,108,63],[137,72,108,70,"tc"],[137,74,108,72],[137,75,108,73,"id"],[137,77,108,75],[137,82,108,80],[137,90,108,88],[137,94,108,92],[137,96,108,94],[137,102,108,100],[137,106,108,104,"tc"],[137,108,108,106],[137,109,108,107],[137,113,108,111],[137,120,108,118,"tc"],[137,122,108,120],[137,123,108,121,"type"],[137,127,108,125],[137,132,108,130],[137,140,108,138],[137,144,108,142],[137,146,108,144],[137,156,108,154],[137,160,108,158,"tc"],[137,162,108,160],[137,163,108,161],[137,167,108,165,"tc"],[137,169,108,167],[137,170,108,168,"function"],[137,178,108,176],[137,182,108,180],[137,186,108,184],[137,190,108,188],[137,197,108,195,"tc"],[137,199,108,197],[137,200,108,198,"function"],[137,208,108,206],[137,213,108,211],[137,221,108,219],[137,225,108,223],[137,227,108,225],[137,238,108,236],[137,242,108,240,"tc"],[137,244,108,242],[137,245,108,243,"function"],[137,253,108,251],[137,254,108,252],[137,258,108,256],[137,265,108,263,"tc"],[137,267,108,265],[137,268,108,266,"function"],[137,276,108,274],[137,277,108,275,"name"],[137,281,108,279],[137,286,108,284],[137,294,108,292],[137,298,108,296],[137,305,108,303,"tc"],[137,307,108,305],[137,308,108,306,"function"],[137,316,108,314],[137,317,108,315,"arguments"],[137,326,108,324],[137,331,108,329],[137,339,108,337],[138,6,109,4],[138,7,109,5],[138,8,109,6],[138,10,109,8],[139,8,110,6],[139,14,110,12],[139,18,110,16,"Error"],[139,23,110,21],[139,24,111,8],[139,85,112,6],[139,86,112,7],[140,6,113,4],[141,6,114,4],[141,13,114,11],[142,8,115,6,"type"],[142,12,115,10],[142,14,115,12],[142,26,115,24],[143,8,116,6,"value"],[144,6,117,4],[144,7,117,5],[145,4,118,2],[146,2,119,0],[146,3,119,1],[147,2,120,0],[147,6,120,4,"messageAnnotationsStreamPart"],[147,34,120,32],[147,37,120,35],[148,4,121,2,"code"],[148,8,121,6],[148,10,121,8],[148,13,121,11],[149,4,122,2,"name"],[149,8,122,6],[149,10,122,8],[149,31,122,29],[150,4,123,2,"parse"],[150,9,123,7],[150,11,123,10,"value"],[150,16,123,15],[150,20,123,20],[151,6,124,4],[151,10,124,8],[151,11,124,9,"Array"],[151,16,124,14],[151,17,124,15,"isArray"],[151,24,124,22],[151,25,124,23,"value"],[151,30,124,28],[151,31,124,29],[151,33,124,31],[152,8,125,6],[152,14,125,12],[152,18,125,16,"Error"],[152,23,125,21],[152,24,125,22],[152,76,125,74],[152,77,125,75],[153,6,126,4],[154,6,127,4],[154,13,127,11],[155,8,127,13,"type"],[155,12,127,17],[155,14,127,19],[155,35,127,40],[156,8,127,42,"value"],[157,6,127,48],[157,7,127,49],[158,4,128,2],[159,2,129,0],[159,3,129,1],[160,2,130,0],[160,6,130,4,"streamParts"],[160,17,130,15],[160,20,130,18],[160,21,131,2,"textStreamPart"],[160,35,131,16],[160,37,132,2,"functionCallStreamPart"],[160,59,132,24],[160,61,133,2,"dataStreamPart"],[160,75,133,16],[160,77,134,2,"errorStreamPart"],[160,92,134,17],[160,94,135,2,"assistantMessageStreamPart"],[160,120,135,28],[160,122,136,2,"assistantControlDataStreamPart"],[160,152,136,32],[160,154,137,2,"dataMessageStreamPart"],[160,175,137,23],[160,177,138,2,"toolCallStreamPart"],[160,195,138,20],[160,197,139,2,"messageAnnotationsStreamPart"],[160,225,139,30],[160,226,140,1],[161,2,141,0],[161,6,141,4,"streamPartsByCode"],[161,23,141,21],[161,26,141,24],[162,4,142,2],[162,5,142,3,"textStreamPart"],[162,19,142,17],[162,20,142,18,"code"],[162,24,142,22],[162,27,142,25,"textStreamPart"],[162,41,142,39],[163,4,143,2],[163,5,143,3,"functionCallStreamPart"],[163,27,143,25],[163,28,143,26,"code"],[163,32,143,30],[163,35,143,33,"functionCallStreamPart"],[163,57,143,55],[164,4,144,2],[164,5,144,3,"dataStreamPart"],[164,19,144,17],[164,20,144,18,"code"],[164,24,144,22],[164,27,144,25,"dataStreamPart"],[164,41,144,39],[165,4,145,2],[165,5,145,3,"errorStreamPart"],[165,20,145,18],[165,21,145,19,"code"],[165,25,145,23],[165,28,145,26,"errorStreamPart"],[165,43,145,41],[166,4,146,2],[166,5,146,3,"assistantMessageStreamPart"],[166,31,146,29],[166,32,146,30,"code"],[166,36,146,34],[166,39,146,37,"assistantMessageStreamPart"],[166,65,146,63],[167,4,147,2],[167,5,147,3,"assistantControlDataStreamPart"],[167,35,147,33],[167,36,147,34,"code"],[167,40,147,38],[167,43,147,41,"assistantControlDataStreamPart"],[167,73,147,71],[168,4,148,2],[168,5,148,3,"dataMessageStreamPart"],[168,26,148,24],[168,27,148,25,"code"],[168,31,148,29],[168,34,148,32,"dataMessageStreamPart"],[168,55,148,53],[169,4,149,2],[169,5,149,3,"toolCallStreamPart"],[169,23,149,21],[169,24,149,22,"code"],[169,28,149,26],[169,31,149,29,"toolCallStreamPart"],[169,49,149,47],[170,4,150,2],[170,5,150,3,"messageAnnotationsStreamPart"],[170,33,150,31],[170,34,150,32,"code"],[170,38,150,36],[170,41,150,39,"messageAnnotationsStreamPart"],[171,2,151,0],[171,3,151,1],[172,2,152,0],[172,6,152,4,"StreamStringPrefixes"],[172,26,152,24],[172,29,152,27],[173,4,153,2],[173,5,153,3,"textStreamPart"],[173,19,153,17],[173,20,153,18,"name"],[173,24,153,22],[173,27,153,25,"textStreamPart"],[173,41,153,39],[173,42,153,40,"code"],[173,46,153,44],[174,4,154,2],[174,5,154,3,"functionCallStreamPart"],[174,27,154,25],[174,28,154,26,"name"],[174,32,154,30],[174,35,154,33,"functionCallStreamPart"],[174,57,154,55],[174,58,154,56,"code"],[174,62,154,60],[175,4,155,2],[175,5,155,3,"dataStreamPart"],[175,19,155,17],[175,20,155,18,"name"],[175,24,155,22],[175,27,155,25,"dataStreamPart"],[175,41,155,39],[175,42,155,40,"code"],[175,46,155,44],[176,4,156,2],[176,5,156,3,"errorStreamPart"],[176,20,156,18],[176,21,156,19,"name"],[176,25,156,23],[176,28,156,26,"errorStreamPart"],[176,43,156,41],[176,44,156,42,"code"],[176,48,156,46],[177,4,157,2],[177,5,157,3,"assistantMessageStreamPart"],[177,31,157,29],[177,32,157,30,"name"],[177,36,157,34],[177,39,157,37,"assistantMessageStreamPart"],[177,65,157,63],[177,66,157,64,"code"],[177,70,157,68],[178,4,158,2],[178,5,158,3,"assistantControlDataStreamPart"],[178,35,158,33],[178,36,158,34,"name"],[178,40,158,38],[178,43,158,41,"assistantControlDataStreamPart"],[178,73,158,71],[178,74,158,72,"code"],[178,78,158,76],[179,4,159,2],[179,5,159,3,"dataMessageStreamPart"],[179,26,159,24],[179,27,159,25,"name"],[179,31,159,29],[179,34,159,32,"dataMessageStreamPart"],[179,55,159,53],[179,56,159,54,"code"],[179,60,159,58],[180,4,160,2],[180,5,160,3,"toolCallStreamPart"],[180,23,160,21],[180,24,160,22,"name"],[180,28,160,26],[180,31,160,29,"toolCallStreamPart"],[180,49,160,47],[180,50,160,48,"code"],[180,54,160,52],[181,4,161,2],[181,5,161,3,"messageAnnotationsStreamPart"],[181,33,161,31],[181,34,161,32,"name"],[181,38,161,36],[181,41,161,39,"messageAnnotationsStreamPart"],[181,69,161,67],[181,70,161,68,"code"],[182,2,162,0],[182,3,162,1],[183,2,163,0],[183,6,163,4,"validCodes"],[183,16,163,14],[183,19,163,17,"streamParts"],[183,30,163,28],[183,31,163,29,"map"],[183,34,163,32],[183,35,163,34,"part"],[183,39,163,38],[183,43,163,43,"part"],[183,47,163,47],[183,48,163,48,"code"],[183,52,163,52],[183,53,163,53],[184,2,164,0],[184,6,164,4,"parseStreamPart"],[184,21,164,19],[184,24,164,23,"line"],[184,28,164,27],[184,32,164,32],[185,4,165,2],[185,10,165,8,"firstSeparatorIndex"],[185,29,165,27],[185,32,165,30,"line"],[185,36,165,34],[185,37,165,35,"indexOf"],[185,44,165,42],[185,45,165,43],[185,48,165,46],[185,49,165,47],[186,4,166,2],[186,8,166,6,"firstSeparatorIndex"],[186,27,166,25],[186,32,166,30],[186,33,166,31],[186,34,166,32],[186,36,166,34],[187,6,167,4],[187,12,167,10],[187,16,167,14,"Error"],[187,21,167,19],[187,22,167,20],[187,74,167,72],[187,75,167,73],[188,4,168,2],[189,4,169,2],[189,10,169,8,"prefix"],[189,16,169,14],[189,19,169,17,"line"],[189,23,169,21],[189,24,169,22,"slice"],[189,29,169,27],[189,30,169,28],[189,31,169,29],[189,33,169,31,"firstSeparatorIndex"],[189,52,169,50],[189,53,169,51],[190,4,170,2],[190,8,170,6],[190,9,170,7,"validCodes"],[190,19,170,17],[190,20,170,18,"includes"],[190,28,170,26],[190,29,170,27,"prefix"],[190,35,170,33],[190,36,170,34],[190,38,170,36],[191,6,171,4],[191,12,171,10],[191,16,171,14,"Error"],[191,21,171,19],[191,22,171,20],[191,69,171,67,"prefix"],[191,75,171,73],[191,78,171,76],[191,79,171,77],[192,4,172,2],[193,4,173,2],[193,10,173,8,"code"],[193,14,173,12],[193,17,173,15,"prefix"],[193,23,173,21],[194,4,174,2],[194,10,174,8,"textValue"],[194,19,174,17],[194,22,174,20,"line"],[194,26,174,24],[194,27,174,25,"slice"],[194,32,174,30],[194,33,174,31,"firstSeparatorIndex"],[194,52,174,50],[194,55,174,53],[194,56,174,54],[194,57,174,55],[195,4,175,2],[195,10,175,8,"jsonValue"],[195,19,175,17],[195,22,175,20,"JSON"],[195,26,175,24],[195,27,175,25,"parse"],[195,32,175,30],[195,33,175,31,"textValue"],[195,42,175,40],[195,43,175,41],[196,4,176,2],[196,11,176,9,"streamPartsByCode"],[196,28,176,26],[196,29,176,27,"code"],[196,33,176,31],[196,34,176,32],[196,35,176,33,"parse"],[196,40,176,38],[196,41,176,39,"jsonValue"],[196,50,176,48],[196,51,176,49],[197,2,177,0],[197,3,177,1],[199,2,179,0],[200,2,180,0],[200,6,180,4,"NEWLINE"],[200,13,180,11],[200,16,180,14],[200,20,180,18],[200,21,180,19,"charCodeAt"],[200,31,180,29],[200,32,180,30],[200,33,180,31],[200,34,180,32],[201,2,181,0],[201,11,181,9,"concatChunks"],[201,23,181,21,"concatChunks"],[201,24,181,22,"chunks"],[201,30,181,28],[201,32,181,30,"totalLength"],[201,43,181,41],[201,45,181,43],[202,4,182,2],[202,10,182,8,"concatenatedChunks"],[202,28,182,26],[202,31,182,29],[202,35,182,33,"Uint8Array"],[202,45,182,43],[202,46,182,44,"totalLength"],[202,57,182,55],[202,58,182,56],[203,4,183,2],[203,8,183,6,"offset"],[203,14,183,12],[203,17,183,15],[203,18,183,16],[204,4,184,2],[204,9,184,7],[204,15,184,13,"chunk"],[204,20,184,18],[204,24,184,22,"chunks"],[204,30,184,28],[204,32,184,30],[205,6,185,4,"concatenatedChunks"],[205,24,185,22],[205,25,185,23,"set"],[205,28,185,26],[205,29,185,27,"chunk"],[205,34,185,32],[205,36,185,34,"offset"],[205,42,185,40],[205,43,185,41],[206,6,186,4,"offset"],[206,12,186,10],[206,16,186,14,"chunk"],[206,21,186,19],[206,22,186,20,"length"],[206,28,186,26],[207,4,187,2],[208,4,188,2,"chunks"],[208,10,188,8],[208,11,188,9,"length"],[208,17,188,15],[208,20,188,18],[208,21,188,19],[209,4,189,2],[209,11,189,9,"concatenatedChunks"],[209,29,189,27],[210,2,190,0],[211,2,191,0],[211,18,191,16,"readDataStream"],[211,32,191,30,"readDataStream"],[211,33,191,31,"reader"],[211,39,191,37],[211,41,191,39],[212,4,192,2,"isAborted"],[213,2,193,0],[213,3,193,1],[213,6,193,4],[213,7,193,5],[213,8,193,6],[213,10,193,8],[214,4,194,2],[214,10,194,8,"decoder"],[214,17,194,15],[214,20,194,18],[214,24,194,22,"TextDecoder"],[214,35,194,33],[214,36,194,34],[214,37,194,35],[215,4,195,2],[215,10,195,8,"chunks"],[215,16,195,14],[215,19,195,17],[215,21,195,19],[216,4,196,2],[216,8,196,6,"totalLength"],[216,19,196,17],[216,22,196,20],[216,23,196,21],[217,4,197,2],[217,11,197,9],[217,15,197,13],[217,17,197,15],[218,6,198,4],[218,12,198,10],[219,8,198,12,"value"],[220,6,198,18],[220,7,198,19],[220,10,198,22],[220,16,198,28,"reader"],[220,22,198,34],[220,23,198,35,"read"],[220,27,198,39],[220,28,198,40],[220,29,198,41],[221,6,199,4],[221,10,199,8,"value"],[221,15,199,13],[221,17,199,15],[222,8,200,6,"chunks"],[222,14,200,12],[222,15,200,13,"push"],[222,19,200,17],[222,20,200,18,"value"],[222,25,200,23],[222,26,200,24],[223,8,201,6,"totalLength"],[223,19,201,17],[223,23,201,21,"value"],[223,28,201,26],[223,29,201,27,"length"],[223,35,201,33],[224,8,202,6],[224,12,202,10,"value"],[224,17,202,15],[224,18,202,16,"value"],[224,23,202,21],[224,24,202,22,"length"],[224,30,202,28],[224,33,202,31],[224,34,202,32],[224,35,202,33],[224,40,202,38,"NEWLINE"],[224,47,202,45],[224,49,202,47],[225,10,203,8],[226,8,204,6],[227,6,205,4],[228,6,206,4],[228,10,206,8,"chunks"],[228,16,206,14],[228,17,206,15,"length"],[228,23,206,21],[228,28,206,26],[228,29,206,27],[228,31,206,29],[229,8,207,6],[230,6,208,4],[231,6,209,4],[231,12,209,10,"concatenatedChunks"],[231,30,209,28],[231,33,209,31,"concatChunks"],[231,45,209,43],[231,46,209,44,"chunks"],[231,52,209,50],[231,54,209,52,"totalLength"],[231,65,209,63],[231,66,209,64],[232,6,210,4,"totalLength"],[232,17,210,15],[232,20,210,18],[232,21,210,19],[233,6,211,4],[233,12,211,10,"streamParts2"],[233,24,211,22],[233,27,211,25,"decoder"],[233,34,211,32],[233,35,211,33,"decode"],[233,41,211,39],[233,42,211,40,"concatenatedChunks"],[233,60,211,58],[233,62,211,60],[234,8,211,62,"stream"],[234,14,211,68],[234,16,211,70],[235,6,211,75],[235,7,211,76],[235,8,211,77],[235,9,211,78,"split"],[235,14,211,83],[235,15,211,84],[235,19,211,88],[235,20,211,89],[235,21,211,90,"filter"],[235,27,211,96],[235,28,211,98,"line"],[235,32,211,102],[235,36,211,107,"line"],[235,40,211,111],[235,45,211,116],[235,47,211,118],[235,48,211,119],[235,49,211,120,"map"],[235,52,211,123],[235,53,211,124,"parseStreamPart"],[235,68,211,139],[235,69,211,140],[236,6,212,4],[236,11,212,9],[236,17,212,15,"streamPart"],[236,27,212,25],[236,31,212,29,"streamParts2"],[236,43,212,41],[236,45,212,43],[237,8,213,6],[237,14,213,12,"streamPart"],[237,24,213,22],[238,6,214,4],[239,6,215,4],[239,10,215,8,"isAborted"],[239,19,215,17],[239,23,215,21],[239,27,215,25],[239,30,215,28],[239,35,215,33],[239,36,215,34],[239,39,215,37,"isAborted"],[239,48,215,46],[239,49,215,47],[239,50,215,48],[239,52,215,50],[240,8,216,6,"reader"],[240,14,216,12],[240,15,216,13,"cancel"],[240,21,216,19],[240,22,216,20],[240,23,216,21],[241,8,217,6],[242,6,218,4],[243,4,219,2],[244,2,220,0],[246,2,222,0],[248,2,224,0],[248,6,224,4,"nanoid"],[248,12,224,10],[248,15,224,13],[248,19,224,13,"customAlphabet"],[248,35,224,27],[248,36,224,27,"customAlphabet"],[248,50,224,27],[248,52,225,2],[248,116,225,66],[248,118,226,2],[248,119,227,0],[248,120,227,1],[249,2,228,0],[249,11,228,9,"createChunkDecoder"],[249,29,228,27,"createChunkDecoder"],[249,30,228,28,"complex"],[249,37,228,35],[249,39,228,37],[250,4,229,2],[250,10,229,8,"decoder"],[250,17,229,15],[250,20,229,18],[250,24,229,22,"TextDecoder"],[250,35,229,33],[250,36,229,34],[250,37,229,35],[251,4,230,2],[251,8,230,6],[251,9,230,7,"complex"],[251,16,230,14],[251,18,230,16],[252,6,231,4],[252,13,231,11],[252,23,231,20,"chunk"],[252,28,231,25],[252,30,231,27],[253,8,232,6],[253,12,232,10],[253,13,232,11,"chunk"],[253,18,232,16],[253,20,233,8],[253,27,233,15],[253,29,233,17],[254,8,234,6],[254,15,234,13,"decoder"],[254,22,234,20],[254,23,234,21,"decode"],[254,29,234,27],[254,30,234,28,"chunk"],[254,35,234,33],[254,37,234,35],[255,10,234,37,"stream"],[255,16,234,43],[255,18,234,45],[256,8,234,50],[256,9,234,51],[256,10,234,52],[257,6,235,4],[257,7,235,5],[258,4,236,2],[259,4,237,2],[259,11,237,9],[259,21,237,18,"chunk"],[259,26,237,23],[259,28,237,25],[260,6,238,4],[260,12,238,10,"decoded"],[260,19,238,17],[260,22,238,20,"decoder"],[260,29,238,27],[260,30,238,28,"decode"],[260,36,238,34],[260,37,238,35,"chunk"],[260,42,238,40],[260,44,238,42],[261,8,238,44,"stream"],[261,14,238,50],[261,16,238,52],[262,6,238,57],[262,7,238,58],[262,8,238,59],[262,9,238,60,"split"],[262,14,238,65],[262,15,238,66],[262,19,238,70],[262,20,238,71],[262,21,238,72,"filter"],[262,27,238,78],[262,28,238,80,"line"],[262,32,238,84],[262,36,238,89,"line"],[262,40,238,93],[262,45,238,98],[262,47,238,100],[262,48,238,101],[263,6,239,4],[263,13,239,11,"decoded"],[263,20,239,18],[263,21,239,19,"map"],[263,24,239,22],[263,25,239,23,"parseStreamPart"],[263,40,239,38],[263,41,239,39],[263,42,239,40,"filter"],[263,48,239,46],[263,49,239,47,"Boolean"],[263,56,239,54],[263,57,239,55],[264,4,240,2],[264,5,240,3],[265,2,241,0],[266,2,242,0],[266,6,242,4,"COMPLEX_HEADER"],[266,20,242,18],[266,23,242,21],[266,51,242,49],[268,2,244,0],[269,2,245,0],[269,11,245,9,"assignAnnotationsToMessage"],[269,37,245,35,"assignAnnotationsToMessage"],[269,38,245,36,"message"],[269,45,245,43],[269,47,245,45,"annotations"],[269,58,245,56],[269,60,245,58],[270,4,246,2],[270,8,246,6],[270,9,246,7,"message"],[270,16,246,14],[270,20,246,18],[270,21,246,19,"annotations"],[270,32,246,30],[270,36,246,34],[270,37,246,35,"annotations"],[270,48,246,46],[270,49,246,47,"length"],[270,55,246,53],[270,57,247,4],[270,64,247,11,"message"],[270,71,247,18],[271,4,248,2],[271,11,248,9],[272,6,248,11],[272,9,248,14,"message"],[272,16,248,21],[273,6,248,23,"annotations"],[273,17,248,34],[273,19,248,36],[273,20,248,37],[273,23,248,40,"annotations"],[273,34,248,51],[274,4,248,53],[274,5,248,54],[275,2,249,0],[276,2,250,0],[276,17,250,15,"parseComplexResponse"],[276,37,250,35,"parseComplexResponse"],[276,38,250,36],[277,4,251,2,"reader"],[277,10,251,8],[278,4,252,2,"abortControllerRef"],[278,22,252,20],[279,4,253,2,"update"],[279,10,253,8],[280,4,254,2,"onFinish"],[280,12,254,10],[281,4,255,2,"generateId"],[281,14,255,12],[281,17,255,15,"nanoid"],[281,23,255,21],[282,4,256,2,"getCurrentDate"],[282,18,256,16],[282,21,256,19,"getCurrentDate"],[282,22,256,19],[282,27,256,25],[282,42,256,41],[282,46,256,45,"Date"],[282,50,256,49],[282,51,256,50],[283,2,257,0],[283,3,257,1],[283,5,257,3],[284,4,258,2],[284,10,258,8,"createdAt"],[284,19,258,17],[284,22,258,20,"getCurrentDate"],[284,36,258,34],[284,37,258,35],[284,38,258,36],[285,4,259,2],[285,10,259,8,"prefixMap"],[285,19,259,17],[285,22,259,20],[286,6,260,4,"data"],[286,10,260,8],[286,12,260,10],[287,4,261,2],[287,5,261,3],[288,4,262,2],[288,8,262,6,"message_annotations"],[288,27,262,25],[288,30,262,28],[288,35,262,33],[288,36,262,34],[289,4,263,2],[289,15,263,13],[289,21,263,19],[290,6,263,21,"type"],[290,10,263,25],[291,6,263,27,"value"],[292,4,263,33],[292,5,263,34],[292,9,263,38,"readDataStream"],[292,23,263,52],[292,24,263,53,"reader"],[292,30,263,59],[292,32,263,61],[293,6,264,4,"isAborted"],[293,15,264,13],[293,17,264,15,"isAborted"],[293,18,264,15],[293,23,264,21],[293,24,264,22,"abortControllerRef"],[293,42,264,40],[293,46,264,44],[293,50,264,48],[293,53,264,51],[293,58,264,56],[293,59,264,57],[293,62,264,60,"abortControllerRef"],[293,80,264,78],[293,81,264,79,"current"],[293,88,264,86],[293,94,264,92],[294,4,265,2],[294,5,265,3],[294,6,265,4],[294,8,265,6],[295,6,266,4],[295,10,266,8,"type"],[295,14,266,12],[295,19,266,17],[295,25,266,23],[295,27,266,25],[296,8,267,6],[296,12,267,10,"prefixMap"],[296,21,267,19],[296,22,267,20],[296,28,267,26],[296,29,267,27],[296,31,267,29],[297,10,268,8,"prefixMap"],[297,19,268,17],[297,20,268,18],[297,26,268,24],[297,27,268,25],[297,30,268,28],[298,12,269,10],[298,15,269,13,"prefixMap"],[298,24,269,22],[298,25,269,23],[298,31,269,29],[298,32,269,30],[299,12,270,10,"content"],[299,19,270,17],[299,21,270,19],[299,22,270,20,"prefixMap"],[299,31,270,29],[299,32,270,30],[299,38,270,36],[299,39,270,37],[299,40,270,38,"content"],[299,47,270,45],[299,51,270,49],[299,53,270,51],[299,57,270,55,"value"],[300,10,271,8],[300,11,271,9],[301,8,272,6],[301,9,272,7],[301,15,272,13],[302,10,273,8,"prefixMap"],[302,19,273,17],[302,20,273,18],[302,26,273,24],[302,27,273,25],[302,30,273,28],[303,12,274,10,"id"],[303,14,274,12],[303,16,274,14,"generateId"],[303,26,274,24],[303,27,274,25],[303,28,274,26],[304,12,275,10,"role"],[304,16,275,14],[304,18,275,16],[304,29,275,27],[305,12,276,10,"content"],[305,19,276,17],[305,21,276,19,"value"],[305,26,276,24],[306,12,277,10,"createdAt"],[307,10,278,8],[307,11,278,9],[308,8,279,6],[309,6,280,4],[310,6,281,4],[310,10,281,8,"functionCallMessage"],[310,29,281,27],[310,32,281,30],[310,36,281,34],[311,6,282,4],[311,10,282,8,"type"],[311,14,282,12],[311,19,282,17],[311,34,282,32],[311,36,282,34],[312,8,283,6,"prefixMap"],[312,17,283,15],[312,18,283,16],[312,33,283,31],[312,34,283,32],[312,37,283,35],[313,10,284,8,"id"],[313,12,284,10],[313,14,284,12,"generateId"],[313,24,284,22],[313,25,284,23],[313,26,284,24],[314,10,285,8,"role"],[314,14,285,12],[314,16,285,14],[314,27,285,25],[315,10,286,8,"content"],[315,17,286,15],[315,19,286,17],[315,21,286,19],[316,10,287,8,"function_call"],[316,23,287,21],[316,25,287,23,"value"],[316,30,287,28],[316,31,287,29,"function_call"],[316,44,287,42],[317,10,288,8,"name"],[317,14,288,12],[317,16,288,14,"value"],[317,21,288,19],[317,22,288,20,"function_call"],[317,35,288,33],[317,36,288,34,"name"],[317,40,288,38],[318,10,289,8,"createdAt"],[319,8,290,6],[319,9,290,7],[320,8,291,6,"functionCallMessage"],[320,27,291,25],[320,30,291,28,"prefixMap"],[320,39,291,37],[320,40,291,38],[320,55,291,53],[320,56,291,54],[321,6,292,4],[322,6,293,4],[322,10,293,8,"toolCallMessage"],[322,25,293,23],[322,28,293,26],[322,32,293,30],[323,6,294,4],[323,10,294,8,"type"],[323,14,294,12],[323,19,294,17],[323,31,294,29],[323,33,294,31],[324,8,295,6,"prefixMap"],[324,17,295,15],[324,18,295,16],[324,30,295,28],[324,31,295,29],[324,34,295,32],[325,10,296,8,"id"],[325,12,296,10],[325,14,296,12,"generateId"],[325,24,296,22],[325,25,296,23],[325,26,296,24],[326,10,297,8,"role"],[326,14,297,12],[326,16,297,14],[326,27,297,25],[327,10,298,8,"content"],[327,17,298,15],[327,19,298,17],[327,21,298,19],[328,10,299,8,"tool_calls"],[328,20,299,18],[328,22,299,20,"value"],[328,27,299,25],[328,28,299,26,"tool_calls"],[328,38,299,36],[329,10,300,8,"createdAt"],[330,8,301,6],[330,9,301,7],[331,8,302,6,"toolCallMessage"],[331,23,302,21],[331,26,302,24,"prefixMap"],[331,35,302,33],[331,36,302,34],[331,48,302,46],[331,49,302,47],[332,6,303,4],[333,6,304,4],[333,10,304,8,"type"],[333,14,304,12],[333,19,304,17],[333,25,304,23],[333,27,304,25],[334,8,305,6,"prefixMap"],[334,17,305,15],[334,18,305,16],[334,24,305,22],[334,25,305,23],[334,26,305,24,"push"],[334,30,305,28],[334,31,305,29],[334,34,305,32,"value"],[334,39,305,37],[334,40,305,38],[335,6,306,4],[336,6,307,4],[336,10,307,8,"responseMessage"],[336,25,307,23],[336,28,307,26,"prefixMap"],[336,37,307,35],[336,38,307,36],[336,44,307,42],[336,45,307,43],[337,6,308,4],[337,10,308,8,"type"],[337,14,308,12],[337,19,308,17],[337,40,308,38],[337,42,308,40],[338,8,309,6],[338,12,309,10],[338,13,309,11,"message_annotations"],[338,32,309,30],[338,34,309,32],[339,10,310,8,"message_annotations"],[339,29,310,27],[339,32,310,30],[339,33,310,31],[339,36,310,34,"value"],[339,41,310,39],[339,42,310,40],[340,8,311,6],[340,9,311,7],[340,15,311,13],[341,10,312,8,"message_annotations"],[341,29,312,27],[341,30,312,28,"push"],[341,34,312,32],[341,35,312,33],[341,38,312,36,"value"],[341,43,312,41],[341,44,312,42],[342,8,313,6],[343,8,314,6,"functionCallMessage"],[343,27,314,25],[343,30,314,28,"assignAnnotationsToMessage"],[343,56,314,54],[343,57,315,8,"prefixMap"],[343,66,315,17],[343,67,315,18],[343,82,315,33],[343,83,315,34],[343,85,316,8,"message_annotations"],[343,104,317,6],[343,105,317,7],[344,8,318,6,"toolCallMessage"],[344,23,318,21],[344,26,318,24,"assignAnnotationsToMessage"],[344,52,318,50],[344,53,319,8,"prefixMap"],[344,62,319,17],[344,63,319,18],[344,75,319,30],[344,76,319,31],[344,78,320,8,"message_annotations"],[344,97,321,6],[344,98,321,7],[345,8,322,6,"responseMessage"],[345,23,322,21],[345,26,322,24,"assignAnnotationsToMessage"],[345,52,322,50],[345,53,323,8,"prefixMap"],[345,62,323,17],[345,63,323,18],[345,69,323,24],[345,70,323,25],[345,72,324,8,"message_annotations"],[345,91,325,6],[345,92,325,7],[346,6,326,4],[347,6,327,4],[347,10,327,8,"message_annotations"],[347,29,327,27],[347,33,327,31],[347,37,327,35],[347,40,327,38],[347,45,327,43],[347,46,327,44],[347,49,327,47,"message_annotations"],[347,68,327,66],[347,69,327,67,"length"],[347,75,327,73],[347,77,327,75],[348,8,328,6],[348,14,328,12,"messagePrefixKeys"],[348,31,328,29],[348,34,328,32],[348,35,329,8],[348,41,329,14],[348,43,330,8],[348,58,330,23],[348,60,331,8],[348,72,331,20],[348,73,332,7],[349,8,333,6,"messagePrefixKeys"],[349,25,333,23],[349,26,333,24,"forEach"],[349,33,333,31],[349,34,333,33,"key"],[349,37,333,36],[349,41,333,41],[350,10,334,8],[350,14,334,12,"prefixMap"],[350,23,334,21],[350,24,334,22,"key"],[350,27,334,25],[350,28,334,26],[350,30,334,28],[351,12,335,10,"prefixMap"],[351,21,335,19],[351,22,335,20,"key"],[351,25,335,23],[351,26,335,24],[351,27,335,25,"annotations"],[351,38,335,36],[351,41,335,39],[351,42,335,40],[351,45,335,43,"message_annotations"],[351,64,335,62],[351,65,335,63],[352,10,336,8],[353,8,337,6],[353,9,337,7],[353,10,337,8],[354,6,338,4],[355,6,339,4],[355,12,339,10,"merged"],[355,18,339,16],[355,21,339,19],[355,22,339,20,"functionCallMessage"],[355,41,339,39],[355,43,339,41,"toolCallMessage"],[355,58,339,56],[355,60,339,58,"responseMessage"],[355,75,339,73],[355,76,339,74],[355,77,339,75,"filter"],[355,83,339,81],[355,84,339,82,"Boolean"],[355,91,339,89],[355,92,339,90],[355,93,339,91,"map"],[355,96,339,94],[355,97,339,96,"message"],[355,104,339,103],[355,109,339,109],[356,8,340,6],[356,11,340,9,"assignAnnotationsToMessage"],[356,37,340,35],[356,38,340,36,"message"],[356,45,340,43],[356,47,340,45,"message_annotations"],[356,66,340,64],[357,6,341,4],[357,7,341,5],[357,8,341,6],[357,9,341,7],[358,6,342,4,"update"],[358,12,342,10],[358,13,342,11,"merged"],[358,19,342,17],[358,21,342,19],[358,22,342,20],[358,25,342,23,"prefixMap"],[358,34,342,32],[358,35,342,33],[358,41,342,39],[358,42,342,40],[358,43,342,41],[358,44,342,42],[359,4,343,2],[360,4,344,2,"onFinish"],[360,12,344,10],[360,16,344,14],[360,20,344,18],[360,23,344,21],[360,28,344,26],[360,29,344,27],[360,32,344,30,"onFinish"],[360,40,344,38],[360,41,344,39,"prefixMap"],[360,50,344,48],[360,51,344,49],[361,4,345,2],[361,11,345,9],[362,6,346,4,"messages"],[362,14,346,12],[362,16,346,14],[362,17,347,6,"prefixMap"],[362,26,347,15],[362,27,347,16,"text"],[362,31,347,20],[362,33,348,6,"prefixMap"],[362,42,348,15],[362,43,348,16,"function_call"],[362,56,348,29],[362,58,349,6,"prefixMap"],[362,67,349,15],[362,68,349,16,"tool_calls"],[362,78,349,26],[362,79,350,5],[362,80,350,6,"filter"],[362,86,350,12],[362,87,350,13,"Boolean"],[362,94,350,20],[362,95,350,21],[363,6,351,4,"data"],[363,10,351,8],[363,12,351,10,"prefixMap"],[363,21,351,19],[363,22,351,20,"data"],[364,4,352,2],[364,5,352,3],[365,2,353,0],[367,2,355,0],[368,2,356,0],[368,17,356,15,"callChatApi"],[368,28,356,26,"callChatApi"],[368,29,356,27],[369,4,357,2,"api"],[369,7,357,5],[370,4,358,2,"messages"],[370,12,358,10],[371,4,359,2,"body"],[371,8,359,6],[372,4,360,2,"credentials"],[372,15,360,13],[373,4,361,2,"headers"],[373,11,361,9],[374,4,362,2,"abortController"],[374,19,362,17],[375,4,363,2,"appendMessage"],[375,17,363,15],[376,4,364,2,"restoreMessagesOnFailure"],[376,28,364,26],[377,4,365,2,"onResponse"],[377,14,365,12],[378,4,366,2,"onUpdate"],[378,12,366,10],[379,4,367,2,"onFinish"],[379,12,367,10],[380,4,368,2,"generateId"],[381,2,369,0],[381,3,369,1],[381,5,369,3],[382,4,370,2],[382,8,370,6,"_a"],[382,10,370,8],[383,4,371,2],[383,10,371,8,"response"],[383,18,371,16],[383,21,371,19],[383,27,371,25,"fetch"],[383,32,371,30],[383,33,371,31,"api"],[383,36,371,34],[383,38,371,36],[384,6,372,4,"method"],[384,12,372,10],[384,14,372,12],[384,20,372,18],[385,6,373,4,"body"],[385,10,373,8],[385,12,373,10,"JSON"],[385,16,373,14],[385,17,373,15,"stringify"],[385,26,373,24],[385,27,373,25],[386,8,374,6,"messages"],[386,16,374,14],[387,8,375,6],[387,11,375,9,"body"],[388,6,376,4],[388,7,376,5],[388,8,376,6],[389,6,377,4,"headers"],[389,13,377,11],[389,15,377,13],[390,8,378,6],[390,22,378,20],[390,24,378,22],[390,42,378,40],[391,8,379,6],[391,11,379,9,"headers"],[392,6,380,4],[392,7,380,5],[393,6,381,4,"signal"],[393,12,381,10],[393,14,381,12],[393,15,381,13,"_a"],[393,17,381,15],[393,20,381,18,"abortController"],[393,35,381,33],[393,39,381,37],[393,43,381,41],[393,46,381,44],[393,51,381,49],[393,52,381,50],[393,55,381,53,"abortController"],[393,70,381,68],[393,71,381,69],[393,72,381,70],[393,77,381,75],[393,81,381,79],[393,84,381,82],[393,89,381,87],[393,90,381,88],[393,93,381,91,"_a"],[393,95,381,93],[393,96,381,94,"signal"],[393,102,381,100],[394,6,382,4,"credentials"],[395,4,383,2],[395,5,383,3],[395,6,383,4],[395,7,383,5,"catch"],[395,12,383,10],[395,13,383,12,"err"],[395,16,383,15],[395,20,383,20],[396,6,384,4,"restoreMessagesOnFailure"],[396,30,384,28],[396,31,384,29],[396,32,384,30],[397,6,385,4],[397,12,385,10,"err"],[397,15,385,13],[398,4,386,2],[398,5,386,3],[398,6,386,4],[399,4,387,2],[399,8,387,6,"onResponse"],[399,18,387,16],[399,20,387,18],[400,6,388,4],[400,10,388,8],[401,8,389,6],[401,14,389,12,"onResponse"],[401,24,389,22],[401,25,389,23,"response"],[401,33,389,31],[401,34,389,32],[402,6,390,4],[402,7,390,5],[402,8,390,6],[402,15,390,13,"err"],[402,18,390,16],[402,20,390,18],[403,8,391,6],[403,14,391,12,"err"],[403,17,391,15],[404,6,392,4],[405,4,393,2],[406,4,394,2],[406,8,394,6],[406,9,394,7,"response"],[406,17,394,15],[406,18,394,16,"ok"],[406,20,394,18],[406,22,394,20],[407,6,395,4,"restoreMessagesOnFailure"],[407,30,395,28],[407,31,395,29],[407,32,395,30],[408,6,396,4],[408,12,396,10],[408,16,396,14,"Error"],[408,21,396,19],[408,22,397,6],[408,29,397,12,"response"],[408,37,397,20],[408,38,397,21,"text"],[408,42,397,25],[408,43,397,26],[408,44,397,27],[408,49,397,31],[408,85,398,4],[408,86,398,5],[409,4,399,2],[410,4,400,2],[410,8,400,6],[410,9,400,7,"response"],[410,17,400,15],[410,18,400,16,"body"],[410,22,400,20],[410,24,400,22],[411,6,401,4],[411,12,401,10],[411,16,401,14,"Error"],[411,21,401,19],[411,22,401,20],[411,51,401,49],[411,52,401,50],[412,4,402,2],[413,4,403,2],[413,10,403,8,"reader"],[413,16,403,14],[413,19,403,17,"response"],[413,27,403,25],[413,28,403,26,"body"],[413,32,403,30],[413,33,403,31,"getReader"],[413,42,403,40],[413,43,403,41],[413,44,403,42],[414,4,404,2],[414,10,404,8,"isComplexMode"],[414,23,404,21],[414,26,404,24,"response"],[414,34,404,32],[414,35,404,33,"headers"],[414,42,404,40],[414,43,404,41,"get"],[414,46,404,44],[414,47,404,45,"COMPLEX_HEADER"],[414,61,404,59],[414,62,404,60],[414,67,404,65],[414,73,404,71],[415,4,405,2],[415,8,405,6,"isComplexMode"],[415,21,405,19],[415,23,405,21],[416,6,406,4],[416,13,406,11],[416,19,406,17,"parseComplexResponse"],[416,39,406,37],[416,40,406,38],[417,8,407,6,"reader"],[417,14,407,12],[418,8,408,6,"abortControllerRef"],[418,26,408,24],[418,28,408,26,"abortController"],[418,43,408,41],[418,47,408,45],[418,51,408,49],[418,54,408,52],[419,10,408,54,"current"],[419,17,408,61],[419,19,408,63,"abortController"],[419,34,408,78],[419,35,408,79],[420,8,408,81],[420,9,408,82],[420,12,408,85],[420,17,408,90],[420,18,408,91],[421,8,409,6,"update"],[421,14,409,12],[421,16,409,14,"onUpdate"],[421,24,409,22],[422,8,410,6,"onFinish"],[422,16,410,14,"onFinish"],[422,17,410,15,"prefixMap"],[422,26,410,24],[422,28,410,26],[423,10,411,8],[423,14,411,12,"onFinish"],[423,22,411,20],[423,26,411,24,"prefixMap"],[423,35,411,33],[423,36,411,34,"text"],[423,40,411,38],[423,44,411,42],[423,48,411,46],[423,50,411,48],[424,12,412,10,"onFinish"],[424,20,412,18],[424,21,412,19,"prefixMap"],[424,30,412,28],[424,31,412,29,"text"],[424,35,412,33],[424,36,412,34],[425,10,413,8],[426,8,414,6],[426,9,414,7],[427,8,415,6,"generateId"],[428,6,416,4],[428,7,416,5],[428,8,416,6],[429,4,417,2],[429,5,417,3],[429,11,417,9],[430,6,418,4],[430,12,418,10,"createdAt"],[430,21,418,19],[430,24,418,22],[430,39,418,38],[430,43,418,42,"Date"],[430,47,418,46],[430,48,418,47],[430,49,418,48],[431,6,419,4],[431,12,419,10,"decode"],[431,18,419,16],[431,21,419,19,"createChunkDecoder"],[431,39,419,37],[431,40,419,38],[431,45,419,43],[431,46,419,44],[432,6,420,4],[432,10,420,8,"streamedResponse"],[432,26,420,24],[432,29,420,27],[432,31,420,29],[433,6,421,4],[433,12,421,10,"replyId"],[433,19,421,17],[433,22,421,20,"generateId"],[433,32,421,30],[433,33,421,31],[433,34,421,32],[434,6,422,4],[434,10,422,8,"responseMessage"],[434,25,422,23],[434,28,422,26],[435,8,423,6,"id"],[435,10,423,8],[435,12,423,10,"replyId"],[435,19,423,17],[436,8,424,6,"createdAt"],[436,17,424,15],[437,8,425,6,"content"],[437,15,425,13],[437,17,425,15],[437,19,425,17],[438,8,426,6,"role"],[438,12,426,10],[438,14,426,12],[439,6,427,4],[439,7,427,5],[440,6,428,4],[440,13,428,11],[440,17,428,15],[440,19,428,17],[441,8,429,6],[441,14,429,12],[442,10,429,14,"done"],[442,14,429,18],[443,10,429,20,"value"],[444,8,429,26],[444,9,429,27],[444,12,429,30],[444,18,429,36,"reader"],[444,24,429,42],[444,25,429,43,"read"],[444,29,429,47],[444,30,429,48],[444,31,429,49],[445,8,430,6],[445,12,430,10,"done"],[445,16,430,14],[445,18,430,16],[446,10,431,8],[447,8,432,6],[448,8,433,6,"streamedResponse"],[448,24,433,22],[448,28,433,26,"decode"],[448,34,433,32],[448,35,433,33,"value"],[448,40,433,38],[448,41,433,39],[449,8,434,6],[449,12,434,10,"streamedResponse"],[449,28,434,26],[449,29,434,27,"startsWith"],[449,39,434,37],[449,40,434,38],[449,59,434,57],[449,60,434,58],[449,62,434,60],[450,10,435,8,"responseMessage"],[450,25,435,23],[450,26,435,24],[450,41,435,39],[450,42,435,40],[450,45,435,43,"streamedResponse"],[450,61,435,59],[451,8,436,6],[451,9,436,7],[451,15,436,13],[451,19,436,17,"streamedResponse"],[451,35,436,33],[451,36,436,34,"startsWith"],[451,46,436,44],[451,47,436,45],[451,63,436,61],[451,64,436,62],[451,66,436,64],[452,10,437,8,"responseMessage"],[452,25,437,23],[452,26,437,24],[452,38,437,36],[452,39,437,37],[452,42,437,40,"streamedResponse"],[452,58,437,56],[453,8,438,6],[453,9,438,7],[453,15,438,13],[454,10,439,8,"responseMessage"],[454,25,439,23],[454,26,439,24],[454,35,439,33],[454,36,439,34],[454,39,439,37,"streamedResponse"],[454,55,439,53],[455,8,440,6],[456,8,441,6,"appendMessage"],[456,21,441,19],[456,22,441,20],[457,10,441,22],[457,13,441,25,"responseMessage"],[458,8,441,41],[458,9,441,42],[458,10,441,43],[459,8,442,6],[459,12,442,10],[459,13,442,11,"abortController"],[459,28,442,26],[459,32,442,30],[459,36,442,34],[459,39,442,37],[459,44,442,42],[459,45,442,43],[459,48,442,46,"abortController"],[459,63,442,61],[459,64,442,62],[459,65,442,63],[459,71,442,69],[459,75,442,73],[459,77,442,75],[460,10,443,8,"reader"],[460,16,443,14],[460,17,443,15,"cancel"],[460,23,443,21],[460,24,443,22],[460,25,443,23],[461,10,444,8],[462,8,445,6],[463,6,446,4],[464,6,447,4],[464,10,447,8,"streamedResponse"],[464,26,447,24],[464,27,447,25,"startsWith"],[464,37,447,35],[464,38,447,36],[464,57,447,55],[464,58,447,56],[464,60,447,58],[465,8,448,6],[465,14,448,12,"parsedFunctionCall"],[465,32,448,30],[465,35,448,33,"JSON"],[465,39,448,37],[465,40,448,38,"parse"],[465,45,448,43],[465,46,448,44,"streamedResponse"],[465,62,448,60],[465,63,448,61],[465,64,448,62,"function_call"],[465,77,448,75],[466,8,449,6,"responseMessage"],[466,23,449,21],[466,24,449,22],[466,39,449,37],[466,40,449,38],[466,43,449,41,"parsedFunctionCall"],[466,61,449,59],[467,8,450,6,"appendMessage"],[467,21,450,19],[467,22,450,20],[468,10,450,22],[468,13,450,25,"responseMessage"],[469,8,450,41],[469,9,450,42],[469,10,450,43],[470,6,451,4],[471,6,452,4],[471,10,452,8,"streamedResponse"],[471,26,452,24],[471,27,452,25,"startsWith"],[471,37,452,35],[471,38,452,36],[471,54,452,52],[471,55,452,53],[471,57,452,55],[472,8,453,6],[472,14,453,12,"parsedToolCalls"],[472,29,453,27],[472,32,453,30,"JSON"],[472,36,453,34],[472,37,453,35,"parse"],[472,42,453,40],[472,43,453,41,"streamedResponse"],[472,59,453,57],[472,60,453,58],[472,61,453,59,"tool_calls"],[472,71,453,69],[473,8,454,6,"responseMessage"],[473,23,454,21],[473,24,454,22],[473,36,454,34],[473,37,454,35],[473,40,454,38,"parsedToolCalls"],[473,55,454,53],[474,8,455,6,"appendMessage"],[474,21,455,19],[474,22,455,20],[475,10,455,22],[475,13,455,25,"responseMessage"],[476,8,455,41],[476,9,455,42],[476,10,455,43],[477,6,456,4],[478,6,457,4],[478,10,457,8,"onFinish"],[478,18,457,16],[478,20,457,18],[479,8,458,6,"onFinish"],[479,16,458,14],[479,17,458,15,"responseMessage"],[479,32,458,30],[479,33,458,31],[480,6,459,4],[481,6,460,4],[481,13,460,11,"responseMessage"],[481,28,460,26],[482,4,461,2],[483,2,462,0],[485,2,464,0],[486,2,465,0],[486,17,465,15,"processChatStream"],[486,34,465,32,"processChatStream"],[486,35,465,33],[487,4,466,2,"getStreamedResponse"],[487,23,466,21],[487,25,466,23,"getStreamedResponse2"],[487,45,466,43],[488,4,467,2,"experimental_onFunctionCall"],[488,31,467,29],[489,4,468,2,"experimental_onToolCall"],[489,27,468,25],[490,4,469,2,"updateChatRequest"],[490,21,469,19],[491,4,470,2,"getCurrentMessages"],[492,2,471,0],[492,3,471,1],[492,5,471,3],[493,4,472,2],[493,11,472,9],[493,15,472,13],[493,17,472,15],[494,6,473,4],[494,12,473,10,"messagesAndDataOrJustMessage"],[494,40,473,38],[494,43,473,41],[494,49,473,47,"getStreamedResponse2"],[494,69,473,67],[494,70,473,68],[494,71,473,69],[495,6,474,4],[495,10,474,8],[495,20,474,18],[495,24,474,22,"messagesAndDataOrJustMessage"],[495,52,474,50],[495,54,474,52],[496,8,475,6],[496,12,475,10,"hasFollowingResponse"],[496,32,475,30],[496,35,475,33],[496,40,475,38],[497,8,476,6],[497,13,476,11],[497,19,476,17,"message"],[497,26,476,24],[497,30,476,28,"messagesAndDataOrJustMessage"],[497,58,476,56],[497,59,476,57,"messages"],[497,67,476,65],[497,69,476,67],[498,10,477,8],[498,14,477,12],[498,15,477,13,"message"],[498,22,477,20],[498,23,477,21,"function_call"],[498,36,477,34],[498,41,477,39],[498,46,477,44],[498,47,477,45],[498,51,477,49],[498,58,477,56,"message"],[498,65,477,63],[498,66,477,64,"function_call"],[498,79,477,77],[498,84,477,82],[498,92,477,90],[498,98,477,96,"message"],[498,105,477,103],[498,106,477,104,"tool_calls"],[498,116,477,114],[498,121,477,119],[498,126,477,124],[498,127,477,125],[498,131,477,129],[498,138,477,136,"message"],[498,145,477,143],[498,146,477,144,"tool_calls"],[498,156,477,154],[498,161,477,159],[498,169,477,167],[498,170,477,168],[498,172,477,170],[499,12,478,10],[500,10,479,8],[501,10,480,8,"hasFollowingResponse"],[501,30,480,28],[501,33,480,31],[501,37,480,35],[502,10,481,8],[502,14,481,12,"experimental_onFunctionCall"],[502,41,481,39],[502,43,481,41],[503,12,482,10],[503,18,482,16,"functionCall"],[503,30,482,28],[503,33,482,31,"message"],[503,40,482,38],[503,41,482,39,"function_call"],[503,54,482,52],[504,12,483,10],[504,16,483,14],[504,23,483,21,"functionCall"],[504,35,483,33],[504,40,483,38],[504,48,483,46],[504,50,483,48],[505,14,484,12,"console"],[505,21,484,19],[505,22,484,20,"warn"],[505,26,484,24],[505,27,485,14],[505,95,486,12],[505,96,486,13],[506,14,487,12],[507,12,488,10],[508,12,489,10],[508,18,489,16,"functionCallResponse"],[508,38,489,36],[508,41,489,39],[508,47,489,45,"experimental_onFunctionCall"],[508,74,489,72],[508,75,490,12,"getCurrentMessages"],[508,93,490,30],[508,94,490,31],[508,95,490,32],[508,97,491,12,"functionCall"],[508,109,492,10],[508,110,492,11],[509,12,493,10],[509,16,493,14,"functionCallResponse"],[509,36,493,34],[509,41,493,39],[509,46,493,44],[509,47,493,45],[509,49,493,47],[510,14,494,12,"hasFollowingResponse"],[510,34,494,32],[510,37,494,35],[510,42,494,40],[511,14,495,12],[512,12,496,10],[513,12,497,10,"updateChatRequest"],[513,29,497,27],[513,30,497,28,"functionCallResponse"],[513,50,497,48],[513,51,497,49],[514,10,498,8],[515,10,499,8],[515,14,499,12,"experimental_onToolCall"],[515,37,499,35],[515,39,499,37],[516,12,500,10],[516,18,500,16,"toolCalls"],[516,27,500,25],[516,30,500,28,"message"],[516,37,500,35],[516,38,500,36,"tool_calls"],[516,48,500,46],[517,12,501,10],[517,16,501,14],[517,17,501,15,"Array"],[517,22,501,20],[517,23,501,21,"isArray"],[517,30,501,28],[517,31,501,29,"toolCalls"],[517,40,501,38],[517,41,501,39],[517,45,501,43,"toolCalls"],[517,54,501,52],[517,55,501,53,"some"],[517,59,501,57],[517,60,501,59,"toolCall"],[517,68,501,67],[517,72,501,72],[517,79,501,79,"toolCall"],[517,87,501,87],[517,92,501,92],[517,100,501,100],[517,101,501,101],[517,103,501,103],[518,14,502,12,"console"],[518,21,502,19],[518,22,502,20,"warn"],[518,26,502,24],[518,27,503,14],[518,91,504,12],[518,92,504,13],[519,14,505,12],[520,12,506,10],[521,12,507,10],[521,18,507,16,"toolCallResponse"],[521,34,507,32],[521,37,507,35],[521,43,507,41,"experimental_onToolCall"],[521,66,507,64],[521,67,507,65,"getCurrentMessages"],[521,85,507,83],[521,86,507,84],[521,87,507,85],[521,89,507,87,"toolCalls"],[521,98,507,96],[521,99,507,97],[522,12,508,10],[522,16,508,14,"toolCallResponse"],[522,32,508,30],[522,37,508,35],[522,42,508,40],[522,43,508,41],[522,45,508,43],[523,14,509,12,"hasFollowingResponse"],[523,34,509,32],[523,37,509,35],[523,42,509,40],[524,14,510,12],[525,12,511,10],[526,12,512,10,"updateChatRequest"],[526,29,512,27],[526,30,512,28,"toolCallResponse"],[526,46,512,44],[526,47,512,45],[527,10,513,8],[528,8,514,6],[529,8,515,6],[529,12,515,10],[529,13,515,11,"hasFollowingResponse"],[529,33,515,31],[529,35,515,33],[530,10,516,8],[531,8,517,6],[532,6,518,4],[532,7,518,5],[532,13,518,11],[533,8,519,6],[533,12,519,10,"fixFunctionCallArguments2"],[533,37,519,35],[533,40,519,38],[533,49,519,38,"fixFunctionCallArguments2"],[533,50,519,47,"response"],[533,58,519,55],[533,60,519,57],[534,10,520,8],[534,15,520,13],[534,21,520,19,"message"],[534,28,520,26],[534,32,520,30,"response"],[534,40,520,38],[534,41,520,39,"messages"],[534,49,520,47],[534,51,520,49],[535,12,521,10],[535,16,521,14,"message"],[535,23,521,21],[535,24,521,22,"tool_calls"],[535,34,521,32],[535,39,521,37],[535,44,521,42],[535,45,521,43],[535,47,521,45],[536,14,522,12],[536,19,522,17],[536,25,522,23,"toolCall"],[536,33,522,31],[536,37,522,35,"message"],[536,44,522,42],[536,45,522,43,"tool_calls"],[536,55,522,53],[536,57,522,55],[537,16,523,14],[537,20,523,18],[537,27,523,25,"toolCall"],[537,35,523,33],[537,40,523,38],[537,48,523,46],[537,50,523,48],[538,18,524,16],[538,22,524,20,"toolCall"],[538,30,524,28],[538,31,524,29,"function"],[538,39,524,37],[538,40,524,38,"arguments"],[538,49,524,47],[538,53,524,51],[538,60,524,58,"toolCall"],[538,68,524,66],[538,69,524,67,"function"],[538,77,524,75],[538,78,524,76,"arguments"],[538,87,524,85],[538,92,524,90],[538,100,524,98],[538,102,524,100],[539,20,525,18,"toolCall"],[539,28,525,26],[539,29,525,27,"function"],[539,37,525,35],[539,38,525,36,"arguments"],[539,47,525,45],[539,50,525,48,"JSON"],[539,54,525,52],[539,55,525,53,"stringify"],[539,64,525,62],[539,65,526,20,"toolCall"],[539,73,526,28],[539,74,526,29,"function"],[539,82,526,37],[539,83,526,38,"arguments"],[539,92,527,18],[539,93,527,19],[540,18,528,16],[541,16,529,14],[542,14,530,12],[543,12,531,10],[544,12,532,10],[544,16,532,14,"message"],[544,23,532,21],[544,24,532,22,"function_call"],[544,37,532,35],[544,42,532,40],[544,47,532,45],[544,48,532,46],[544,50,532,48],[545,14,533,12],[545,18,533,16],[545,25,533,23,"message"],[545,32,533,30],[545,33,533,31,"function_call"],[545,46,533,44],[545,51,533,49],[545,59,533,57],[545,61,533,59],[546,16,534,14],[546,20,534,18,"message"],[546,27,534,25],[546,28,534,26,"function_call"],[546,41,534,39],[546,42,534,40,"arguments"],[546,51,534,49],[546,55,534,53],[546,62,534,60,"message"],[546,69,534,67],[546,70,534,68,"function_call"],[546,83,534,81],[546,84,534,82,"arguments"],[546,93,534,91],[546,98,534,96],[546,106,534,104],[546,108,534,106],[547,18,535,16,"message"],[547,25,535,23],[547,26,535,24,"function_call"],[547,39,535,37],[547,40,535,38,"arguments"],[547,49,535,47],[547,52,535,50,"JSON"],[547,56,535,54],[547,57,535,55,"stringify"],[547,66,535,64],[547,67,536,18,"message"],[547,74,536,25],[547,75,536,26,"function_call"],[547,88,536,39],[547,89,536,40,"arguments"],[547,98,537,16],[547,99,537,17],[548,16,538,14],[549,14,539,12],[550,12,540,10],[551,10,541,8],[552,8,542,6],[552,9,542,7],[553,8,543,6],[553,12,543,10,"fixFunctionCallArguments"],[553,36,543,34],[553,39,543,37,"fixFunctionCallArguments2"],[553,64,543,62],[554,8,544,6],[554,14,544,12,"streamedResponseMessage"],[554,37,544,35],[554,40,544,38,"messagesAndDataOrJustMessage"],[554,68,544,66],[555,8,545,6],[555,12,545,10],[555,13,545,11,"streamedResponseMessage"],[555,36,545,34],[555,37,545,35,"function_call"],[555,50,545,48],[555,55,545,53],[555,60,545,58],[555,61,545,59],[555,65,545,63],[555,72,545,70,"streamedResponseMessage"],[555,95,545,93],[555,96,545,94,"function_call"],[555,109,545,107],[555,114,545,112],[555,122,545,120],[555,128,545,126,"streamedResponseMessage"],[555,151,545,149],[555,152,545,150,"tool_calls"],[555,162,545,160],[555,167,545,165],[555,172,545,170],[555,173,545,171],[555,177,545,175],[555,184,545,182,"streamedResponseMessage"],[555,207,545,205],[555,208,545,206,"tool_calls"],[555,218,545,216],[555,223,545,221],[555,231,545,229],[555,232,545,230],[555,234,545,232],[556,10,546,8],[557,8,547,6],[558,8,548,6],[558,12,548,10,"experimental_onFunctionCall"],[558,39,548,37],[558,41,548,39],[559,10,549,8],[559,16,549,14,"functionCall"],[559,28,549,26],[559,31,549,29,"streamedResponseMessage"],[559,54,549,52],[559,55,549,53,"function_call"],[559,68,549,66],[560,10,550,8],[560,14,550,12],[560,16,550,14],[560,23,550,21,"functionCall"],[560,35,550,33],[560,40,550,38],[560,48,550,46],[560,49,550,47],[560,51,550,49],[561,12,551,10,"console"],[561,19,551,17],[561,20,551,18,"warn"],[561,24,551,22],[561,25,552,12],[561,93,553,10],[561,94,553,11],[562,12,554,10],[563,10,555,8],[564,10,556,8],[564,16,556,14,"functionCallResponse"],[564,36,556,34],[564,39,556,37],[564,45,556,43,"experimental_onFunctionCall"],[564,72,556,70],[564,73,556,71,"getCurrentMessages"],[564,91,556,89],[564,92,556,90],[564,93,556,91],[564,95,556,93,"functionCall"],[564,107,556,105],[564,108,556,106],[565,10,557,8],[565,14,557,12,"functionCallResponse"],[565,34,557,32],[565,39,557,37],[565,44,557,42],[565,45,557,43],[565,47,558,10],[566,10,559,8,"fixFunctionCallArguments2"],[566,35,559,33],[566,36,559,34,"functionCallResponse"],[566,56,559,54],[566,57,559,55],[567,10,560,8,"updateChatRequest"],[567,27,560,25],[567,28,560,26,"functionCallResponse"],[567,48,560,46],[567,49,560,47],[568,8,561,6],[569,8,562,6],[569,12,562,10,"experimental_onToolCall"],[569,35,562,33],[569,37,562,35],[570,10,563,8],[570,16,563,14,"toolCalls"],[570,25,563,23],[570,28,563,26,"streamedResponseMessage"],[570,51,563,49],[570,52,563,50,"tool_calls"],[570,62,563,60],[571,10,564,8],[571,14,564,12],[571,16,564,14],[571,23,564,21,"toolCalls"],[571,32,564,30],[571,37,564,35],[571,45,564,43],[571,46,564,44],[571,48,564,46],[572,12,565,10,"console"],[572,19,565,17],[572,20,565,18,"warn"],[572,24,565,22],[572,25,566,12],[572,93,567,10],[572,94,567,11],[573,12,568,10],[574,10,569,8],[575,10,570,8],[575,16,570,14,"toolCallResponse"],[575,32,570,30],[575,35,570,33],[575,41,570,39,"experimental_onToolCall"],[575,64,570,62],[575,65,570,63,"getCurrentMessages"],[575,83,570,81],[575,84,570,82],[575,85,570,83],[575,87,570,85,"toolCalls"],[575,96,570,94],[575,97,570,95],[576,10,571,8],[576,14,571,12,"toolCallResponse"],[576,30,571,28],[576,35,571,33],[576,40,571,38],[576,41,571,39],[576,43,572,10],[577,10,573,8,"fixFunctionCallArguments2"],[577,35,573,33],[577,36,573,34,"toolCallResponse"],[577,52,573,50],[577,53,573,51],[578,10,574,8,"updateChatRequest"],[578,27,574,25],[578,28,574,26,"toolCallResponse"],[578,44,574,42],[578,45,574,43],[579,8,575,6],[580,6,576,4],[581,4,577,2],[582,2,578,0],[584,2,580,0],[585,2,581,0],[585,6,581,4,"getStreamedResponse"],[585,25,581,23],[585,28,581,26],[585,34,581,26,"getStreamedResponse"],[585,35,581,33,"api"],[585,38,581,36],[585,40,581,38,"chatRequest"],[585,51,581,49],[585,53,581,51,"mutate"],[585,59,581,57],[585,61,581,59,"mutateStreamData"],[585,77,581,75],[585,79,581,77,"existingData"],[585,91,581,89],[585,93,581,91,"extraMetadataRef"],[585,109,581,107],[585,111,581,109,"messagesRef"],[585,122,581,120],[585,124,581,122,"abortControllerRef"],[585,142,581,140],[585,144,581,142,"generateId"],[585,154,581,152],[585,156,581,154,"onFinish"],[585,164,581,162],[585,166,581,164,"onResponse"],[585,176,581,174],[585,178,581,176,"sendExtraMessageFields"],[585,200,581,198],[585,205,581,203],[586,4,582,2],[586,8,582,6,"_a"],[586,10,582,8],[586,12,582,10,"_b"],[586,14,582,12],[587,4,583,2],[587,10,583,8,"previousMessages"],[587,26,583,24],[587,29,583,27,"messagesRef"],[587,40,583,38],[587,41,583,39,"current"],[587,48,583,46],[588,4,584,2,"mutate"],[588,10,584,8],[588,11,584,9,"chatRequest"],[588,22,584,20],[588,23,584,21,"messages"],[588,31,584,29],[588,33,584,31],[588,38,584,36],[588,39,584,37],[589,4,585,2],[589,10,585,8,"constructedMessagesPayload"],[589,36,585,34],[589,39,585,37,"sendExtraMessageFields"],[589,61,585,59],[589,64,585,62,"chatRequest"],[589,75,585,73],[589,76,585,74,"messages"],[589,84,585,82],[589,87,585,85,"chatRequest"],[589,98,585,96],[589,99,585,97,"messages"],[589,107,585,105],[589,108,585,106,"map"],[589,111,585,109],[589,112,586,4],[589,113,586,5],[590,6,586,7,"role"],[590,10,586,11],[591,6,586,13,"content"],[591,13,586,20],[592,6,586,22,"name"],[592,10,586,26],[593,6,586,28,"function_call"],[593,19,586,41],[594,6,586,43,"tool_calls"],[594,16,586,53],[595,6,586,55,"tool_call_id"],[596,4,586,68],[596,5,586,69],[596,11,586,75],[597,6,587,6,"role"],[597,10,587,10],[598,6,588,6,"content"],[598,13,588,13],[599,6,589,6,"tool_call_id"],[599,18,589,18],[600,6,590,6],[600,10,590,9,"name"],[600,14,590,13],[600,19,590,18],[600,24,590,23],[600,25,590,24],[600,29,590,28],[601,8,590,30,"name"],[602,6,590,35],[602,7,590,36],[603,6,591,6],[603,10,591,9,"function_call"],[603,23,591,22],[603,28,591,27],[603,33,591,32],[603,34,591,33],[603,38,591,37],[604,8,592,8,"function_call"],[605,6,593,6],[605,7,593,7],[606,6,594,6],[606,10,594,9,"tool_calls"],[606,20,594,19],[606,25,594,24],[606,30,594,29],[606,31,594,30],[606,35,594,34],[607,8,595,8,"tool_calls"],[608,6,596,6],[608,7,596,7],[609,4,597,4],[609,5,597,5],[609,6,598,2],[609,7,598,3],[610,4,599,2],[610,8,599,6],[610,15,599,13,"api"],[610,18,599,16],[610,23,599,21],[610,31,599,29],[610,33,599,31],[611,6,600,4],[611,12,600,10,"replyId"],[611,19,600,17],[611,22,600,20,"generateId"],[611,32,600,30],[611,33,600,31],[611,34,600,32],[612,6,601,4],[612,12,601,10,"createdAt"],[612,21,601,19],[612,24,601,22],[612,39,601,38],[612,43,601,42,"Date"],[612,47,601,46],[612,48,601,47],[612,49,601,48],[613,6,602,4],[613,10,602,8,"responseMessage"],[613,25,602,23],[613,28,602,26],[614,8,603,6,"id"],[614,10,603,8],[614,12,603,10,"replyId"],[614,19,603,17],[615,8,604,6,"createdAt"],[615,17,604,15],[616,8,605,6,"content"],[616,15,605,13],[616,17,605,15],[616,19,605,17],[617,8,606,6,"role"],[617,12,606,10],[617,14,606,12],[618,6,607,4],[618,7,607,5],[619,6,608,4],[619,21,608,19,"readRow"],[619,28,608,26,"readRow"],[619,29,608,27,"promise"],[619,36,608,34],[619,38,608,36],[620,8,609,6],[620,14,609,12],[621,10,609,14,"content"],[621,17,609,21],[622,10,609,23,"ui"],[622,12,609,25],[623,10,609,27,"next"],[624,8,609,32],[624,9,609,33],[624,12,609,36],[624,18,609,42,"promise"],[624,25,609,49],[625,8,610,6,"responseMessage"],[625,23,610,21],[625,24,610,22],[625,33,610,31],[625,34,610,32],[625,37,610,35,"content"],[625,44,610,42],[626,8,611,6,"responseMessage"],[626,23,611,21],[626,24,611,22],[626,28,611,26],[626,29,611,27],[626,32,611,30],[626,38,611,36,"ui"],[626,40,611,38],[627,8,612,6,"mutate"],[627,14,612,12],[627,15,612,13],[627,16,612,14],[627,19,612,17,"chatRequest"],[627,30,612,28],[627,31,612,29,"messages"],[627,39,612,37],[627,41,612,39],[628,10,612,41],[628,13,612,44,"responseMessage"],[629,8,612,60],[629,9,612,61],[629,10,612,62],[629,12,612,64],[629,17,612,69],[629,18,612,70],[630,8,613,6],[630,12,613,10,"next"],[630,16,613,14],[630,18,613,16],[631,10,614,8],[631,16,614,14,"readRow"],[631,23,614,21],[631,24,614,22,"next"],[631,28,614,26],[631,29,614,27],[632,8,615,6],[633,6,616,4],[634,6,617,4],[634,10,617,8],[635,8,618,6],[635,14,618,12,"promise"],[635,21,618,19],[635,24,618,22,"api"],[635,27,618,25],[635,28,618,26],[636,10,619,8,"messages"],[636,18,619,16],[636,20,619,18,"constructedMessagesPayload"],[636,46,619,44],[637,10,620,8,"data"],[637,14,620,12],[637,16,620,14,"chatRequest"],[637,27,620,25],[637,28,620,26,"data"],[638,8,621,6],[638,9,621,7],[638,10,621,8],[639,8,622,6],[639,14,622,12,"readRow"],[639,21,622,19],[639,22,622,20,"promise"],[639,29,622,27],[639,30,622,28],[640,6,623,4],[640,7,623,5],[640,8,623,6],[640,15,623,13,"e"],[640,16,623,14],[640,18,623,16],[641,8,624,6,"mutate"],[641,14,624,12],[641,15,624,13,"previousMessages"],[641,31,624,29],[641,33,624,31],[641,38,624,36],[641,39,624,37],[642,8,625,6],[642,14,625,12,"e"],[642,15,625,13],[643,6,626,4],[644,6,627,4],[644,10,627,8,"onFinish"],[644,18,627,16],[644,20,627,18],[645,8,628,6,"onFinish"],[645,16,628,14],[645,17,628,15,"responseMessage"],[645,32,628,30],[645,33,628,31],[646,6,629,4],[647,6,630,4],[647,13,630,11,"responseMessage"],[647,28,630,26],[648,4,631,2],[649,4,632,2],[649,11,632,9],[649,17,632,15,"callChatApi"],[649,28,632,26],[649,29,632,27],[650,6,633,4,"api"],[650,9,633,7],[651,6,634,4,"messages"],[651,14,634,12],[651,16,634,14,"constructedMessagesPayload"],[651,42,634,40],[652,6,635,4,"body"],[652,10,635,8],[652,12,635,10],[653,8,636,6,"data"],[653,12,636,10],[653,14,636,12,"chatRequest"],[653,25,636,23],[653,26,636,24,"data"],[653,30,636,28],[654,8,637,6],[654,11,637,9,"extraMetadataRef"],[654,27,637,25],[654,28,637,26,"current"],[654,35,637,33],[654,36,637,34,"body"],[654,40,637,38],[655,8,638,6],[655,12,638,9],[655,13,638,10,"_a"],[655,15,638,12],[655,18,638,15,"chatRequest"],[655,29,638,26],[655,30,638,27,"options"],[655,37,638,34],[655,42,638,39],[655,46,638,43],[655,49,638,46],[655,54,638,51],[655,55,638,52],[655,58,638,55,"_a"],[655,60,638,57],[655,61,638,58,"body"],[655,65,638,62],[656,8,639,6],[656,12,639,9,"chatRequest"],[656,23,639,20],[656,24,639,21,"functions"],[656,33,639,30],[656,38,639,35],[656,43,639,40],[656,44,639,41],[656,48,639,45],[657,10,640,8,"functions"],[657,19,640,17],[657,21,640,19,"chatRequest"],[657,32,640,30],[657,33,640,31,"functions"],[658,8,641,6],[658,9,641,7],[659,8,642,6],[659,12,642,9,"chatRequest"],[659,23,642,20],[659,24,642,21,"function_call"],[659,37,642,34],[659,42,642,39],[659,47,642,44],[659,48,642,45],[659,52,642,49],[660,10,643,8,"function_call"],[660,23,643,21],[660,25,643,23,"chatRequest"],[660,36,643,34],[660,37,643,35,"function_call"],[661,8,644,6],[661,9,644,7],[662,8,645,6],[662,12,645,9,"chatRequest"],[662,23,645,20],[662,24,645,21,"tools"],[662,29,645,26],[662,34,645,31],[662,39,645,36],[662,40,645,37],[662,44,645,41],[663,10,646,8,"tools"],[663,15,646,13],[663,17,646,15,"chatRequest"],[663,28,646,26],[663,29,646,27,"tools"],[664,8,647,6],[664,9,647,7],[665,8,648,6],[665,12,648,9,"chatRequest"],[665,23,648,20],[665,24,648,21,"tool_choice"],[665,35,648,32],[665,40,648,37],[665,45,648,42],[665,46,648,43],[665,50,648,47],[666,10,649,8,"tool_choice"],[666,21,649,19],[666,23,649,21,"chatRequest"],[666,34,649,32],[666,35,649,33,"tool_choice"],[667,8,650,6],[667,9,650,7],[668,6,651,4],[668,7,651,5],[669,6,652,4,"credentials"],[669,17,652,15],[669,19,652,17,"extraMetadataRef"],[669,35,652,33],[669,36,652,34,"current"],[669,43,652,41],[669,44,652,42,"credentials"],[669,55,652,53],[670,6,653,4,"headers"],[670,13,653,11],[670,15,653,13],[671,8,654,6],[671,11,654,9,"extraMetadataRef"],[671,27,654,25],[671,28,654,26,"current"],[671,35,654,33],[671,36,654,34,"headers"],[671,43,654,41],[672,8,655,6],[672,12,655,9],[672,13,655,10,"_b"],[672,15,655,12],[672,18,655,15,"chatRequest"],[672,29,655,26],[672,30,655,27,"options"],[672,37,655,34],[672,42,655,39],[672,46,655,43],[672,49,655,46],[672,54,655,51],[672,55,655,52],[672,58,655,55,"_b"],[672,60,655,57],[672,61,655,58,"headers"],[672,68,655,65],[673,6,656,4],[673,7,656,5],[674,6,657,4,"abortController"],[674,21,657,19],[674,23,657,21,"abortController"],[674,24,657,21],[674,29,657,27,"abortControllerRef"],[674,47,657,45],[674,48,657,46,"current"],[674,55,657,53],[675,6,658,4,"appendMessage"],[675,19,658,17,"appendMessage"],[675,20,658,18,"message"],[675,27,658,25],[675,29,658,27],[676,8,659,6,"mutate"],[676,14,659,12],[676,15,659,13],[676,16,659,14],[676,19,659,17,"chatRequest"],[676,30,659,28],[676,31,659,29,"messages"],[676,39,659,37],[676,41,659,39,"message"],[676,48,659,46],[676,49,659,47],[676,51,659,49],[676,56,659,54],[676,57,659,55],[677,6,660,4],[677,7,660,5],[678,6,661,4,"restoreMessagesOnFailure"],[678,30,661,28,"restoreMessagesOnFailure"],[678,31,661,28],[678,33,661,31],[679,8,662,6,"mutate"],[679,14,662,12],[679,15,662,13,"previousMessages"],[679,31,662,29],[679,33,662,31],[679,38,662,36],[679,39,662,37],[680,6,663,4],[680,7,663,5],[681,6,664,4,"onResponse"],[681,16,664,14],[682,6,665,4,"onUpdate"],[682,14,665,12,"onUpdate"],[682,15,665,13,"merged"],[682,21,665,19],[682,23,665,21,"data"],[682,27,665,25],[682,29,665,27],[683,8,666,6,"mutate"],[683,14,666,12],[683,15,666,13],[683,16,666,14],[683,19,666,17,"chatRequest"],[683,30,666,28],[683,31,666,29,"messages"],[683,39,666,37],[683,41,666,39],[683,44,666,42,"merged"],[683,50,666,48],[683,51,666,49],[683,53,666,51],[683,58,666,56],[683,59,666,57],[684,8,667,6,"mutateStreamData"],[684,24,667,22],[684,25,667,23],[684,26,667,24],[684,30,667,27,"existingData"],[684,42,667,39],[684,46,667,43],[684,48,667,45],[684,51,667,47],[684,55,667,50,"data"],[684,59,667,54],[684,63,667,58],[684,65,667,60],[684,67,667,61],[684,69,667,63],[684,74,667,68],[684,75,667,69],[685,6,668,4],[685,7,668,5],[686,6,669,4,"onFinish"],[686,14,669,12],[687,6,670,4,"generateId"],[688,4,671,2],[688,5,671,3],[688,6,671,4],[689,2,672,0],[689,3,672,1],[690,2,673,0],[690,11,673,9,"useChat"],[690,18,673,16,"useChat"],[690,19,673,17],[691,4,674,2,"api"],[691,7,674,5],[691,10,674,8],[691,21,674,19],[692,4,675,2,"id"],[692,6,675,4],[693,4,676,2,"initialMessages"],[693,19,676,17],[694,4,677,2,"initialInput"],[694,16,677,14],[694,19,677,17],[694,21,677,19],[695,4,678,2,"sendExtraMessageFields"],[695,26,678,24],[696,4,679,2,"experimental_onFunctionCall"],[696,31,679,29],[697,4,680,2,"experimental_onToolCall"],[697,27,680,25],[698,4,681,2,"onResponse"],[698,14,681,12],[699,4,682,2,"onFinish"],[699,12,682,10],[700,4,683,2,"onError"],[700,11,683,9],[701,4,684,2,"credentials"],[701,15,684,13],[702,4,685,2,"headers"],[702,11,685,9],[703,4,686,2,"body"],[703,8,686,6],[704,4,687,2,"generateId"],[704,14,687,12],[704,17,687,15,"nanoid"],[705,2,688,0],[705,3,688,1],[705,6,688,4],[705,7,688,5],[705,8,688,6],[705,10,688,8],[706,4,689,2],[706,10,689,8,"hookId"],[706,16,689,14],[706,19,689,17],[706,23,689,17,"useId"],[706,29,689,22],[706,30,689,22,"useId"],[706,35,689,22],[706,37,689,23],[706,38,689,24],[707,4,690,2],[707,10,690,8,"idKey"],[707,15,690,13],[707,18,690,16,"id"],[707,20,690,18],[707,24,690,22],[707,28,690,26],[707,31,690,29,"id"],[707,33,690,31],[707,36,690,34,"hookId"],[707,42,690,40],[708,4,691,2],[708,10,691,8,"chatKey"],[708,17,691,15],[708,20,691,18],[708,27,691,25,"api"],[708,30,691,28],[708,35,691,33],[708,43,691,41],[708,46,691,44],[708,47,691,45,"api"],[708,50,691,48],[708,52,691,50,"idKey"],[708,57,691,55],[708,58,691,56],[708,61,691,59,"idKey"],[708,66,691,64],[709,4,692,2],[709,10,692,8],[709,11,692,9,"initialMessagesFallback"],[709,34,692,32],[709,35,692,33],[709,38,692,36],[709,42,692,36,"useState"],[709,48,692,44],[709,49,692,44,"useState"],[709,57,692,44],[709,59,692,45],[709,61,692,47],[709,62,692,48],[710,4,693,2],[710,10,693,8],[711,6,693,10,"data"],[711,10,693,14],[711,12,693,16,"messages"],[711,20,693,24],[712,6,693,26,"mutate"],[713,4,693,33],[713,5,693,34],[713,8,693,37],[713,12,693,37,"useSWR"],[713,18,693,43],[713,19,693,43,"default"],[713,26,693,43],[713,28,694,4],[713,29,694,5,"chatKey"],[713,36,694,12],[713,38,694,14],[713,48,694,24],[713,49,694,25],[713,51,695,4],[713,55,695,8],[713,57,696,4],[714,6,696,6,"fallbackData"],[714,18,696,18],[714,20,696,20,"initialMessages"],[714,35,696,35],[714,39,696,39],[714,43,696,43],[714,46,696,46,"initialMessages"],[714,61,696,61],[714,64,696,64,"initialMessagesFallback"],[715,4,696,88],[715,5,697,2],[715,6,697,3],[716,4,698,2],[716,10,698,8],[717,6,698,10,"data"],[717,10,698,14],[717,12,698,16,"isLoading"],[717,21,698,25],[717,24,698,28],[717,29,698,33],[718,6,698,35,"mutate"],[718,12,698,41],[718,14,698,43,"mutateLoading"],[719,4,698,57],[719,5,698,58],[719,8,698,61],[719,12,698,61,"useSWR"],[719,18,698,67],[719,19,698,67,"default"],[719,26,698,67],[719,28,699,4],[719,29,699,5,"chatKey"],[719,36,699,12],[719,38,699,14],[719,47,699,23],[719,48,699,24],[719,50,700,4],[719,54,701,2],[719,55,701,3],[720,4,702,2],[720,10,702,8],[721,6,702,10,"data"],[721,10,702,14],[721,12,702,16,"streamData"],[721,22,702,26],[722,6,702,28,"mutate"],[722,12,702,34],[722,14,702,36,"mutateStreamData"],[723,4,702,53],[723,5,702,54],[723,8,702,57],[723,12,702,57,"useSWR"],[723,18,702,63],[723,19,702,63,"default"],[723,26,702,63],[723,28,702,64],[723,29,702,65,"chatKey"],[723,36,702,72],[723,38,702,74],[723,50,702,86],[723,51,702,87],[723,53,702,89],[723,57,702,93],[723,58,702,94],[724,4,703,2],[724,10,703,8],[725,6,703,10,"data"],[725,10,703,14],[725,12,703,16,"error"],[725,17,703,21],[725,20,703,24],[725,25,703,29],[725,26,703,30],[726,6,703,32,"mutate"],[726,12,703,38],[726,14,703,40,"setError"],[727,4,703,49],[727,5,703,50],[727,8,703,53],[727,12,703,53,"useSWR"],[727,18,703,59],[727,19,703,59,"default"],[727,26,703,59],[727,28,703,60],[727,29,703,61,"chatKey"],[727,36,703,68],[727,38,703,70],[727,45,703,77],[727,46,703,78],[727,48,703,80],[727,52,703,84],[727,53,703,85],[728,4,704,2],[728,10,704,8,"messagesRef"],[728,21,704,19],[728,24,704,22],[728,28,704,22,"useRef"],[728,34,704,28],[728,35,704,28,"useRef"],[728,41,704,28],[728,43,704,29,"messages"],[728,51,704,37],[728,55,704,41],[728,57,704,43],[728,58,704,44],[729,4,705,2],[729,8,705,2,"useEffect"],[729,14,705,11],[729,15,705,11,"useEffect"],[729,24,705,11],[729,26,705,12],[729,32,705,18],[730,6,706,4,"messagesRef"],[730,17,706,15],[730,18,706,16,"current"],[730,25,706,23],[730,28,706,26,"messages"],[730,36,706,34],[730,40,706,38],[730,42,706,40],[731,4,707,2],[731,5,707,3],[731,7,707,5],[731,8,707,6,"messages"],[731,16,707,14],[731,17,707,15],[731,18,707,16],[732,4,708,2],[732,10,708,8,"abortControllerRef"],[732,28,708,26],[732,31,708,29],[732,35,708,29,"useRef"],[732,41,708,35],[732,42,708,35,"useRef"],[732,48,708,35],[732,50,708,36],[732,54,708,40],[732,55,708,41],[733,4,709,2],[733,10,709,8,"extraMetadataRef"],[733,26,709,24],[733,29,709,27],[733,33,709,27,"useRef"],[733,39,709,33],[733,40,709,33,"useRef"],[733,46,709,33],[733,48,709,34],[734,6,710,4,"credentials"],[734,17,710,15],[735,6,711,4,"headers"],[735,13,711,11],[736,6,712,4,"body"],[737,4,713,2],[737,5,713,3],[737,6,713,4],[738,4,714,2],[738,8,714,2,"useEffect"],[738,14,714,11],[738,15,714,11,"useEffect"],[738,24,714,11],[738,26,714,12],[738,32,714,18],[739,6,715,4,"extraMetadataRef"],[739,22,715,20],[739,23,715,21,"current"],[739,30,715,28],[739,33,715,31],[740,8,716,6,"credentials"],[740,19,716,17],[741,8,717,6,"headers"],[741,15,717,13],[742,8,718,6,"body"],[743,6,719,4],[743,7,719,5],[744,4,720,2],[744,5,720,3],[744,7,720,5],[744,8,720,6,"credentials"],[744,19,720,17],[744,21,720,19,"headers"],[744,28,720,26],[744,30,720,28,"body"],[744,34,720,32],[744,35,720,33],[744,36,720,34],[745,4,721,2],[745,10,721,8,"triggerRequest"],[745,24,721,22],[745,27,721,25],[745,31,721,25,"useCallback"],[745,37,721,36],[745,38,721,36,"useCallback"],[745,49,721,36],[745,51,722,4],[745,57,722,11,"chatRequest"],[745,68,722,22],[745,72,722,27],[746,6,723,6],[746,10,723,10],[747,8,724,8,"mutateLoading"],[747,21,724,21],[747,22,724,22],[747,26,724,26],[747,27,724,27],[748,8,725,8,"setError"],[748,16,725,16],[748,17,725,17],[748,22,725,22],[748,23,725,23],[748,24,725,24],[749,8,726,8],[749,14,726,14,"abortController"],[749,29,726,29],[749,32,726,32],[749,36,726,36,"AbortController"],[749,51,726,51],[749,52,726,52],[749,53,726,53],[750,8,727,8,"abortControllerRef"],[750,26,727,26],[750,27,727,27,"current"],[750,34,727,34],[750,37,727,37,"abortController"],[750,52,727,52],[751,8,728,8],[751,14,728,14,"processChatStream"],[751,31,728,31],[751,32,728,32],[752,10,729,10,"getStreamedResponse"],[752,29,729,29],[752,31,729,31,"getStreamedResponse"],[752,32,729,31],[752,37,729,37,"getStreamedResponse"],[752,56,729,56],[752,57,730,12,"api"],[752,60,730,15],[752,62,731,12,"chatRequest"],[752,73,731,23],[752,75,732,12,"mutate"],[752,81,732,18],[752,83,733,12,"mutateStreamData"],[752,99,733,28],[752,101,734,12,"streamData"],[752,111,734,22],[752,113,735,12,"extraMetadataRef"],[752,129,735,28],[752,131,736,12,"messagesRef"],[752,142,736,23],[752,144,737,12,"abortControllerRef"],[752,162,737,30],[752,164,738,12,"generateId"],[752,174,738,22],[752,176,739,12,"onFinish"],[752,184,739,20],[752,186,740,12,"onResponse"],[752,196,740,22],[752,198,741,12,"sendExtraMessageFields"],[752,220,742,10],[752,221,742,11],[753,10,743,10,"experimental_onFunctionCall"],[753,37,743,37],[754,10,744,10,"experimental_onToolCall"],[754,33,744,33],[755,10,745,10,"updateChatRequest"],[755,27,745,27],[755,29,745,30,"chatRequestParam"],[755,45,745,46],[755,49,745,51],[756,12,746,12,"chatRequest"],[756,23,746,23],[756,26,746,26,"chatRequestParam"],[756,42,746,42],[757,10,747,10],[757,11,747,11],[758,10,748,10,"getCurrentMessages"],[758,28,748,28],[758,30,748,30,"getCurrentMessages"],[758,31,748,30],[758,36,748,36,"messagesRef"],[758,47,748,47],[758,48,748,48,"current"],[759,8,749,8],[759,9,749,9],[759,10,749,10],[760,8,750,8,"abortControllerRef"],[760,26,750,26],[760,27,750,27,"current"],[760,34,750,34],[760,37,750,37],[760,41,750,41],[761,6,751,6],[761,7,751,7],[761,8,751,8],[761,15,751,15,"err"],[761,18,751,18],[761,20,751,20],[762,8,752,8],[762,12,752,12,"err"],[762,15,752,15],[762,16,752,16,"name"],[762,20,752,20],[762,25,752,25],[762,37,752,37],[762,39,752,39],[763,10,753,10,"abortControllerRef"],[763,28,753,28],[763,29,753,29,"current"],[763,36,753,36],[763,39,753,39],[763,43,753,43],[764,10,754,10],[764,17,754,17],[764,21,754,21],[765,8,755,8],[766,8,756,8],[766,12,756,12,"onError"],[766,19,756,19],[766,23,756,23,"err"],[766,26,756,26],[766,38,756,38,"Error"],[766,43,756,43],[766,45,756,45],[767,10,757,10,"onError"],[767,17,757,17],[767,18,757,18,"err"],[767,21,757,21],[767,22,757,22],[768,8,758,8],[769,8,759,8,"setError"],[769,16,759,16],[769,17,759,17,"err"],[769,20,759,20],[769,21,759,21],[770,6,760,6],[770,7,760,7],[770,16,760,16],[771,8,761,8,"mutateLoading"],[771,21,761,21],[771,22,761,22],[771,27,761,27],[771,28,761,28],[772,6,762,6],[773,4,763,4],[773,5,763,5],[773,7,764,4],[773,8,765,6,"mutate"],[773,14,765,12],[773,16,766,6,"mutateLoading"],[773,29,766,19],[773,31,767,6,"api"],[773,34,767,9],[773,36,768,6,"extraMetadataRef"],[773,52,768,22],[773,54,769,6,"onResponse"],[773,64,769,16],[773,66,770,6,"onFinish"],[773,74,770,14],[773,76,771,6,"onError"],[773,83,771,13],[773,85,772,6,"setError"],[773,93,772,14],[773,95,773,6,"mutateStreamData"],[773,111,773,22],[773,113,774,6,"streamData"],[773,123,774,16],[773,125,775,6,"sendExtraMessageFields"],[773,147,775,28],[773,149,776,6,"experimental_onFunctionCall"],[773,176,776,33],[773,178,777,6,"experimental_onToolCall"],[773,201,777,29],[773,203,778,6,"messagesRef"],[773,214,778,17],[773,216,779,6,"abortControllerRef"],[773,234,779,24],[773,236,780,6,"generateId"],[773,246,780,16],[773,247,782,2],[773,248,782,3],[774,4,783,2],[774,10,783,8,"append"],[774,16,783,14],[774,19,783,17],[774,23,783,17,"useCallback"],[774,29,783,28],[774,30,783,28,"useCallback"],[774,41,783,28],[774,43,784,4],[774,50,784,11,"message"],[774,57,784,18],[774,59,784,20],[775,6,785,6,"options"],[775,13,785,13],[776,6,786,6,"functions"],[776,15,786,15],[777,6,787,6,"function_call"],[777,19,787,19],[778,6,788,6,"tools"],[778,11,788,11],[779,6,789,6,"tool_choice"],[779,17,789,17],[780,6,790,6,"data"],[781,4,791,4],[781,5,791,5],[781,8,791,8],[781,9,791,9],[781,10,791,10],[781,15,791,15],[782,6,792,6],[782,10,792,10],[782,11,792,11,"message"],[782,18,792,18],[782,19,792,19,"id"],[782,21,792,21],[782,23,792,23],[783,8,793,8,"message"],[783,15,793,15],[783,16,793,16,"id"],[783,18,793,18],[783,21,793,21,"generateId"],[783,31,793,31],[783,32,793,32],[783,33,793,33],[784,6,794,6],[785,6,795,6],[785,12,795,12,"chatRequest"],[785,23,795,23],[785,26,795,26],[786,8,796,8,"messages"],[786,16,796,16],[786,18,796,18,"messagesRef"],[786,29,796,29],[786,30,796,30,"current"],[786,37,796,37],[786,38,796,38,"concat"],[786,44,796,44],[786,45,796,45,"message"],[786,52,796,52],[786,53,796,53],[787,8,797,8,"options"],[787,15,797,15],[788,8,798,8,"data"],[788,12,798,12],[789,8,799,8],[789,12,799,11,"functions"],[789,21,799,20],[789,26,799,25],[789,31,799,30],[789,32,799,31],[789,36,799,35],[790,10,799,37,"functions"],[791,8,799,47],[791,9,799,48],[792,8,800,8],[792,12,800,11,"function_call"],[792,25,800,24],[792,30,800,29],[792,35,800,34],[792,36,800,35],[792,40,800,39],[793,10,800,41,"function_call"],[794,8,800,55],[794,9,800,56],[795,8,801,8],[795,12,801,11,"tools"],[795,17,801,16],[795,22,801,21],[795,27,801,26],[795,28,801,27],[795,32,801,31],[796,10,801,33,"tools"],[797,8,801,39],[797,9,801,40],[798,8,802,8],[798,12,802,11,"tool_choice"],[798,23,802,22],[798,28,802,27],[798,33,802,32],[798,34,802,33],[798,38,802,37],[799,10,802,39,"tool_choice"],[800,8,802,51],[800,9,802,52],[801,6,803,6],[801,7,803,7],[802,6,804,6],[802,13,804,13,"triggerRequest"],[802,27,804,27],[802,28,804,28,"chatRequest"],[802,39,804,39],[802,40,804,40],[803,4,805,4],[803,5,805,5],[803,7,806,4],[803,8,806,5,"triggerRequest"],[803,22,806,19],[803,24,806,21,"generateId"],[803,34,806,31],[803,35,807,2],[803,36,807,3],[804,4,808,2],[804,10,808,8,"reload"],[804,16,808,14],[804,19,808,17],[804,23,808,17,"useCallback"],[804,29,808,28],[804,30,808,28,"useCallback"],[804,41,808,28],[804,43,809,4],[804,50,809,11],[805,6,810,6,"options"],[805,13,810,13],[806,6,811,6,"functions"],[806,15,811,15],[807,6,812,6,"function_call"],[807,19,812,19],[808,6,813,6,"tools"],[808,11,813,11],[809,6,814,6,"tool_choice"],[810,4,815,4],[810,5,815,5],[810,8,815,8],[810,9,815,9],[810,10,815,10],[810,15,815,15],[811,6,816,6],[811,10,816,10,"messagesRef"],[811,21,816,21],[811,22,816,22,"current"],[811,29,816,29],[811,30,816,30,"length"],[811,36,816,36],[811,41,816,41],[811,42,816,42],[811,44,817,8],[811,51,817,15],[811,55,817,19],[812,6,818,6],[812,12,818,12,"lastMessage"],[812,23,818,23],[812,26,818,26,"messagesRef"],[812,37,818,37],[812,38,818,38,"current"],[812,45,818,45],[812,46,818,46,"messagesRef"],[812,57,818,57],[812,58,818,58,"current"],[812,65,818,65],[812,66,818,66,"length"],[812,72,818,72],[812,75,818,75],[812,76,818,76],[812,77,818,77],[813,6,819,6],[813,10,819,10,"lastMessage"],[813,21,819,21],[813,22,819,22,"role"],[813,26,819,26],[813,31,819,31],[813,42,819,42],[813,44,819,44],[814,8,820,8],[814,14,820,14,"chatRequest2"],[814,26,820,26],[814,29,820,29],[815,10,821,10,"messages"],[815,18,821,18],[815,20,821,20,"messagesRef"],[815,31,821,31],[815,32,821,32,"current"],[815,39,821,39],[815,40,821,40,"slice"],[815,45,821,45],[815,46,821,46],[815,47,821,47],[815,49,821,49],[815,50,821,50],[815,51,821,51],[815,52,821,52],[816,10,822,10,"options"],[816,17,822,17],[817,10,823,10],[817,14,823,13,"functions"],[817,23,823,22],[817,28,823,27],[817,33,823,32],[817,34,823,33],[817,38,823,37],[818,12,823,39,"functions"],[819,10,823,49],[819,11,823,50],[820,10,824,10],[820,14,824,13,"function_call"],[820,27,824,26],[820,32,824,31],[820,37,824,36],[820,38,824,37],[820,42,824,41],[821,12,824,43,"function_call"],[822,10,824,57],[822,11,824,58],[823,10,825,10],[823,14,825,13,"tools"],[823,19,825,18],[823,24,825,23],[823,29,825,28],[823,30,825,29],[823,34,825,33],[824,12,825,35,"tools"],[825,10,825,41],[825,11,825,42],[826,10,826,10],[826,14,826,13,"tool_choice"],[826,25,826,24],[826,30,826,29],[826,35,826,34],[826,36,826,35],[826,40,826,39],[827,12,826,41,"tool_choice"],[828,10,826,53],[828,11,826,54],[829,8,827,8],[829,9,827,9],[830,8,828,8],[830,15,828,15,"triggerRequest"],[830,29,828,29],[830,30,828,30,"chatRequest2"],[830,42,828,42],[830,43,828,43],[831,6,829,6],[832,6,830,6],[832,12,830,12,"chatRequest"],[832,23,830,23],[832,26,830,26],[833,8,831,8,"messages"],[833,16,831,16],[833,18,831,18,"messagesRef"],[833,29,831,29],[833,30,831,30,"current"],[833,37,831,37],[834,8,832,8,"options"],[834,15,832,15],[835,8,833,8],[835,12,833,11,"functions"],[835,21,833,20],[835,26,833,25],[835,31,833,30],[835,32,833,31],[835,36,833,35],[836,10,833,37,"functions"],[837,8,833,47],[837,9,833,48],[838,8,834,8],[838,12,834,11,"function_call"],[838,25,834,24],[838,30,834,29],[838,35,834,34],[838,36,834,35],[838,40,834,39],[839,10,834,41,"function_call"],[840,8,834,55],[840,9,834,56],[841,8,835,8],[841,12,835,11,"tools"],[841,17,835,16],[841,22,835,21],[841,27,835,26],[841,28,835,27],[841,32,835,31],[842,10,835,33,"tools"],[843,8,835,39],[843,9,835,40],[844,8,836,8],[844,12,836,11,"tool_choice"],[844,23,836,22],[844,28,836,27],[844,33,836,32],[844,34,836,33],[844,38,836,37],[845,10,836,39,"tool_choice"],[846,8,836,51],[846,9,836,52],[847,6,837,6],[847,7,837,7],[848,6,838,6],[848,13,838,13,"triggerRequest"],[848,27,838,27],[848,28,838,28,"chatRequest"],[848,39,838,39],[848,40,838,40],[849,4,839,4],[849,5,839,5],[849,7,840,4],[849,8,840,5,"triggerRequest"],[849,22,840,19],[849,23,841,2],[849,24,841,3],[850,4,842,2],[850,10,842,8,"stop"],[850,14,842,12],[850,17,842,15],[850,21,842,15,"useCallback"],[850,27,842,26],[850,28,842,26,"useCallback"],[850,39,842,26],[850,41,842,27],[850,47,842,33],[851,6,843,4],[851,10,843,8,"abortControllerRef"],[851,28,843,26],[851,29,843,27,"current"],[851,36,843,34],[851,38,843,36],[852,8,844,6,"abortControllerRef"],[852,26,844,24],[852,27,844,25,"current"],[852,34,844,32],[852,35,844,33,"abort"],[852,40,844,38],[852,41,844,39],[852,42,844,40],[853,8,845,6,"abortControllerRef"],[853,26,845,24],[853,27,845,25,"current"],[853,34,845,32],[853,37,845,35],[853,41,845,39],[854,6,846,4],[855,4,847,2],[855,5,847,3],[855,7,847,5],[855,9,847,7],[855,10,847,8],[856,4,848,2],[856,10,848,8,"setMessages"],[856,21,848,19],[856,24,848,22],[856,28,848,22,"useCallback"],[856,34,848,33],[856,35,848,33,"useCallback"],[856,46,848,33],[856,48,849,5,"messages2"],[856,57,849,14],[856,61,849,19],[857,6,850,6,"mutate"],[857,12,850,12],[857,13,850,13,"messages2"],[857,22,850,22],[857,24,850,24],[857,29,850,29],[857,30,850,30],[858,6,851,6,"messagesRef"],[858,17,851,17],[858,18,851,18,"current"],[858,25,851,25],[858,28,851,28,"messages2"],[858,37,851,37],[859,4,852,4],[859,5,852,5],[859,7,853,4],[859,8,853,5,"mutate"],[859,14,853,11],[859,15,854,2],[859,16,854,3],[860,4,855,2],[860,10,855,8],[860,11,855,9,"input"],[860,16,855,14],[860,18,855,16,"setInput"],[860,26,855,24],[860,27,855,25],[860,30,855,28],[860,34,855,28,"useState"],[860,40,855,36],[860,41,855,36,"useState"],[860,49,855,36],[860,51,855,37,"initialInput"],[860,63,855,49],[860,64,855,50],[861,4,856,2],[861,10,856,8,"handleSubmit"],[861,22,856,20],[861,25,856,23],[861,29,856,23,"useCallback"],[861,35,856,34],[861,36,856,34,"useCallback"],[861,47,856,34],[861,49,857,4],[861,50,857,5,"e"],[861,51,857,6],[861,53,857,8,"options"],[861,60,857,15],[861,63,857,18],[861,64,857,19],[861,65,857,20],[861,67,857,22,"metadata"],[861,75,857,30],[861,80,857,35],[862,6,858,6],[862,10,858,10,"metadata"],[862,18,858,18],[862,20,858,20],[863,8,859,8,"extraMetadataRef"],[863,24,859,24],[863,25,859,25,"current"],[863,32,859,32],[863,35,859,35],[864,10,860,10],[864,13,860,13,"extraMetadataRef"],[864,29,860,29],[864,30,860,30,"current"],[864,37,860,37],[865,10,861,10],[865,13,861,13,"metadata"],[866,8,862,8],[866,9,862,9],[867,6,863,6],[868,6,864,6,"e"],[868,7,864,7],[868,8,864,8,"preventDefault"],[868,22,864,22],[868,23,864,23],[868,24,864,24],[869,6,865,6],[869,10,865,10],[869,11,865,11,"input"],[869,16,865,16],[869,18,866,8],[870,6,867,6,"append"],[870,12,867,12],[870,13,868,8],[871,8,869,10,"content"],[871,15,869,17],[871,17,869,19,"input"],[871,22,869,24],[872,8,870,10,"role"],[872,12,870,14],[872,14,870,16],[872,20,870,22],[873,8,871,10,"createdAt"],[873,17,871,19],[873,19,871,21],[873,34,871,37],[873,38,871,41,"Date"],[873,42,871,45],[873,43,871,46],[874,6,872,8],[874,7,872,9],[874,9,873,8,"options"],[874,16,874,6],[874,17,874,7],[875,6,875,6,"setInput"],[875,14,875,14],[875,15,875,15],[875,17,875,17],[875,18,875,18],[876,4,876,4],[876,5,876,5],[876,7,877,4],[876,8,877,5,"input"],[876,13,877,10],[876,15,877,12,"append"],[876,21,877,18],[876,22,878,2],[876,23,878,3],[877,4,879,2],[877,10,879,8,"handleInputChange"],[877,27,879,25],[877,30,879,29,"e"],[877,31,879,30],[877,35,879,35],[878,6,880,4,"setInput"],[878,14,880,12],[878,15,880,13,"e"],[878,16,880,14],[878,17,880,15,"target"],[878,23,880,21],[878,24,880,22,"value"],[878,29,880,27],[878,30,880,28],[879,4,881,2],[879,5,881,3],[880,4,882,2],[880,11,882,9],[881,6,883,4,"messages"],[881,14,883,12],[881,16,883,14,"messages"],[881,24,883,22],[881,28,883,26],[881,30,883,28],[882,6,884,4,"error"],[882,11,884,9],[883,6,885,4,"append"],[883,12,885,10],[884,6,886,4,"reload"],[884,12,886,10],[885,6,887,4,"stop"],[885,10,887,8],[886,6,888,4,"setMessages"],[886,17,888,15],[887,6,889,4,"input"],[887,11,889,9],[888,6,890,4,"setInput"],[888,14,890,12],[889,6,891,4,"handleInputChange"],[889,23,891,21],[890,6,892,4,"handleSubmit"],[890,18,892,16],[891,6,893,4,"isLoading"],[891,15,893,13],[892,6,894,4,"data"],[892,10,894,8],[892,12,894,10,"streamData"],[893,4,895,2],[893,5,895,3],[894,2,896,0],[896,2,898,0],[898,2,902,0],[899,2,903,0],[899,17,903,15,"callCompletionApi"],[899,34,903,32,"callCompletionApi"],[899,35,903,33],[900,4,904,2,"api"],[900,7,904,5],[901,4,905,2,"prompt"],[901,10,905,8],[902,4,906,2,"credentials"],[902,15,906,13],[903,4,907,2,"headers"],[903,11,907,9],[904,4,908,2,"body"],[904,8,908,6],[905,4,909,2,"setCompletion"],[905,17,909,15],[906,4,910,2,"setLoading"],[906,14,910,12],[907,4,911,2,"setError"],[907,12,911,10],[908,4,912,2,"setAbortController"],[908,22,912,20],[909,4,913,2,"onResponse"],[909,14,913,12],[910,4,914,2,"onFinish"],[910,12,914,10],[911,4,915,2,"onError"],[911,11,915,9],[912,4,916,2,"onData"],[913,2,917,0],[913,3,917,1],[913,5,917,3],[914,4,918,2],[914,8,918,6],[915,6,919,4,"setLoading"],[915,16,919,14],[915,17,919,15],[915,21,919,19],[915,22,919,20],[916,6,920,4,"setError"],[916,14,920,12],[916,15,920,13],[916,20,920,18],[916,21,920,19],[916,22,920,20],[917,6,921,4],[917,12,921,10,"abortController"],[917,27,921,25],[917,30,921,28],[917,34,921,32,"AbortController"],[917,49,921,47],[917,50,921,48],[917,51,921,49],[918,6,922,4,"setAbortController"],[918,24,922,22],[918,25,922,23,"abortController"],[918,40,922,38],[918,41,922,39],[919,6,923,4,"setCompletion"],[919,19,923,17],[919,20,923,18],[919,22,923,20],[919,23,923,21],[920,6,924,4],[920,12,924,10,"res"],[920,15,924,13],[920,18,924,16],[920,24,924,22,"fetch"],[920,29,924,27],[920,30,924,28,"api"],[920,33,924,31],[920,35,924,33],[921,8,925,6,"method"],[921,14,925,12],[921,16,925,14],[921,22,925,20],[922,8,926,6,"body"],[922,12,926,10],[922,14,926,12,"JSON"],[922,18,926,16],[922,19,926,17,"stringify"],[922,28,926,26],[922,29,926,27],[923,10,927,8,"prompt"],[923,16,927,14],[924,10,928,8],[924,13,928,11,"body"],[925,8,929,6],[925,9,929,7],[925,10,929,8],[926,8,930,6,"credentials"],[926,19,930,17],[927,8,931,6,"headers"],[927,15,931,13],[927,17,931,15],[928,10,932,8],[928,24,932,22],[928,26,932,24],[928,44,932,42],[929,10,933,8],[929,13,933,11,"headers"],[930,8,934,6],[930,9,934,7],[931,8,935,6,"signal"],[931,14,935,12],[931,16,935,14,"abortController"],[931,31,935,29],[931,32,935,30,"signal"],[932,6,936,4],[932,7,936,5],[932,8,936,6],[932,9,936,7,"catch"],[932,14,936,12],[932,15,936,14,"err"],[932,18,936,17],[932,22,936,22],[933,8,937,6],[933,14,937,12,"err"],[933,17,937,15],[934,6,938,4],[934,7,938,5],[934,8,938,6],[935,6,939,4],[935,10,939,8,"onResponse"],[935,20,939,18],[935,22,939,20],[936,8,940,6],[936,12,940,10],[937,10,941,8],[937,16,941,14,"onResponse"],[937,26,941,24],[937,27,941,25,"res"],[937,30,941,28],[937,31,941,29],[938,8,942,6],[938,9,942,7],[938,10,942,8],[938,17,942,15,"err"],[938,20,942,18],[938,22,942,20],[939,10,943,8],[939,16,943,14,"err"],[939,19,943,17],[940,8,944,6],[941,6,945,4],[942,6,946,4],[942,10,946,8],[942,11,946,9,"res"],[942,14,946,12],[942,15,946,13,"ok"],[942,17,946,15],[942,19,946,17],[943,8,947,6],[943,14,947,12],[943,18,947,16,"Error"],[943,23,947,21],[943,24,948,8],[943,31,948,14,"res"],[943,34,948,17],[943,35,948,18,"text"],[943,39,948,22],[943,40,948,23],[943,41,948,24],[943,46,948,28],[943,82,949,6],[943,83,949,7],[944,6,950,4],[945,6,951,4],[945,10,951,8],[945,11,951,9,"res"],[945,14,951,12],[945,15,951,13,"body"],[945,19,951,17],[945,21,951,19],[946,8,952,6],[946,14,952,12],[946,18,952,16,"Error"],[946,23,952,21],[946,24,952,22],[946,53,952,51],[946,54,952,52],[947,6,953,4],[948,6,954,4],[948,10,954,8,"result"],[948,16,954,14],[948,19,954,17],[948,21,954,19],[949,6,955,4],[949,12,955,10,"reader"],[949,18,955,16],[949,21,955,19,"res"],[949,24,955,22],[949,25,955,23,"body"],[949,29,955,27],[949,30,955,28,"getReader"],[949,39,955,37],[949,40,955,38],[949,41,955,39],[950,6,956,4],[950,12,956,10,"isComplexMode"],[950,25,956,23],[950,28,956,26,"res"],[950,31,956,29],[950,32,956,30,"headers"],[950,39,956,37],[950,40,956,38,"get"],[950,43,956,41],[950,44,956,42,"COMPLEX_HEADER"],[950,58,956,56],[950,59,956,57],[950,64,956,62],[950,70,956,68],[951,6,957,4],[951,10,957,8,"isComplexMode"],[951,23,957,21],[951,25,957,23],[952,8,958,6],[952,19,958,17],[952,25,958,23],[953,10,958,25,"type"],[953,14,958,29],[954,10,958,31,"value"],[955,8,958,37],[955,9,958,38],[955,13,958,42,"readDataStream"],[955,27,958,56],[955,28,958,57,"reader"],[955,34,958,63],[955,36,958,65],[956,10,959,8,"isAborted"],[956,19,959,17],[956,21,959,19,"isAborted"],[956,22,959,19],[956,27,959,25,"abortController"],[956,42,959,40],[956,47,959,45],[957,8,960,6],[957,9,960,7],[957,10,960,8],[957,12,960,10],[958,10,961,8],[958,18,961,16,"type"],[958,22,961,20],[959,12,962,10],[959,17,962,15],[959,23,962,21],[960,14,962,23],[961,16,963,12,"result"],[961,22,963,18],[961,26,963,22,"value"],[961,31,963,27],[962,16,964,12,"setCompletion"],[962,29,964,25],[962,30,964,26,"result"],[962,36,964,32],[962,37,964,33],[963,16,965,12],[964,14,966,10],[965,12,967,10],[965,17,967,15],[965,23,967,21],[966,14,967,23],[967,16,968,12,"onData"],[967,22,968,18],[967,26,968,22],[967,30,968,26],[967,33,968,29],[967,38,968,34],[967,39,968,35],[967,42,968,38,"onData"],[967,48,968,44],[967,49,968,45,"value"],[967,54,968,50],[967,55,968,51],[968,16,969,12],[969,14,970,10],[970,10,971,8],[971,8,972,6],[972,6,973,4],[972,7,973,5],[972,13,973,11],[973,8,974,6],[973,14,974,12,"decoder"],[973,21,974,19],[973,24,974,22,"createChunkDecoder"],[973,42,974,40],[973,43,974,41],[973,44,974,42],[974,8,975,6],[974,15,975,13],[974,19,975,17],[974,21,975,19],[975,10,976,8],[975,16,976,14],[976,12,976,16,"done"],[976,16,976,20],[977,12,976,22,"value"],[978,10,976,28],[978,11,976,29],[978,14,976,32],[978,20,976,38,"reader"],[978,26,976,44],[978,27,976,45,"read"],[978,31,976,49],[978,32,976,50],[978,33,976,51],[979,10,977,8],[979,14,977,12,"done"],[979,18,977,16],[979,20,977,18],[980,12,978,10],[981,10,979,8],[982,10,980,8,"result"],[982,16,980,14],[982,20,980,18,"decoder"],[982,27,980,25],[982,28,980,26,"value"],[982,33,980,31],[982,34,980,32],[983,10,981,8,"setCompletion"],[983,23,981,21],[983,24,981,22,"result"],[983,30,981,28],[983,31,981,29],[984,10,982,8],[984,14,982,12,"abortController"],[984,29,982,27],[984,34,982,32],[984,38,982,36],[984,40,982,38],[985,12,983,10,"reader"],[985,18,983,16],[985,19,983,17,"cancel"],[985,25,983,23],[985,26,983,24],[985,27,983,25],[986,12,984,10],[987,10,985,8],[988,8,986,6],[989,6,987,4],[990,6,988,4],[990,10,988,8,"onFinish"],[990,18,988,16],[990,20,988,18],[991,8,989,6,"onFinish"],[991,16,989,14],[991,17,989,15,"prompt"],[991,23,989,21],[991,25,989,23,"result"],[991,31,989,29],[991,32,989,30],[992,6,990,4],[993,6,991,4,"setAbortController"],[993,24,991,22],[993,25,991,23],[993,29,991,27],[993,30,991,28],[994,6,992,4],[994,13,992,11,"result"],[994,19,992,17],[995,4,993,2],[995,5,993,3],[995,6,993,4],[995,13,993,11,"err"],[995,16,993,14],[995,18,993,16],[996,6,994,4],[996,10,994,8,"err"],[996,13,994,11],[996,14,994,12,"name"],[996,18,994,16],[996,23,994,21],[996,35,994,33],[996,37,994,35],[997,8,995,6,"setAbortController"],[997,26,995,24],[997,27,995,25],[997,31,995,29],[997,32,995,30],[998,8,996,6],[998,15,996,13],[998,19,996,17],[999,6,997,4],[1000,6,998,4],[1000,10,998,8,"err"],[1000,13,998,11],[1000,25,998,23,"Error"],[1000,30,998,28],[1000,32,998,30],[1001,8,999,6],[1001,12,999,10,"onError"],[1001,19,999,17],[1001,21,999,19],[1002,10,1000,8,"onError"],[1002,17,1000,15],[1002,18,1000,16,"err"],[1002,21,1000,19],[1002,22,1000,20],[1003,8,1001,6],[1004,6,1002,4],[1005,6,1003,4,"setError"],[1005,14,1003,12],[1005,15,1003,13,"err"],[1005,18,1003,16],[1005,19,1003,17],[1006,4,1004,2],[1006,5,1004,3],[1006,14,1004,12],[1007,6,1005,4,"setLoading"],[1007,16,1005,14],[1007,17,1005,15],[1007,22,1005,20],[1007,23,1005,21],[1008,4,1006,2],[1009,2,1007,0],[1011,2,1009,0],[1012,2,1010,0],[1012,11,1010,9,"useCompletion"],[1012,24,1010,22,"useCompletion"],[1012,25,1010,23],[1013,4,1011,2,"api"],[1013,7,1011,5],[1013,10,1011,8],[1013,27,1011,25],[1014,4,1012,2,"id"],[1014,6,1012,4],[1015,4,1013,2,"initialCompletion"],[1015,21,1013,19],[1015,24,1013,22],[1015,26,1013,24],[1016,4,1014,2,"initialInput"],[1016,16,1014,14],[1016,19,1014,17],[1016,21,1014,19],[1017,4,1015,2,"credentials"],[1017,15,1015,13],[1018,4,1016,2,"headers"],[1018,11,1016,9],[1019,4,1017,2,"body"],[1019,8,1017,6],[1020,4,1018,2,"onResponse"],[1020,14,1018,12],[1021,4,1019,2,"onFinish"],[1021,12,1019,10],[1022,4,1020,2,"onError"],[1023,2,1021,0],[1023,3,1021,1],[1023,6,1021,4],[1023,7,1021,5],[1023,8,1021,6],[1023,10,1021,8],[1024,4,1022,2],[1024,10,1022,8,"hookId"],[1024,16,1022,14],[1024,19,1022,17],[1024,23,1022,17,"useId2"],[1024,29,1022,23],[1024,30,1022,23,"useId"],[1024,35,1022,23],[1024,37,1022,24],[1024,38,1022,25],[1025,4,1023,2],[1025,10,1023,8,"completionId"],[1025,22,1023,20],[1025,25,1023,23,"id"],[1025,27,1023,25],[1025,31,1023,29,"hookId"],[1025,37,1023,35],[1026,4,1024,2],[1026,10,1024,8],[1027,6,1024,10,"data"],[1027,10,1024,14],[1028,6,1024,16,"mutate"],[1029,4,1024,23],[1029,5,1024,24],[1029,8,1024,27],[1029,12,1024,27,"useSWR2"],[1029,18,1024,34],[1029,19,1024,34,"default"],[1029,26,1024,34],[1029,28,1024,35],[1029,29,1024,36,"api"],[1029,32,1024,39],[1029,34,1024,41,"completionId"],[1029,46,1024,53],[1029,47,1024,54],[1029,49,1024,56],[1029,53,1024,60],[1029,55,1024,62],[1030,6,1025,4,"fallbackData"],[1030,18,1025,16],[1030,20,1025,18,"initialCompletion"],[1031,4,1026,2],[1031,5,1026,3],[1031,6,1026,4],[1032,4,1027,2],[1032,10,1027,8],[1033,6,1027,10,"data"],[1033,10,1027,14],[1033,12,1027,16,"isLoading"],[1033,21,1027,25],[1033,24,1027,28],[1033,29,1027,33],[1034,6,1027,35,"mutate"],[1034,12,1027,41],[1034,14,1027,43,"mutateLoading"],[1035,4,1027,57],[1035,5,1027,58],[1035,8,1027,61],[1035,12,1027,61,"useSWR2"],[1035,18,1027,68],[1035,19,1027,68,"default"],[1035,26,1027,68],[1035,28,1028,4],[1035,29,1028,5,"completionId"],[1035,41,1028,17],[1035,43,1028,19],[1035,52,1028,28],[1035,53,1028,29],[1035,55,1029,4],[1035,59,1030,2],[1035,60,1030,3],[1036,4,1031,2],[1036,10,1031,8],[1037,6,1031,10,"data"],[1037,10,1031,14],[1037,12,1031,16,"streamData"],[1037,22,1031,26],[1038,6,1031,28,"mutate"],[1038,12,1031,34],[1038,14,1031,36,"mutateStreamData"],[1039,4,1031,53],[1039,5,1031,54],[1039,8,1031,57],[1039,12,1031,57,"useSWR2"],[1039,18,1031,64],[1039,19,1031,64,"default"],[1039,26,1031,64],[1039,28,1031,65],[1039,29,1031,66,"completionId"],[1039,41,1031,78],[1039,43,1031,80],[1039,55,1031,92],[1039,56,1031,93],[1039,58,1031,95],[1039,62,1031,99],[1039,63,1031,100],[1040,4,1032,2],[1040,10,1032,8],[1040,11,1032,9,"error"],[1040,16,1032,14],[1040,18,1032,16,"setError"],[1040,26,1032,24],[1040,27,1032,25],[1040,30,1032,28],[1040,34,1032,28,"useState2"],[1040,40,1032,37],[1040,41,1032,37,"useState"],[1040,49,1032,37],[1040,51,1032,38],[1040,56,1032,43],[1040,57,1032,44],[1040,58,1032,45],[1041,4,1033,2],[1041,10,1033,8,"completion"],[1041,20,1033,18],[1041,23,1033,21,"data"],[1041,27,1033,25],[1042,4,1034,2],[1042,10,1034,8],[1042,11,1034,9,"abortController"],[1042,26,1034,24],[1042,28,1034,26,"setAbortController"],[1042,46,1034,44],[1042,47,1034,45],[1042,50,1034,48],[1042,54,1034,48,"useState2"],[1042,60,1034,57],[1042,61,1034,57,"useState"],[1042,69,1034,57],[1042,71,1034,58],[1042,75,1034,62],[1042,76,1034,63],[1043,4,1035,2],[1043,10,1035,8,"extraMetadataRef"],[1043,26,1035,24],[1043,29,1035,27],[1043,33,1035,27,"useRef2"],[1043,39,1035,34],[1043,40,1035,34,"useRef"],[1043,46,1035,34],[1043,48,1035,35],[1044,6,1036,4,"credentials"],[1044,17,1036,15],[1045,6,1037,4,"headers"],[1045,13,1037,11],[1046,6,1038,4,"body"],[1047,4,1039,2],[1047,5,1039,3],[1047,6,1039,4],[1048,4,1040,2],[1048,8,1040,2,"useEffect2"],[1048,14,1040,12],[1048,15,1040,12,"useEffect"],[1048,24,1040,12],[1048,26,1040,13],[1048,32,1040,19],[1049,6,1041,4,"extraMetadataRef"],[1049,22,1041,20],[1049,23,1041,21,"current"],[1049,30,1041,28],[1049,33,1041,31],[1050,8,1042,6,"credentials"],[1050,19,1042,17],[1051,8,1043,6,"headers"],[1051,15,1043,13],[1052,8,1044,6,"body"],[1053,6,1045,4],[1053,7,1045,5],[1054,4,1046,2],[1054,5,1046,3],[1054,7,1046,5],[1054,8,1046,6,"credentials"],[1054,19,1046,17],[1054,21,1046,19,"headers"],[1054,28,1046,26],[1054,30,1046,28,"body"],[1054,34,1046,32],[1054,35,1046,33],[1054,36,1046,34],[1055,4,1047,2],[1055,10,1047,8,"triggerRequest"],[1055,24,1047,22],[1055,27,1047,25],[1055,31,1047,25,"useCallback2"],[1055,37,1047,37],[1055,38,1047,37,"useCallback"],[1055,49,1047,37],[1055,51,1048,4],[1055,58,1048,11,"prompt"],[1055,64,1048,17],[1055,66,1048,19,"options"],[1055,73,1048,26],[1055,78,1048,31,"callCompletionApi"],[1055,95,1048,48],[1055,96,1048,49],[1056,6,1049,6,"api"],[1056,9,1049,9],[1057,6,1050,6,"prompt"],[1057,12,1050,12],[1058,6,1051,6,"credentials"],[1058,17,1051,17],[1058,19,1051,19,"extraMetadataRef"],[1058,35,1051,35],[1058,36,1051,36,"current"],[1058,43,1051,43],[1058,44,1051,44,"credentials"],[1058,55,1051,55],[1059,6,1052,6,"headers"],[1059,13,1052,13],[1059,15,1052,15],[1060,8,1052,17],[1060,11,1052,20,"extraMetadataRef"],[1060,27,1052,36],[1060,28,1052,37,"current"],[1060,35,1052,44],[1060,36,1052,45,"headers"],[1060,43,1052,52],[1061,8,1052,54],[1061,12,1052,57,"options"],[1061,19,1052,64],[1061,23,1052,68],[1061,27,1052,72],[1061,30,1052,75],[1061,35,1052,80],[1061,36,1052,81],[1061,39,1052,84,"options"],[1061,46,1052,91],[1061,47,1052,92,"headers"],[1061,54,1052,99],[1062,6,1052,100],[1062,7,1052,101],[1063,6,1053,6,"body"],[1063,10,1053,10],[1063,12,1053,12],[1064,8,1054,8],[1064,11,1054,11,"extraMetadataRef"],[1064,27,1054,27],[1064,28,1054,28,"current"],[1064,35,1054,35],[1064,36,1054,36,"body"],[1064,40,1054,40],[1065,8,1055,8],[1065,12,1055,11,"options"],[1065,19,1055,18],[1065,23,1055,22],[1065,27,1055,26],[1065,30,1055,29],[1065,35,1055,34],[1065,36,1055,35],[1065,39,1055,38,"options"],[1065,46,1055,45],[1065,47,1055,46,"body"],[1065,51,1055,50],[1066,6,1056,6],[1066,7,1056,7],[1067,6,1057,6,"setCompletion"],[1067,19,1057,19],[1067,21,1057,22,"completion2"],[1067,32,1057,33],[1067,36,1057,38,"mutate"],[1067,42,1057,44],[1067,43,1057,45,"completion2"],[1067,54,1057,56],[1067,56,1057,58],[1067,61,1057,63],[1067,62,1057,64],[1068,6,1058,6,"setLoading"],[1068,16,1058,16],[1068,18,1058,18,"mutateLoading"],[1068,31,1058,31],[1069,6,1059,6,"setError"],[1069,14,1059,14],[1070,6,1060,6,"setAbortController"],[1070,24,1060,24],[1071,6,1061,6,"onResponse"],[1071,16,1061,16],[1072,6,1062,6,"onFinish"],[1072,14,1062,14],[1073,6,1063,6,"onError"],[1073,13,1063,13],[1074,6,1064,6,"onData"],[1074,12,1064,12],[1074,14,1064,15,"data2"],[1074,19,1064,20],[1074,23,1064,25],[1075,8,1065,8,"mutateStreamData"],[1075,24,1065,24],[1075,25,1065,25],[1075,26,1065,26],[1075,30,1065,29,"streamData"],[1075,40,1065,39],[1075,44,1065,43],[1075,46,1065,45],[1075,49,1065,47],[1075,53,1065,50,"data2"],[1075,58,1065,55],[1075,62,1065,59],[1075,64,1065,61],[1075,66,1065,62],[1075,68,1065,64],[1075,73,1065,69],[1075,74,1065,70],[1076,6,1066,6],[1077,4,1067,4],[1077,5,1067,5],[1077,6,1067,6],[1077,8,1068,4],[1077,9,1069,6,"mutate"],[1077,15,1069,12],[1077,17,1070,6,"mutateLoading"],[1077,30,1070,19],[1077,32,1071,6,"api"],[1077,35,1071,9],[1077,37,1072,6,"extraMetadataRef"],[1077,53,1072,22],[1077,55,1073,6,"setAbortController"],[1077,73,1073,24],[1077,75,1074,6,"onResponse"],[1077,85,1074,16],[1077,87,1075,6,"onFinish"],[1077,95,1075,14],[1077,97,1076,6,"onError"],[1077,104,1076,13],[1077,106,1077,6,"setError"],[1077,114,1077,14],[1077,116,1078,6,"streamData"],[1077,126,1078,16],[1077,128,1079,6,"mutateStreamData"],[1077,144,1079,22],[1077,145,1081,2],[1077,146,1081,3],[1078,4,1082,2],[1078,10,1082,8,"stop"],[1078,14,1082,12],[1078,17,1082,15],[1078,21,1082,15,"useCallback2"],[1078,27,1082,27],[1078,28,1082,27,"useCallback"],[1078,39,1082,27],[1078,41,1082,28],[1078,47,1082,34],[1079,6,1083,4],[1079,10,1083,8,"abortController"],[1079,25,1083,23],[1079,27,1083,25],[1080,8,1084,6,"abortController"],[1080,23,1084,21],[1080,24,1084,22,"abort"],[1080,29,1084,27],[1080,30,1084,28],[1080,31,1084,29],[1081,8,1085,6,"setAbortController"],[1081,26,1085,24],[1081,27,1085,25],[1081,31,1085,29],[1081,32,1085,30],[1082,6,1086,4],[1083,4,1087,2],[1083,5,1087,3],[1083,7,1087,5],[1083,8,1087,6,"abortController"],[1083,23,1087,21],[1083,24,1087,22],[1083,25,1087,23],[1084,4,1088,2],[1084,10,1088,8,"setCompletion"],[1084,23,1088,21],[1084,26,1088,24],[1084,30,1088,24,"useCallback2"],[1084,36,1088,36],[1084,37,1088,36,"useCallback"],[1084,48,1088,36],[1084,50,1089,5,"completion2"],[1084,61,1089,16],[1084,65,1089,21],[1085,6,1090,6,"mutate"],[1085,12,1090,12],[1085,13,1090,13,"completion2"],[1085,24,1090,24],[1085,26,1090,26],[1085,31,1090,31],[1085,32,1090,32],[1086,4,1091,4],[1086,5,1091,5],[1086,7,1092,4],[1086,8,1092,5,"mutate"],[1086,14,1092,11],[1086,15,1093,2],[1086,16,1093,3],[1087,4,1094,2],[1087,10,1094,8,"complete"],[1087,18,1094,16],[1087,21,1094,19],[1087,25,1094,19,"useCallback2"],[1087,31,1094,31],[1087,32,1094,31,"useCallback"],[1087,43,1094,31],[1087,45,1095,4],[1087,52,1095,11,"prompt"],[1087,58,1095,17],[1087,60,1095,19,"options"],[1087,67,1095,26],[1087,72,1095,31],[1088,6,1096,6],[1088,13,1096,13,"triggerRequest"],[1088,27,1096,27],[1088,28,1096,28,"prompt"],[1088,34,1096,34],[1088,36,1096,36,"options"],[1088,43,1096,43],[1088,44,1096,44],[1089,4,1097,4],[1089,5,1097,5],[1089,7,1098,4],[1089,8,1098,5,"triggerRequest"],[1089,22,1098,19],[1089,23,1099,2],[1089,24,1099,3],[1090,4,1100,2],[1090,10,1100,8],[1090,11,1100,9,"input"],[1090,16,1100,14],[1090,18,1100,16,"setInput"],[1090,26,1100,24],[1090,27,1100,25],[1090,30,1100,28],[1090,34,1100,28,"useState2"],[1090,40,1100,37],[1090,41,1100,37,"useState"],[1090,49,1100,37],[1090,51,1100,38,"initialInput"],[1090,63,1100,50],[1090,64,1100,51],[1091,4,1101,2],[1091,10,1101,8,"handleSubmit"],[1091,22,1101,20],[1091,25,1101,23],[1091,29,1101,23,"useCallback2"],[1091,35,1101,35],[1091,36,1101,35,"useCallback"],[1091,47,1101,35],[1091,49,1102,5,"e"],[1091,50,1102,6],[1091,54,1102,11],[1092,6,1103,6,"e"],[1092,7,1103,7],[1092,8,1103,8,"preventDefault"],[1092,22,1103,22],[1092,23,1103,23],[1092,24,1103,24],[1093,6,1104,6],[1093,10,1104,10],[1093,11,1104,11,"input"],[1093,16,1104,16],[1093,18,1105,8],[1094,6,1106,6],[1094,13,1106,13,"complete"],[1094,21,1106,21],[1094,22,1106,22,"input"],[1094,27,1106,27],[1094,28,1106,28],[1095,4,1107,4],[1095,5,1107,5],[1095,7,1108,4],[1095,8,1108,5,"input"],[1095,13,1108,10],[1095,15,1108,12,"complete"],[1095,23,1108,20],[1095,24,1109,2],[1095,25,1109,3],[1096,4,1110,2],[1096,10,1110,8,"handleInputChange"],[1096,27,1110,25],[1096,30,1110,29,"e"],[1096,31,1110,30],[1096,35,1110,35],[1097,6,1111,4,"setInput"],[1097,14,1111,12],[1097,15,1111,13,"e"],[1097,16,1111,14],[1097,17,1111,15,"target"],[1097,23,1111,21],[1097,24,1111,22,"value"],[1097,29,1111,27],[1097,30,1111,28],[1098,4,1112,2],[1098,5,1112,3],[1099,4,1113,2],[1099,11,1113,9],[1100,6,1114,4,"completion"],[1100,16,1114,14],[1101,6,1115,4,"complete"],[1101,14,1115,12],[1102,6,1116,4,"error"],[1102,11,1116,9],[1103,6,1117,4,"setCompletion"],[1103,19,1117,17],[1104,6,1118,4,"stop"],[1104,10,1118,8],[1105,6,1119,4,"input"],[1105,11,1119,9],[1106,6,1120,4,"setInput"],[1106,14,1120,12],[1107,6,1121,4,"handleInputChange"],[1107,23,1121,21],[1108,6,1122,4,"handleSubmit"],[1108,18,1122,16],[1109,6,1123,4,"isLoading"],[1109,15,1123,13],[1110,6,1124,4,"data"],[1110,10,1124,8],[1110,12,1124,10,"streamData"],[1111,4,1125,2],[1111,5,1125,3],[1112,2,1126,0],[1114,2,1128,0],[1116,2,1130,0],[1116,11,1130,9,"experimental_useAssistant"],[1116,36,1130,34,"experimental_useAssistant"],[1116,37,1130,35],[1117,4,1131,2,"api"],[1117,7,1131,5],[1118,4,1132,2,"threadId"],[1118,12,1132,10],[1118,14,1132,12,"threadIdParam"],[1118,27,1132,25],[1119,4,1133,2,"credentials"],[1119,15,1133,13],[1120,4,1134,2,"headers"],[1120,11,1134,9],[1121,4,1135,2,"body"],[1121,8,1135,6],[1122,4,1136,2,"onError"],[1123,2,1137,0],[1123,3,1137,1],[1123,5,1137,3],[1124,4,1138,2],[1124,10,1138,8],[1124,11,1138,9,"messages"],[1124,19,1138,17],[1124,21,1138,19,"setMessages"],[1124,32,1138,30],[1124,33,1138,31],[1124,36,1138,34],[1124,40,1138,34,"useState3"],[1124,46,1138,43],[1124,47,1138,43,"useState"],[1124,55,1138,43],[1124,57,1138,44],[1124,59,1138,46],[1124,60,1138,47],[1125,4,1139,2],[1125,10,1139,8],[1125,11,1139,9,"input"],[1125,16,1139,14],[1125,18,1139,16,"setInput"],[1125,26,1139,24],[1125,27,1139,25],[1125,30,1139,28],[1125,34,1139,28,"useState3"],[1125,40,1139,37],[1125,41,1139,37,"useState"],[1125,49,1139,37],[1125,51,1139,38],[1125,53,1139,40],[1125,54,1139,41],[1126,4,1140,2],[1126,10,1140,8],[1126,11,1140,9,"threadId"],[1126,19,1140,17],[1126,21,1140,19,"setThreadId"],[1126,32,1140,30],[1126,33,1140,31],[1126,36,1140,34],[1126,40,1140,34,"useState3"],[1126,46,1140,43],[1126,47,1140,43,"useState"],[1126,55,1140,43],[1126,57,1140,44],[1126,62,1140,49],[1126,63,1140,50],[1126,64,1140,51],[1127,4,1141,2],[1127,10,1141,8],[1127,11,1141,9,"status"],[1127,17,1141,15],[1127,19,1141,17,"setStatus"],[1127,28,1141,26],[1127,29,1141,27],[1127,32,1141,30],[1127,36,1141,30,"useState3"],[1127,42,1141,39],[1127,43,1141,39,"useState"],[1127,51,1141,39],[1127,53,1141,40],[1127,71,1141,58],[1127,72,1141,59],[1128,4,1142,2],[1128,10,1142,8],[1128,11,1142,9,"error"],[1128,16,1142,14],[1128,18,1142,16,"setError"],[1128,26,1142,24],[1128,27,1142,25],[1128,30,1142,28],[1128,34,1142,28,"useState3"],[1128,40,1142,37],[1128,41,1142,37,"useState"],[1128,49,1142,37],[1128,51,1142,38],[1128,56,1142,43],[1128,57,1142,44],[1128,58,1142,45],[1129,4,1143,2],[1129,10,1143,8,"handleInputChange"],[1129,27,1143,25],[1129,30,1143,29,"event"],[1129,35,1143,34],[1129,39,1143,39],[1130,6,1144,4,"setInput"],[1130,14,1144,12],[1130,15,1144,13,"event"],[1130,20,1144,18],[1130,21,1144,19,"target"],[1130,27,1144,25],[1130,28,1144,26,"value"],[1130,33,1144,31],[1130,34,1144,32],[1131,4,1145,2],[1131,5,1145,3],[1132,4,1146,2],[1132,10,1146,8,"submitMessage"],[1132,23,1146,21],[1132,26,1146,24],[1132,32,1146,24,"submitMessage"],[1132,33,1146,31,"event"],[1132,38,1146,36],[1132,40,1146,38,"requestOptions"],[1132,54,1146,52],[1132,59,1146,57],[1133,6,1147,4],[1133,10,1147,8,"_a"],[1133,12,1147,10],[1133,14,1147,12,"_b"],[1133,16,1147,14],[1134,6,1148,4],[1134,7,1148,5,"_a"],[1134,9,1148,7],[1134,12,1148,10,"event"],[1134,17,1148,15],[1134,21,1148,19],[1134,25,1148,23],[1134,28,1148,26],[1134,33,1148,31],[1134,34,1148,32],[1134,37,1148,35,"event"],[1134,42,1148,40],[1134,43,1148,41,"preventDefault"],[1134,57,1148,55],[1134,62,1148,60],[1134,66,1148,64],[1134,69,1148,67],[1134,74,1148,72],[1134,75,1148,73],[1134,78,1148,76,"_a"],[1134,80,1148,78],[1134,81,1148,79,"call"],[1134,85,1148,83],[1134,86,1148,84,"event"],[1134,91,1148,89],[1134,92,1148,90],[1135,6,1149,4],[1135,10,1149,8,"input"],[1135,15,1149,13],[1135,20,1149,18],[1135,22,1149,20],[1135,24,1149,22],[1136,8,1150,6],[1137,6,1151,4],[1138,6,1152,4,"setStatus"],[1138,15,1152,13],[1138,16,1152,14],[1138,29,1152,27],[1138,30,1152,28],[1139,6,1153,4,"setMessages"],[1139,17,1153,15],[1139,18,1153,17,"messages2"],[1139,27,1153,26],[1139,31,1153,31],[1139,32,1154,6],[1139,35,1154,9,"messages2"],[1139,44,1154,18],[1139,46,1155,6],[1140,8,1155,8,"id"],[1140,10,1155,10],[1140,12,1155,12],[1140,14,1155,14],[1141,8,1155,16,"role"],[1141,12,1155,20],[1141,14,1155,22],[1141,20,1155,28],[1142,8,1155,30,"content"],[1142,15,1155,37],[1142,17,1155,39,"input"],[1143,6,1155,45],[1143,7,1155,46],[1143,8,1156,5],[1143,9,1156,6],[1144,6,1157,4,"setInput"],[1144,14,1157,12],[1144,15,1157,13],[1144,17,1157,15],[1144,18,1157,16],[1145,6,1158,4],[1145,12,1158,10,"result"],[1145,18,1158,16],[1145,21,1158,19],[1145,27,1158,25,"fetch"],[1145,32,1158,30],[1145,33,1158,31,"api"],[1145,36,1158,34],[1145,38,1158,36],[1146,8,1159,6,"method"],[1146,14,1159,12],[1146,16,1159,14],[1146,22,1159,20],[1147,8,1160,6,"credentials"],[1147,19,1160,17],[1148,8,1161,6,"headers"],[1148,15,1161,13],[1148,17,1161,15],[1149,10,1161,17],[1149,24,1161,31],[1149,26,1161,33],[1149,44,1161,51],[1150,10,1161,53],[1150,13,1161,56,"headers"],[1151,8,1161,64],[1151,9,1161,65],[1152,8,1162,6,"body"],[1152,12,1162,10],[1152,14,1162,12,"JSON"],[1152,18,1162,16],[1152,19,1162,17,"stringify"],[1152,28,1162,26],[1152,29,1162,27],[1153,10,1163,8],[1153,13,1163,11,"body"],[1153,17,1163,15],[1154,10,1164,8],[1155,10,1165,8,"threadId"],[1155,18,1165,16],[1155,20,1165,18],[1155,21,1165,19,"_b"],[1155,23,1165,21],[1155,26,1165,24,"threadIdParam"],[1155,39,1165,37],[1155,43,1165,41],[1155,47,1165,45],[1155,50,1165,48,"threadIdParam"],[1155,63,1165,61],[1155,66,1165,64,"threadId"],[1155,74,1165,72],[1155,79,1165,77],[1155,83,1165,81],[1155,86,1165,84,"_b"],[1155,88,1165,86],[1155,91,1165,89],[1155,95,1165,93],[1156,10,1166,8,"message"],[1156,17,1166,15],[1156,19,1166,17,"input"],[1156,24,1166,22],[1157,10,1167,8],[1158,10,1168,8,"data"],[1158,14,1168,12],[1158,16,1168,14,"requestOptions"],[1158,30,1168,28],[1158,34,1168,32],[1158,38,1168,36],[1158,41,1168,39],[1158,46,1168,44],[1158,47,1168,45],[1158,50,1168,48,"requestOptions"],[1158,64,1168,62],[1158,65,1168,63,"data"],[1159,8,1169,6],[1159,9,1169,7],[1160,6,1170,4],[1160,7,1170,5],[1160,8,1170,6],[1161,6,1171,4],[1161,10,1171,8,"result"],[1161,16,1171,14],[1161,17,1171,15,"body"],[1161,21,1171,19],[1161,25,1171,23],[1161,29,1171,27],[1161,31,1171,29],[1162,8,1172,6],[1162,14,1172,12],[1162,18,1172,16,"Error"],[1162,23,1172,21],[1162,24,1172,22],[1162,53,1172,51],[1162,54,1172,52],[1163,6,1173,4],[1164,6,1174,4],[1164,10,1174,8],[1165,8,1175,6],[1165,19,1175,17],[1165,25,1175,23],[1166,10,1175,25,"type"],[1166,14,1175,29],[1167,10,1175,31,"value"],[1168,8,1175,37],[1168,9,1175,38],[1168,13,1175,42,"readDataStream"],[1168,27,1175,56],[1168,28,1176,8,"result"],[1168,34,1176,14],[1168,35,1176,15,"body"],[1168,39,1176,19],[1168,40,1176,20,"getReader"],[1168,49,1176,29],[1168,50,1176,30],[1168,51,1177,6],[1168,52,1177,7],[1168,54,1177,9],[1169,10,1178,8],[1169,18,1178,16,"type"],[1169,22,1178,20],[1170,12,1179,10],[1170,17,1179,15],[1170,36,1179,34],[1171,14,1179,36],[1172,16,1180,12,"setMessages"],[1172,27,1180,23],[1172,28,1180,25,"messages2"],[1172,37,1180,34],[1172,41,1180,39],[1172,42,1181,14],[1172,45,1181,17,"messages2"],[1172,54,1181,26],[1172,56,1182,14],[1173,18,1183,16,"id"],[1173,20,1183,18],[1173,22,1183,20,"value"],[1173,27,1183,25],[1173,28,1183,26,"id"],[1173,30,1183,28],[1174,18,1184,16,"role"],[1174,22,1184,20],[1174,24,1184,22,"value"],[1174,29,1184,27],[1174,30,1184,28,"role"],[1174,34,1184,32],[1175,18,1185,16,"content"],[1175,25,1185,23],[1175,27,1185,25,"value"],[1175,32,1185,30],[1175,33,1185,31,"content"],[1175,40,1185,38],[1175,41,1185,39],[1175,42,1185,40],[1175,43,1185,41],[1175,44,1185,42,"text"],[1175,48,1185,46],[1175,49,1185,47,"value"],[1176,16,1186,14],[1176,17,1186,15],[1176,18,1187,13],[1176,19,1187,14],[1177,16,1188,12],[1178,14,1189,10],[1179,12,1190,10],[1179,17,1190,15],[1179,31,1190,29],[1180,14,1190,31],[1181,16,1191,12,"setMessages"],[1181,27,1191,23],[1181,28,1191,25,"messages2"],[1181,37,1191,34],[1181,41,1191,39],[1182,18,1192,14],[1182,22,1192,18,"_a2"],[1182,25,1192,21],[1183,18,1193,14],[1183,25,1193,21],[1183,26,1194,16],[1183,29,1194,19,"messages2"],[1183,38,1194,28],[1183,40,1195,16],[1184,20,1196,18,"id"],[1184,22,1196,20],[1184,24,1196,22],[1184,25,1196,23,"_a2"],[1184,28,1196,26],[1184,31,1196,29,"value"],[1184,36,1196,34],[1184,37,1196,35,"id"],[1184,39,1196,37],[1184,44,1196,42],[1184,48,1196,46],[1184,51,1196,49,"_a2"],[1184,54,1196,52],[1184,57,1196,55],[1184,59,1196,57],[1185,20,1197,18,"role"],[1185,24,1197,22],[1185,26,1197,24],[1185,32,1197,30],[1186,20,1198,18,"content"],[1186,27,1198,25],[1186,29,1198,27],[1186,31,1198,29],[1187,20,1199,18,"data"],[1187,24,1199,22],[1187,26,1199,24,"value"],[1187,31,1199,29],[1187,32,1199,30,"data"],[1188,18,1200,16],[1188,19,1200,17],[1188,20,1201,15],[1189,16,1202,12],[1189,17,1202,13],[1189,18,1202,14],[1190,16,1203,12],[1191,14,1204,10],[1192,12,1205,10],[1192,17,1205,15],[1192,41,1205,39],[1193,14,1205,41],[1194,16,1206,12,"setThreadId"],[1194,27,1206,23],[1194,28,1206,24,"value"],[1194,33,1206,29],[1194,34,1206,30,"threadId"],[1194,42,1206,38],[1194,43,1206,39],[1195,16,1207,12,"setMessages"],[1195,27,1207,23],[1195,28,1207,25,"messages2"],[1195,37,1207,34],[1195,41,1207,39],[1196,18,1208,14],[1196,24,1208,20,"lastMessage"],[1196,35,1208,31],[1196,38,1208,34,"messages2"],[1196,47,1208,43],[1196,48,1208,44,"messages2"],[1196,57,1208,53],[1196,58,1208,54,"length"],[1196,64,1208,60],[1196,67,1208,63],[1196,68,1208,64],[1196,69,1208,65],[1197,18,1209,14,"lastMessage"],[1197,29,1209,25],[1197,30,1209,26,"id"],[1197,32,1209,28],[1197,35,1209,31,"value"],[1197,40,1209,36],[1197,41,1209,37,"messageId"],[1197,50,1209,46],[1198,18,1210,14],[1198,25,1210,21],[1198,26,1210,22],[1198,29,1210,25,"messages2"],[1198,38,1210,34],[1198,39,1210,35,"slice"],[1198,44,1210,40],[1198,45,1210,41],[1198,46,1210,42],[1198,48,1210,44,"messages2"],[1198,57,1210,53],[1198,58,1210,54,"length"],[1198,64,1210,60],[1198,67,1210,63],[1198,68,1210,64],[1198,69,1210,65],[1198,71,1210,67,"lastMessage"],[1198,82,1210,78],[1198,83,1210,79],[1199,16,1211,12],[1199,17,1211,13],[1199,18,1211,14],[1200,16,1212,12],[1201,14,1213,10],[1202,12,1214,10],[1202,17,1214,15],[1202,24,1214,22],[1203,14,1214,24],[1204,16,1215,12],[1204,22,1215,18,"errorObj"],[1204,30,1215,26],[1204,33,1215,29],[1204,37,1215,33,"Error"],[1204,42,1215,38],[1204,43,1215,39,"value"],[1204,48,1215,44],[1204,49,1215,45],[1205,16,1216,12,"setError"],[1205,24,1216,20],[1205,25,1216,21,"errorObj"],[1205,33,1216,29],[1205,34,1216,30],[1206,16,1217,12],[1207,14,1218,10],[1208,10,1219,8],[1209,8,1220,6],[1210,6,1221,4],[1210,7,1221,5],[1210,8,1221,6],[1210,15,1221,13,"error2"],[1210,21,1221,19],[1210,23,1221,21],[1211,8,1222,6],[1211,12,1222,10,"onError"],[1211,19,1222,17],[1211,23,1222,21,"error2"],[1211,29,1222,27],[1211,41,1222,39,"Error"],[1211,46,1222,44],[1211,48,1222,46],[1212,10,1223,8,"onError"],[1212,17,1223,15],[1212,18,1223,16,"error2"],[1212,24,1223,22],[1212,25,1223,23],[1213,8,1224,6],[1214,8,1225,6,"setError"],[1214,16,1225,14],[1214,17,1225,15,"error2"],[1214,23,1225,21],[1214,24,1225,22],[1215,6,1226,4],[1216,6,1227,4,"setStatus"],[1216,15,1227,13],[1216,16,1227,14],[1216,34,1227,32],[1216,35,1227,33],[1217,4,1228,2],[1217,5,1228,3],[1218,4,1229,2],[1218,11,1229,9],[1219,6,1230,4,"messages"],[1219,14,1230,12],[1220,6,1231,4,"threadId"],[1220,14,1231,12],[1221,6,1232,4,"input"],[1221,11,1232,9],[1222,6,1233,4,"setInput"],[1222,14,1233,12],[1223,6,1234,4,"handleInputChange"],[1223,23,1234,21],[1224,6,1235,4,"submitMessage"],[1224,19,1235,17],[1225,6,1236,4,"status"],[1225,12,1236,10],[1226,6,1237,4,"error"],[1227,4,1238,2],[1227,5,1238,3],[1228,2,1239,0],[1229,0,1239,1],[1229,3]],"functionMap":{"names":["<global>","textStreamPart.parse","functionCallStreamPart.parse","dataStreamPart.parse","errorStreamPart.parse","assistantMessageStreamPart.parse","value.content.every$argument_0","assistantControlDataStreamPart.parse","dataMessageStreamPart.parse","toolCallStreamPart.parse","value.tool_calls.some$argument_0","messageAnnotationsStreamPart.parse","streamParts.map$argument_0","parseStreamPart","concatChunks","readDataStream","decoder.decode.split.filter$argument_0","createChunkDecoder","<anonymous>","assignAnnotationsToMessage","parseComplexResponse","readDataStream$argument_1.isAborted","messagePrefixKeys.forEach$argument_0","filter.map$argument_0","callChatApi","fetch._catch$argument_0","parseComplexResponse$argument_0.onFinish","processChatStream","toolCalls.some$argument_0","fixFunctionCallArguments2","getStreamedResponse","chatRequest.messages.map$argument_0","readRow","callChatApi$argument_0.abortController","callChatApi$argument_0.appendMessage","callChatApi$argument_0.restoreMessagesOnFailure","callChatApi$argument_0.onUpdate","useChat","useEffect$argument_0","triggerRequest","processChatStream$argument_0.getStreamedResponse","processChatStream$argument_0.updateChatRequest","processChatStream$argument_0.getCurrentMessages","append","reload","stop","setMessages","handleSubmit","handleInputChange","callCompletionApi","useCompletion","useEffect2$argument_0","useCallback2$argument_0","callCompletionApi$argument_0.setCompletion","callCompletionApi$argument_0.onData","experimental_useAssistant","submitMessage","setMessages$argument_0"],"mappings":"AAA;SCU;GDK;SEK;GFU;SGK;GHK;SIK;GJK;SKK;MCE,mOD;GLU;SOK;GPa;SQK;GRU;SSK;gNCC;KDE;GTS;SWK;GXK;iCYmC,mBZ;sBaC;Cba;AcI;CdS;AeC;iGCoB,qBD;CfS;AiBQ;WCG;KDI;SCE;+EFC,qBE;GDE;CjBC;AmBI;CnBI;AoBC;mBFM,gCE;eCQ,iFD;gCEqE;OFI;+FGE;MHE;CpBY;AwBG;WC2B;GDG;MEwB;OFI;CxBgD;A2BG;0DCoC,0CD;sCEkB;OFuB;C3BoC;0B8BG;ICK;MDW;IEW;KFQ;qBGyC,gCH;IIC;KJE;IKC;KLE;IME;KNG;C9BI;AqCC;YCgC;GDE;YCO;GDM;IEE;+BCO;WDa;6BEG;WFE;8BGC,yBH;KFe;IMqB;KNqB;IOI;KP8B;2BQG;GRK;ISE;KTG;IUK;KVmB;4BWG;GXE;CrCe;AiDO;axBiC;KwBE;mB5BqB,8B4B;CjDgD;AkDG;aC8B;GDM;IEE;qBCS,2CD;cEO;OFE;MFC;4BEe;GFK;IEE;KFE;IEI;KFE;IEK;KFK;4BFG;GEE;ClDc;AuDI;4BPa;GOE;wBCC;gBCO;KDG;wBCwB;aDO;wBCI;aDW;wBCK;aDI;GDiB;CvDW"},"hasCjsExports":false},"type":"js/module"}]}